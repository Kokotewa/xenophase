#include "Protocol.h"
#include "packet/all.h"


static ProtocolImpl ProtocolInstance("Character 2013-03-12 Thai");
void ProtocolImpl::InitInstance()
{
//	REGN(100, 55, HEADER_CA_LOGIN, PROTOID_CA_LOGIN, PACKET_CA_LOGIN);
	REGN(101, 17, HEADER_CH_ENTER, PROTOID_CH_ENTER, PACKET_CH_ENTER);
	REGN(102, 3, HEADER_CH_SELECT_CHAR, PROTOID_CH_SELECT_CHAR, PACKET_CH_SELECT_CHAR);
	REGN(103, 37, HEADER_CH_MAKE_CHAR, PROTOID_CH_MAKE_CHAR, PACKET_CH_MAKE_CHAR);
	REGN(104, 46, HEADER_CH_DELETE_CHAR, PROTOID_CH_DELETE_CHAR, PACKET_CH_DELETE_CHAR);
//	REGV(105, 47, HEADER_AC_ACCEPT_LOGIN, PROTOID_AC_ACCEPT_LOGIN, PACKET_AC_ACCEPT_LOGIN);
//	REGN(106, 23, HEADER_AC_REFUSE_LOGIN, PROTOID_AC_REFUSE_LOGIN, PACKET_AC_REFUSE_LOGIN);
	REGN(0x7FFF, 4, HEADER_HC_AID_RAW, PROTOID_HC_AID, PACKET_HC_AID_RAW);
	REGV(107, 7, HEADER_HC_ACCEPT_ENTER, PROTOID_HC_ACCEPT_ENTER, PACKET_HC_ACCEPT_ENTER_THAI20130312);
	REGN(108, 3, HEADER_HC_REFUSE_ENTER, PROTOID_HC_REFUSE_ENTER, PACKET_HC_REFUSE_ENTER);
	REGN(109, 118, HEADER_HC_ACCEPT_MAKECHAR, PROTOID_HC_ACCEPT_MAKECHAR, PACKET_HC_ACCEPT_MAKECHAR_THAI20130312);
	REGN(110, 3, HEADER_HC_REFUSE_MAKECHAR, PROTOID_HC_REFUSE_MAKECHAR, PACKET_HC_REFUSE_MAKECHAR);
	REGN(111, 2, HEADER_HC_ACCEPT_DELETECHAR, PROTOID_HC_ACCEPT_DELETECHAR, PACKET_HC_ACCEPT_DELETECHAR);
	REGN(112, 3, HEADER_HC_REFUSE_DELETECHAR, PROTOID_HC_REFUSE_DELETECHAR, PACKET_HC_REFUSE_DELETECHAR);
	REGN(113, 28, HEADER_HC_NOTIFY_ZONESVR, PROTOID_HC_NOTIFY_ZONESVR, PACKET_HC_NOTIFY_ZONESVR);
//	REGN(114, 10, HEADER_CZ_USE_SKILL, PROTOID_CZ_USE_SKILL, PACKET_CZ_USE_SKILL); // nonstandard
//	REGN(0x7FFE, 4, HEADER_ZC_AID_RAW, PROTOID_ZC_AID, PACKET_ZC_AID_RAW);
//	REGN(115, 11, HEADER_ZC_ACCEPT_ENTER, PROTOID_ZC_ACCEPT_ENTER, PACKET_ZC_ACCEPT_ENTER);
//	REGN(116, 3, HEADER_ZC_REFUSE_ENTER, PROTOID_ZC_REFUSE_ENTER, PACKET_ZC_REFUSE_ENTER);
//	REGV(117, 11, HEADER_ZC_NOTIFY_INITCHAR, PROTOID_ZC_NOTIFY_INITCHAR, PACKET_ZC_NOTIFY_INITCHAR);
//	REGN(118, 9, HEADER_ZC_NOTIFY_UPDATECHAR, PROTOID_ZC_NOTIFY_UPDATECHAR, PACKET_ZC_NOTIFY_UPDATECHAR);
//	REGN(119, 5, HEADER_ZC_NOTIFY_UPDATEPLAYER, PROTOID_ZC_NOTIFY_UPDATEPLAYER, PACKET_ZC_NOTIFY_UPDATEPLAYER);
//	REGN(120, 55, HEADER_ZC_NOTIFY_STANDENTRY, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY_2009);
//	REGN(121, 53, HEADER_ZC_NOTIFY_NEWENTRY); //TODO
//	REGN(122, 58, HEADER_ZC_NOTIFY_ACTENTRY, PROTOID_ZC_NOTIFY_ACTENTRY, PACKET_ZC_NOTIFY_ACTENTRY);
//	REGN(123, 60, HEADER_ZC_NOTIFY_MOVEENTRY); //TODO
//	REGN(124, 44, HEADER_ZC_NOTIFY_STANDENTRY_NPC, PROTOID_ZC_NOTIFY_STANDENTRY_NPC, PACKET_ZC_NOTIFY_STANDENTRY_NPC_2010);
//	REGN(125, 2, HEADER_CZ_NOTIFY_ACTORINIT, PROTOID_CZ_NOTIFY_ACTORINIT, PACKET_CZ_NOTIFY_ACTORINIT);
//	REGN(126, 90, HEADER_CZ_USE_SKILL_TOGROUND_WITHTALKBOX, PROTOID_CZ_USE_SKILL_TOGROUND_WITHTALKBOX, PACKET_CZ_USE_SKILL_TOGROUND_WITHTALKBOX); // nonstandard
//	REGN(127, 6, HEADER_ZC_NOTIFY_TIME, PROTOID_ZC_NOTIFY_TIME, PACKET_ZC_NOTIFY_TIME);
//	REGN(128, 7, HEADER_ZC_NOTIFY_VANISH, PROTOID_ZC_NOTIFY_VANISH, PACKET_ZC_NOTIFY_VANISH);
	REGN(129, 3, HEADER_SC_NOTIFY_BAN, PROTOID_SC_NOTIFY_BAN, PACKET_SC_NOTIFY_BAN);
//	REGN(130, 2, HEADER_CZ_REQUEST_QUIT, PROTOID_CZ_REQUEST_QUIT, PACKET_CZ_REQUEST_QUIT);
//	REGN(131, 2, HEADER_ZC_ACCEPT_QUIT, PROTOID_ZC_ACCEPT_QUIT, PACKET_ZC_ACCEPT_QUIT);
//	REGN(132, 2, HEADER_ZC_REFUSE_QUIT, PROTOID_ZC_REFUSE_QUIT, PACKET_ZC_REFUSE_QUIT);
//	REGN(133, 5, HEADER_CZ_CHANGE_DIRECTION, PROTOID_CZ_CHANGE_DIRECTION, PACKET_CZ_CHANGE_DIRECTION); // nonstandard
//	REGN(134, 16, HEADER_ZC_NOTIFY_MOVE, PROTOID_ZC_NOTIFY_MOVE, PACKET_ZC_NOTIFY_MOVE);
//	REGN(135, 12, HEADER_ZC_NOTIFY_PLAYERMOVE, PROTOID_ZC_NOTIFY_PLAYERMOVE, PACKET_ZC_NOTIFY_PLAYERMOVE);
//	REGN(136, 10, HEADER_ZC_STOPMOVE, PROTOID_ZC_STOPMOVE, PACKET_ZC_STOPMOVE);
//	REGN(137, 6, HEADER_CZ_REQUEST_TIME, PROTOID_CZ_REQUEST_TIME, PACKET_CZ_REQUEST_TIME); // nonstandard
//	REGN(138, 29, HEADER_ZC_NOTIFY_ACT, PROTOID_ZC_NOTIFY_ACT, PACKET_ZC_NOTIFY_ACT);
//	REGN(139, 23, HEADER_ZC_NOTIFY_ACT_POSITION, PROTOID_ZC_NOTIFY_ACT_POSITION, PACKET_ZC_NOTIFY_ACT_POSITION);
//	REGN(140, 6, HEADER_CZ_REQNAME, PROTOID_CZ_REQNAME, PACKET_CZ_REQNAME); // nonstandard
//	REGV(141, 8, HEADER_ZC_NOTIFY_CHAT, PROTOID_ZC_NOTIFY_CHAT, PACKET_ZC_NOTIFY_CHAT);
//	REGV(142, 4, HEADER_ZC_NOTIFY_PLAYERCHAT, PROTOID_ZC_NOTIFY_PLAYERCHAT, PACKET_ZC_NOTIFY_PLAYERCHAT);
//	REGN(143, 6, HEADER_SC_ENTRY_ACK, PROTOID_SC_ENTRY_ACK, PACKET_SC_ENTRY_ACK);
//	REGN(144, 7, HEADER_CZ_CONTACTNPC, PROTOID_CZ_CONTACTNPC, PACKET_CZ_CONTACTNPC);
//	REGN(145, 22, HEADER_ZC_NPCACK_MAPMOVE, PROTOID_ZC_NPCACK_MAPMOVE, PACKET_ZC_NPCACK_MAPMOVE);
//	REGN(146, 28, HEADER_ZC_NPCACK_SERVERMOVE, PROTOID_ZC_NPCACK_SERVERMOVE, PACKET_ZC_NPCACK_SERVERMOVE);
//	REGN(147, 2, HEADER_ZC_NPCACK_ENABLE, PROTOID_ZC_NPCACK_ENABLE, PACKET_ZC_NPCACK_ENABLE);
//	REGN(148, 8, HEADER_CZ_MOVE_ITEM_FROM_BODY_TO_STORE, PROTOID_CZ_MOVE_ITEM_FROM_BODY_TO_STORE, PACKET_CZ_MOVE_ITEM_FROM_BODY_TO_STORE); // nonstandard
//	REGN(149, 30, HEADER_ZC_ACK_REQNAME, PROTOID_ZC_ACK_REQNAME, PACKET_ZC_ACK_REQNAME);
//	REGV(150, 28, HEADER_CZ_WHISPER, PROTOID_CZ_WHISPER, PACKET_CZ_WHISPER);
//	REGV(151, 32, HEADER_ZC_WHISPER, PROTOID_ZC_WHISPER, PACKET_ZC_WHISPER__KRO20061023);
//	REGN(152, 3, HEADER_ZC_ACK_WHISPER, PROTOID_ZC_ACK_WHISPER, PACKET_ZC_ACK_WHISPER);
//	REGV(153, 4, HEADER_CZ_BROADCAST, PROTOID_CZ_BROADCAST, PACKET_CZ_BROADCAST);
//	REGV(154, 4, HEADER_ZC_BROADCAST, PROTOID_ZC_BROADCAST, PACKET_ZC_BROADCAST);
//	REGN(155, 19, HEADER_CZ_ENTER, PROTOID_CZ_ENTER, PACKET_CZ_ENTER); // nonstandard
//	REGN(156, 9, HEADER_ZC_CHANGE_DIRECTION, PROTOID_ZC_CHANGE_DIRECTION, PACKET_ZC_CHANGE_DIRECTION);
//	REGN(157, 17, HEADER_ZC_ITEM_ENTRY, PROTOID_ZC_ITEM_ENTRY, PACKET_ZC_ITEM_ENTRY);
//	REGN(158, 17, HEADER_ZC_ITEM_FALL_ENTRY, PROTOID_ZC_ITEM_FALL_ENTRY, PACKET_ZC_ITEM_FALL_ENTRY);
//	REGN(159, 8, HEADER_CZ_USE_ITEM, PROTOID_CZ_USE_ITEM, PACKET_CZ_USE_ITEM); // nonstandard
//	REGN(160, 23, HEADER_ZC_ITEM_PICKUP_ACK, PROTOID_ZC_ITEM_PICKUP_ACK, PACKET_ZC_ITEM_PICKUP_ACK);
//	REGN(161, 6, HEADER_ZC_ITEM_DISAPPEAR, PROTOID_ZC_ITEM_DISAPPEAR, PACKET_ZC_ITEM_DISAPPEAR);
//	REGN(162, 6, HEADER_CZ_REQNAME_BYGID, PROTOID_CZ_REQNAME_BYGID, PACKET_CZ_REQNAME_BYGID); // nonstandard
//	REGV(163, 4, HEADER_ZC_NORMAL_ITEMLIST, PROTOID_ZC_NORMAL_ITEMLIST, PACKET_ZC_NORMAL_ITEMLIST);
//	REGV(164, 4, HEADER_ZC_EQUIPMENT_ITEMLIST, PROTOID_ZC_EQUIPMENT_ITEMLIST, PACKET_ZC_EQUIPMENT_ITEMLIST);
//	REGV(165, 4, HEADER_ZC_STORE_NORMAL_ITEMLIST, PROTOID_ZC_STORE_NORMAL_ITEMLIST, PACKET_ZC_STORE_NORMAL_ITEMLIST);
//	REGV(166, 4, HEADER_ZC_STORE_EQUIPMENT_ITEMLIST, PROTOID_ZC_STORE_EQUIPMENT_ITEMLIST, PACKET_ZC_STORE_EQUIPMENT_ITEMLIST);
//	REGN(167, 5, HEADER_CZ_REQUEST_MOVE, PROTOID_CZ_REQUEST_MOVE, PACKET_CZ_REQUEST_MOVE); // nonstandard
//	REGN(168, 7, HEADER_ZC_USE_ITEM_ACK, PROTOID_ZC_USE_ITEM_ACK, PACKET_ZC_USE_ITEM_ACK);
//	REGN(169, 6, HEADER_CZ_REQ_WEAR_EQUIP, PROTOID_CZ_REQ_WEAR_EQUIP, PACKET_CZ_REQ_WEAR_EQUIP);
//	REGN(170, 9, HEADER_ZC_REQ_WEAR_EQUIP_ACK); //TODO
//	REGN(171, 4, HEADER_CZ_REQ_TAKEOFF_EQUIP, PROTOID_CZ_REQ_TAKEOFF_EQUIP, PACKET_CZ_REQ_TAKEOFF_EQUIP);
//	REGN(172, 7, HEADER_ZC_REQ_TAKEOFF_EQUIP_ACK, PROTOID_ZC_REQ_TAKEOFF_EQUIP_ACK, PACKET_ZC_REQ_TAKEOFF_EQUIP_ACK);
//	REGN(173, 4, HEADER_CZ_REQ_ITEM_EXPLANATION_BYNAME, PROTOID_CZ_REQ_ITEM_EXPLANATION_BYNAME, PACKET_CZ_REQ_ITEM_EXPLANATION_BYNAME); // no-len
//	REGV(174, 4, HEADER_ZC_REQ_ITEM_EXPLANATION_ACK, PROTOID_ZC_REQ_ITEM_EXPLANATION_ACK, PACKET_ZC_REQ_ITEM_EXPLANATION_ACK);
//	REGN(175, 6, HEADER_ZC_ITEM_THROW_ACK, PROTOID_ZC_ITEM_THROW_ACK, PACKET_ZC_ITEM_THROW_ACK);
//	REGN(176, 8, HEADER_ZC_PAR_CHANGE, PROTOID_ZC_PAR_CHANGE, PACKET_ZC_PAR_CHANGE);
//	REGN(177, 8, HEADER_ZC_LONGPAR_CHANGE, PROTOID_ZC_LONGPAR_CHANGE, PACKET_ZC_LONGPAR_CHANGE);
//	REGN(178, 3, HEADER_CZ_RESTART, PROTOID_CZ_RESTART, PACKET_CZ_RESTART);
//	REGN(179, 3, HEADER_ZC_RESTART_ACK, PROTOID_ZC_RESTART_ACK, PACKET_ZC_RESTART_ACK);
//	REGV(180, 8, HEADER_ZC_SAY_DIALOG, PROTOID_ZC_SAY_DIALOG, PACKET_ZC_SAY_DIALOG);
//	REGN(181, 6, HEADER_ZC_WAIT_DIALOG, PROTOID_ZC_WAIT_DIALOG, PACKET_ZC_WAIT_DIALOG);
//	REGN(182, 6, HEADER_ZC_CLOSE_DIALOG, PROTOID_ZC_CLOSE_DIALOG, PACKET_ZC_CLOSE_DIALOG);
//	REGV(183, 8, HEADER_ZC_MENU_LIST, PROTOID_ZC_MENU_LIST, PACKET_ZC_MENU_LIST);
//	REGN(184, 7, HEADER_CZ_CHOOSE_MENU, PROTOID_CZ_CHOOSE_MENU, PACKET_CZ_CHOOSE_MENU);
//	REGN(185, 6, HEADER_CZ_REQ_NEXT_SCRIPT, PROTOID_CZ_REQ_NEXT_SCRIPT, PACKET_CZ_REQ_NEXT_SCRIPT);
//	REGN(186, 2, HEADER_CZ_REQ_STATUS, PROTOID_CZ_REQ_STATUS, PACKET_CZ_REQ_STATUS);
//	REGN(187, 5, HEADER_CZ_STATUS_CHANGE, PROTOID_CZ_STATUS_CHANGE, PACKET_CZ_STATUS_CHANGE);
//	REGN(188, 6, HEADER_ZC_STATUS_CHANGE_ACK, PROTOID_ZC_STATUS_CHANGE_ACK, PACKET_ZC_STATUS_CHANGE_ACK);
//	REGN(189, 44, HEADER_ZC_STATUS, PROTOID_ZC_STATUS, PACKET_ZC_STATUS);
//	REGN(190, 5, HEADER_ZC_STATUS_CHANGE, PROTOID_ZC_STATUS_CHANGE, PACKET_ZC_STATUS_CHANGE);
//	REGN(191, 3, HEADER_CZ_REQ_EMOTION, PROTOID_CZ_REQ_EMOTION, PACKET_CZ_REQ_EMOTION);
//	REGN(192, 7, HEADER_ZC_EMOTION, PROTOID_ZC_EMOTION, PACKET_ZC_EMOTION);
//	REGN(193, 2, HEADER_CZ_REQ_USER_COUNT, PROTOID_CZ_REQ_USER_COUNT, PACKET_CZ_REQ_USER_COUNT);
//	REGN(194, 6, HEADER_ZC_USER_COUNT, PROTOID_ZC_USER_COUNT, PACKET_ZC_USER_COUNT);
//	REGN(195, 8, HEADER_ZC_SPRITE_CHANGE, PROTOID_ZC_SPRITE_CHANGE, PACKET_ZC_SPRITE_CHANGE);
//	REGN(196, 6, HEADER_ZC_SELECT_DEALTYPE, PROTOID_ZC_SELECT_DEALTYPE, PACKET_ZC_SELECT_DEALTYPE);
//	REGN(197, 7, HEADER_CZ_ACK_SELECT_DEALTYPE, PROTOID_CZ_ACK_SELECT_DEALTYPE, PACKET_CZ_ACK_SELECT_DEALTYPE);
//	REGV(198, 4, HEADER_ZC_PC_PURCHASE_ITEMLIST, PROTOID_ZC_PC_PURCHASE_ITEMLIST, PACKET_ZC_PC_PURCHASE_ITEMLIST);
//	REGV(199, 4, HEADER_ZC_PC_SELL_ITEMLIST, PROTOID_ZC_PC_SELL_ITEMLIST, PACKET_ZC_PC_SELL_ITEMLIST);
//	REGV(200, 4, HEADER_CZ_PC_PURCHASE_ITEMLIST, PROTOID_CZ_PC_PURCHASE_ITEMLIST, PACKET_CZ_PC_PURCHASE_ITEMLIST);
//	REGV(201, 4, HEADER_CZ_PC_SELL_ITEMLIST, PROTOID_CZ_PC_SELL_ITEMLIST, PACKET_CZ_PC_SELL_ITEMLIST);
//	REGN(202, 3, HEADER_ZC_PC_PURCHASE_RESULT, PROTOID_ZC_PC_PURCHASE_RESULT, PACKET_ZC_PC_PURCHASE_RESULT);
//	REGN(203, 3, HEADER_ZC_PC_SELL_RESULT, PROTOID_ZC_PC_SELL_RESULT, PACKET_ZC_PC_SELL_RESULT);
//	REGN(204, 6, HEADER_CZ_DISCONNECT_CHARACTER, PROTOID_CZ_DISCONNECT_CHARACTER, PACKET_CZ_DISCONNECT_CHARACTER);
//	REGN(205, 3, HEADER_ZC_ACK_DISCONNECT_CHARACTER, PROTOID_ZC_ACK_DISCONNECT_CHARACTER, PACKET_ZC_ACK_DISCONNECT_CHARACTER);
//	REGN(206, 2, HEADER_CZ_DISCONNECT_ALL_CHARACTER, PROTOID_CZ_DISCONNECT_ALL_CHARACTER, PACKET_CZ_DISCONNECT_ALL_CHARACTER);
//	REGN(207, 27, HEADER_CZ_SETTING_WHISPER_PC, PROTOID_CZ_SETTING_WHISPER_PC, PACKET_CZ_SETTING_WHISPER_PC);
//	REGN(208, 3, HEADER_CZ_SETTING_WHISPER_STATE, PROTOID_CZ_SETTING_WHISPER_STATE, PACKET_CZ_SETTING_WHISPER_STATE);
//	REGN(209, 4, HEADER_ZC_SETTING_WHISPER_PC, PROTOID_ZC_SETTING_WHISPER_PC, PACKET_ZC_SETTING_WHISPER_PC);
//	REGN(210, 4, HEADER_ZC_SETTING_WHISPER_STATE, PROTOID_ZC_SETTING_WHISPER_STATE, PACKET_ZC_SETTING_WHISPER_STATE);
//	REGN(211, 2, HEADER_CZ_REQ_WHISPER_LIST, PROTOID_CZ_REQ_WHISPER_LIST, PACKET_CZ_REQ_WHISPER_LIST);
//	REGV(212, 4, HEADER_ZC_WHISPER_LIST, PROTOID_ZC_WHISPER_LIST, PACKET_ZC_WHISPER_LIST);
//	REGV(213, 15, HEADER_CZ_CREATE_CHATROOM, PROTOID_CZ_CREATE_CHATROOM, PACKET_CZ_CREATE_CHATROOM);
//	REGN(214, 3, HEADER_ZC_ACK_CREATE_CHATROOM, PROTOID_ZC_ACK_CREATE_CHATROOM, PACKET_ZC_ACK_CREATE_CHATROOM);
//	REGV(215, 17, HEADER_ZC_ROOM_NEWENTRY, PROTOID_ZC_ROOM_NEWENTRY, PACKET_ZC_ROOM_NEWENTRY);
//	REGN(216, 6, HEADER_ZC_DESTROY_ROOM, PROTOID_ZC_DESTROY_ROOM, PACKET_ZC_DESTROY_ROOM);
//	REGN(217, 14, HEADER_CZ_REQ_ENTER_ROOM, PROTOID_CZ_REQ_ENTER_ROOM, PACKET_CZ_REQ_ENTER_ROOM);
//	REGN(218, 3, HEADER_ZC_REFUSE_ENTER_ROOM, PROTOID_ZC_REFUSE_ENTER_ROOM, PACKET_ZC_REFUSE_ENTER_ROOM);
//	REGV(219, 8, HEADER_ZC_ENTER_ROOM, PROTOID_ZC_ENTER_ROOM, PACKET_ZC_ENTER_ROOM);
//	REGN(220, 28, HEADER_ZC_MEMBER_NEWENTRY, PROTOID_ZC_MEMBER_NEWENTRY, PACKET_ZC_MEMBER_NEWENTRY);
//	REGN(221, 29, HEADER_ZC_MEMBER_EXIT, PROTOID_ZC_MEMBER_EXIT, PACKET_ZC_MEMBER_EXIT);
//	REGV(222, 15, HEADER_CZ_CHANGE_CHATROOM, PROTOID_CZ_CHANGE_CHATROOM, PACKET_CZ_CHANGE_CHATROOM);
//	REGV(223, 17, HEADER_ZC_CHANGE_CHATROOM, PROTOID_ZC_CHANGE_CHATROOM, PACKET_ZC_CHANGE_CHATROOM);
//	REGN(224, 30, HEADER_CZ_REQ_ROLE_CHANGE, PROTOID_CZ_REQ_ROLE_CHANGE, PACKET_CZ_REQ_ROLE_CHANGE);
//	REGN(225, 30, HEADER_ZC_ROLE_CHANGE, PROTOID_ZC_ROLE_CHANGE, PACKET_ZC_ROLE_CHANGE);
//	REGN(226, 26, HEADER_CZ_REQ_EXPEL_MEMBER, PROTOID_CZ_REQ_EXPEL_MEMBER, PACKET_CZ_REQ_EXPEL_MEMBER);
//	REGN(227, 2, HEADER_CZ_EXIT_ROOM, PROTOID_CZ_EXIT_ROOM, PACKET_CZ_EXIT_ROOM);
//	REGN(228, 6, HEADER_CZ_REQ_EXCHANGE_ITEM, PROTOID_CZ_REQ_EXCHANGE_ITEM, PACKET_CZ_REQ_EXCHANGE_ITEM);
//	REGN(229, 26, HEADER_ZC_REQ_EXCHANGE_ITEM, PROTOID_ZC_REQ_EXCHANGE_ITEM, PACKET_ZC_REQ_EXCHANGE_ITEM);
//	REGN(230, 3, HEADER_CZ_ACK_EXCHANGE_ITEM, PROTOID_CZ_ACK_EXCHANGE_ITEM, PACKET_CZ_ACK_EXCHANGE_ITEM);
//	REGN(231, 3, HEADER_ZC_ACK_EXCHANGE_ITEM, PROTOID_ZC_ACK_EXCHANGE_ITEM, PACKET_ZC_ACK_EXCHANGE_ITEM);
//	REGN(232, 8, HEADER_CZ_ADD_EXCHANGE_ITEM, PROTOID_CZ_ADD_EXCHANGE_ITEM, PACKET_CZ_ADD_EXCHANGE_ITEM);
//	REGN(233, 19, HEADER_ZC_ADD_EXCHANGE_ITEM, PROTOID_ZC_ADD_EXCHANGE_ITEM, PACKET_ZC_ADD_EXCHANGE_ITEM);
//	REGN(234, 5, HEADER_ZC_ACK_ADD_EXCHANGE_ITEM, PROTOID_ZC_ACK_ADD_EXCHANGE_ITEM, PACKET_ZC_ACK_ADD_EXCHANGE_ITEM);
//	REGN(235, 2, HEADER_CZ_CONCLUDE_EXCHANGE_ITEM, PROTOID_CZ_CONCLUDE_EXCHANGE_ITEM, PACKET_CZ_CONCLUDE_EXCHANGE_ITEM);
//	REGN(236, 3, HEADER_ZC_CONCLUDE_EXCHANGE_ITEM, PROTOID_ZC_CONCLUDE_EXCHANGE_ITEM, PACKET_ZC_CONCLUDE_EXCHANGE_ITEM);
//	REGN(237, 2, HEADER_CZ_CANCEL_EXCHANGE_ITEM, PROTOID_CZ_CANCEL_EXCHANGE_ITEM, PACKET_CZ_CANCEL_EXCHANGE_ITEM);
//	REGN(238, 2, HEADER_ZC_CANCEL_EXCHANGE_ITEM, PROTOID_ZC_CANCEL_EXCHANGE_ITEM, PACKET_ZC_CANCEL_EXCHANGE_ITEM);
//	REGN(239, 2, HEADER_CZ_EXEC_EXCHANGE_ITEM, PROTOID_CZ_EXEC_EXCHANGE_ITEM, PACKET_CZ_EXEC_EXCHANGE_ITEM);
//	REGN(240, 3, HEADER_ZC_EXEC_EXCHANGE_ITEM, PROTOID_ZC_EXEC_EXCHANGE_ITEM, PACKET_ZC_EXEC_EXCHANGE_ITEM);
//	REGN(241, 2, HEADER_ZC_EXCHANGEITEM_UNDO, PROTOID_ZC_EXCHANGEITEM_UNDO, PACKET_ZC_EXCHANGEITEM_UNDO);
//	REGN(242, 6, HEADER_ZC_NOTIFY_STOREITEM_COUNTINFO, PROTOID_ZC_NOTIFY_STOREITEM_COUNTINFO, PACKET_ZC_NOTIFY_STOREITEM_COUNTINFO);
//	REGV(243, 4, HEADER_CZ_REQUEST_CHAT, PROTOID_CZ_REQUEST_CHAT, PACKET_CZ_REQUEST_CHAT); // nonstandard
//	REGN(244, 21, HEADER_ZC_ADD_ITEM_TO_STORE, PROTOID_ZC_ADD_ITEM_TO_STORE, PACKET_ZC_ADD_ITEM_TO_STORE);
//	REGN(245, 6, HEADER_CZ_ITEM_PICKUP, PROTOID_CZ_ITEM_PICKUP, PACKET_CZ_ITEM_PICKUP); // nonstandard
//	REGN(246, 8, HEADER_ZC_DELETE_ITEM_FROM_STORE, PROTOID_ZC_DELETE_ITEM_FROM_STORE, PACKET_ZC_DELETE_ITEM_FROM_STORE);
//	REGN(247, 8, HEADER_CZ_MOVE_ITEM_FROM_STORE_TO_BODY, PROTOID_CZ_MOVE_ITEM_FROM_STORE_TO_BODY, PACKET_CZ_MOVE_ITEM_FROM_STORE_TO_BODY); // nonstandard
//	REGN(248, 2, HEADER_ZC_CLOSE_STORE, PROTOID_ZC_CLOSE_STORE, PACKET_ZC_CLOSE_STORE);
//	REGN(249, 26, HEADER_CZ_MAKE_GROUP, PROTOID_CZ_MAKE_GROUP, PACKET_CZ_MAKE_GROUP);
//	REGN(250, 3, HEADER_ZC_ACK_MAKE_GROUP, PROTOID_ZC_ACK_MAKE_GROUP, PACKET_ZC_ACK_MAKE_GROUP);
//	REGV(251, 28, HEADER_ZC_GROUP_LIST, PROTOID_ZC_GROUP_LIST, PACKET_ZC_GROUP_LIST);
//	REGN(252, 6, HEADER_CZ_REQ_JOIN_GROUP, PROTOID_CZ_REQ_JOIN_GROUP, PACKET_CZ_REQ_JOIN_GROUP);
//	REGN(253, 27, HEADER_ZC_ACK_REQ_JOIN_GROUP, PROTOID_ZC_ACK_REQ_JOIN_GROUP, PACKET_ZC_ACK_REQ_JOIN_GROUP);
//	REGN(254, 30, HEADER_ZC_REQ_JOIN_GROUP, PROTOID_ZC_REQ_JOIN_GROUP, PACKET_ZC_REQ_JOIN_GROUP);
//	REGN(255, 10, HEADER_CZ_JOIN_GROUP, PROTOID_CZ_JOIN_GROUP, PACKET_CZ_JOIN_GROUP);
//	REGN(256, 2, HEADER_CZ_REQ_LEAVE_GROUP, PROTOID_CZ_REQ_LEAVE_GROUP, PACKET_CZ_REQ_LEAVE_GROUP);
//	REGN(257, 6, HEADER_ZC_GROUPINFO_CHANGE, PROTOID_ZC_GROUPINFO_CHANGE, PACKET_ZC_GROUPINFO_CHANGE);
//	REGN(258, 6, HEADER_CZ_CHANGE_GROUPEXPOPTION, PROTOID_CZ_GROUPINFO_CHANGE, PACKET_CZ_CHANGE_GROUPEXPOPTION);
//	REGN(259, 30, HEADER_CZ_REQ_EXPEL_GROUP_MEMBER, PROTOID_CZ_REQ_EXPEL_GROUP_MEMBER, PACKET_CZ_REQ_EXPEL_GROUP_MEMBER);
//	REGN(260, 79, HEADER_ZC_ADD_MEMBER_TO_GROUP, PROTOID_ZC_ADD_MEMBER_TO_GROUP, PACKET_ZC_ADD_MEMBER_TO_GROUP);
//	REGN(261, 31, HEADER_ZC_DELETE_MEMBER_FROM_GROUP, PROTOID_ZC_DELETE_MEMBER_FROM_GROUP, PACKET_ZC_DELETE_MEMBER_FROM_GROUP);
//	REGN(262, 10, HEADER_ZC_NOTIFY_HP_TO_GROUPM, PROTOID_ZC_NOTIFY_HP_TO_GROUPM, PACKET_ZC_NOTIFY_HP_TO_GROUPM);
//	REGN(263, 10, HEADER_ZC_NOTIFY_POSITION_TO_GROUPM, PROTOID_ZC_NOTIFY_POSITION_TO_GROUPM, PACKET_ZC_NOTIFY_POSITION_TO_GROUPM);
//	REGV(264, 4, HEADER_CZ_REQUEST_CHAT_PARTY, PROTOID_CZ_REQUEST_CHAT_PARTY, PACKET_CZ_REQUEST_CHAT_PARTY);
//	REGV(265, 8, HEADER_ZC_NOTIFY_CHAT_PARTY, PROTOID_ZC_NOTIFY_CHAT_PARTY, PACKET_ZC_NOTIFY_CHAT_PARTY);
//	REGN(266, 4, HEADER_ZC_MVP_GETTING_ITEM, PROTOID_ZC_MVP_GETTING_ITEM, PACKET_ZC_MVP_GETTING_ITEM);
//	REGN(267, 6, HEADER_ZC_MVP_GETTING_SPECIAL_EXP, PROTOID_ZC_MVP_GETTING_SPECIAL_EXP, PACKET_ZC_MVP_GETTING_SPECIAL_EXP);
//	REGN(268, 6, HEADER_ZC_MVP, PROTOID_ZC_MVP, PACKET_ZC_MVP);
//	REGN(269, 2, HEADER_ZC_THROW_MVPITEM, PROTOID_ZC_THROW_MVPITEM, PACKET_ZC_THROW_MVPITEM);
//	REGN(270, 11, HEADER_ZC_SKILLINFO_UPDATE, PROTOID_ZC_SKILLINFO_UPDATE, PACKET_ZC_SKILLINFO_UPDATE);
//	REGV(271, 4, HEADER_ZC_SKILLINFO_LIST, PROTOID_ZC_SKILLINFO_LIST, PACKET_ZC_SKILLINFO_LIST);
//	REGN(272, 10, HEADER_ZC_ACK_TOUSESKILL, PROTOID_ZC_ACK_TOUSESKILL, PACKET_ZC_ACK_TOUSESKILL);
//	REGN(273, 39, HEADER_ZC_ADD_SKILL, PROTOID_ZC_ADD_SKILL, PACKET_ZC_ADD_SKILL);
//	REGN(274, 4, HEADER_CZ_UPGRADE_SKILLLEVEL, PROTOID_CZ_UPGRADE_SKILLLEVEL, PACKET_CZ_UPGRADE_SKILLLEVEL);
//	REGN(275, 10, HEADER_CZ_USE_SKILL_TOGROUND, PROTOID_CZ_USE_SKILL_TOGROUND, PACKET_CZ_USE_SKILL_TOGROUND); // nonstandard
//	REGN(276, 31, HEADER_ZC_NOTIFY_SKILL, PROTOID_ZC_NOTIFY_SKILL, PACKET_ZC_NOTIFY_SKILL);
//	REGN(277, 35, HEADER_ZC_NOTIFY_SKILL_POSITION, PROTOID_ZC_NOTIFY_SKILL_POSITION, PACKET_ZC_NOTIFY_SKILL_POSITION);
//	REGN(278, 6, HEADER_CZ_ITEM_THROW, PROTOID_CZ_ITEM_THROW, PACKET_CZ_ITEM_THROW); // nonstandard
//	REGN(279, 18, HEADER_ZC_NOTIFY_GROUNDSKILL, PROTOID_ZC_NOTIFY_GROUNDSKILL, PACKET_ZC_NOTIFY_GROUNDSKILL);
//	REGN(280, 2, HEADER_CZ_CANCEL_LOCKON, PROTOID_CZ_CANCEL_LOCKON, PACKET_CZ_CANCEL_LOCKON);
//	REGN(281, 13, HEADER_ZC_STATE_CHANGE, PROTOID_ZC_STATE_CHANGE, PACKET_ZC_STATE_CHANGE);
//	REGN(282, 15, HEADER_ZC_USE_SKILL, PROTOID_ZC_USE_SKILL, PACKET_ZC_USE_SKILL);
//	REGN(283, 20, HEADER_CZ_SELECT_WARPPOINT, PROTOID_CZ_SELECT_WARPPOINT, PACKET_CZ_SELECT_WARPPOINT);
//	REGN(284, 68, HEADER_ZC_WARPLIST, PROTOID_ZC_WARPLIST, PACKET_ZC_WARPLIST);
//	REGN(285, 2, HEADER_CZ_REMEMBER_WARPPOINT, PROTOID_CZ_REMEMBER_WARPPOINT, PACKET_CZ_REMEMBER_WARPPOINT);
//	REGN(286, 3, HEADER_ZC_ACK_REMEMBER_WARPPOINT, PROTOID_ZC_ACK_REMEMBER_WARPPOINT, PACKET_ZC_ACK_REMEMBER_WARPPOINT);
//	REGN(287, 16, HEADER_ZC_SKILL_ENTRY, PROTOID_ZC_SKILL_ENTRY, PACKET_ZC_SKILL_ENTRY);
//	REGN(288, 6, HEADER_ZC_SKILL_DISAPPEAR, PROTOID_ZC_SKILL_DISAPPEAR, PACKET_ZC_SKILL_DISAPPEAR);
//	REGN(289, 14, HEADER_ZC_NOTIFY_CARTITEM_COUNTINFO, PROTOID_ZC_NOTIFY_CARTITEM_COUNTINFO, PACKET_ZC_NOTIFY_CARTITEM_COUNTINFO);
//	REGV(290, 4, HEADER_ZC_CART_EQUIPMENT_ITEMLIST, PROTOID_ZC_CART_EQUIPMENT_ITEMLIST, PACKET_ZC_CART_EQUIPMENT_ITEMLIST);
//	REGV(291, 4, HEADER_ZC_CART_NORMAL_ITEMLIST, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_NORMAL_ITEMLIST);
//	REGN(292, 21, HEADER_ZC_ADD_ITEM_TO_CART, PROTOID_ZC_ADD_ITEM_TO_CART, PACKET_ZC_ADD_ITEM_TO_CART);
//	REGN(293, 8, HEADER_ZC_DELETE_ITEM_FROM_CART, PROTOID_ZC_DELETE_ITEM_FROM_CART, PACKET_ZC_DELETE_ITEM_FROM_CART);
//	REGN(294, 8, HEADER_CZ_MOVE_ITEM_FROM_BODY_TO_CART, PROTOID_CZ_MOVE_ITEM_FROM_BODY_TO_CART, PACKET_CZ_MOVE_ITEM_FROM_BODY_TO_CART);
//	REGN(295, 8, HEADER_CZ_MOVE_ITEM_FROM_CART_TO_BODY, PROTOID_CZ_MOVE_ITEM_FROM_CART_TO_BODY, PACKET_CZ_MOVE_ITEM_FROM_CART_TO_BODY);
//	REGN(296, 8, HEADER_CZ_MOVE_ITEM_FROM_STORE_TO_CART, PROTOID_CZ_MOVE_ITEM_FROM_STORE_TO_CART, PACKET_CZ_MOVE_ITEM_FROM_STORE_TO_CART);
//	REGN(297, 8, HEADER_CZ_MOVE_ITEM_FROM_CART_TO_STORE, PROTOID_CZ_MOVE_ITEM_FROM_CART_TO_STORE, PACKET_CZ_MOVE_ITEM_FROM_CART_TO_STORE);
//	REGN(298, 2, HEADER_CZ_REQ_CARTOFF, PROTOID_CZ_REQ_CARTOFF, PACKET_CZ_REQ_CARTOFF);
//	REGN(299, 2, HEADER_ZC_CARTOFF, PROTOID_ZC_CARTOFF, PACKET_ZC_CARTOFF);
//	REGN(300, 3, HEADER_ZC_ACK_ADDITEM_TO_CART, PROTOID_ZC_ACK_ADDITEM_TO_CART, PACKET_ZC_ACK_ADDITEM_TO_CART);
//	REGN(301, 4, HEADER_ZC_OPENSTORE, PROTOID_ZC_OPENSTORE, PACKET_ZC_OPENSTORE);
//	REGN(302, 2, HEADER_CZ_REQ_CLOSESTORE, PROTOID_CZ_REQ_CLOSESTORE, PACKET_CZ_REQ_CLOSESTORE);
//	REGV(303, 84, HEADER_CZ_REQ_OPENSTORE, PROTOID_CZ_REQ_OPENSTORE, PACKET_CZ_REQ_OPENSTORE);
//	REGN(304, 6, HEADER_CZ_REQ_BUY_FROMMC, PROTOID_CZ_REQ_BUY_FROMMC, PACKET_CZ_REQ_BUY_FROMMC);
//	REGN(305, 86, HEADER_ZC_STORE_ENTRY, PROTOID_ZC_STORE_ENTRY, PACKET_ZC_STORE_ENTRY);
//	REGN(306, 6, HEADER_ZC_DISAPPEAR_ENTRY, PROTOID_ZC_DISAPPEAR_ENTRY, PACKET_ZC_DISAPPEAR_ENTRY);
//	REGV(307, 8, HEADER_ZC_PC_PURCHASE_ITEMLIST_FROMMC, PROTOID_ZC_PC_PURCHASE_ITEMLIST_FROMMC, PACKET_ZC_PC_PURCHASE_ITEMLIST_FROMMC);
//	REGV(308, 8, HEADER_CZ_PC_PURCHASE_ITEMLIST_FROMMC, PROTOID_CZ_PC_PURCHASE_ITEMLIST_FROMMC, PACKET_CZ_PC_PURCHASE_ITEMLIST_FROMMC);
//	REGN(309, 7, HEADER_ZC_PC_PURCHASE_RESULT_FROMMC, PROTOID_ZC_PC_PURCHASE_RESULT_FROMMC, PACKET_ZC_PC_PURCHASE_RESULT_FROMMC);
//	REGV(310, 8, HEADER_ZC_PC_PURCHASE_MYITEMLIST, PROTOID_ZC_PC_PURCHASE_MYITEMLIST, PACKET_ZC_PC_PURCHASE_MYITEMLIST);
//	REGN(311, 6, HEADER_ZC_DELETEITEM_FROM_MCSTORE, PROTOID_ZC_DELETEITEM_FROM_MCSTORE, PACKET_ZC_DELETEITEM_FROM_MCSTORE);
//	REGN(312, 3, HEADER_CZ_PKMODE_CHANGE, PROTOID_CZ_PKMODE_CHANGE, PACKET_CZ_PKMODE_CHANGE);
//	REGN(313, 16, HEADER_ZC_ATTACK_FAILURE_FOR_DISTANCE, PROTOID_ZC_ATTACK_FAILURE_FOR_DISTANCE, PACKET_ZC_ATTACK_FAILURE_FOR_DISTANCE);
//	REGN(314, 4, HEADER_ZC_ATTACK_RANGE, PROTOID_ZC_ATTACK_RANGE, PACKET_ZC_ATTACK_RANGE);
//	REGN(315, 4, HEADER_ZC_ACTION_FAILURE, PROTOID_ZC_ACTION_FAILURE, PACKET_ZC_ACTION_FAILURE);
//	REGN(316, 4, HEADER_ZC_EQUIP_ARROW, PROTOID_ZC_EQUIP_ARROW, PACKET_ZC_EQUIP_ARROW);
//	REGN(317, 6, HEADER_ZC_RECOVERY, PROTOID_ZC_RECOVERY, PACKET_ZC_RECOVERY);
//	REGN(318, 24, HEADER_ZC_USESKILL_ACK, PROTOID_ZC_USESKILL_ACK, PACKET_ZC_USESKILL_ACK);
//	REGN(319, 26, HEADER_CZ_ITEM_CREATE, PROTOID_CZ_ITEM_CREATE, PACKET_CZ_ITEM_CREATE);
//	REGN(320, 22, HEADER_CZ_MOVETO_MAP, PROTOID_CZ_MOVETO_MAP, PACKET_CZ_MOVETO_MAP);
//	REGN(321, 14, HEADER_ZC_COUPLESTATUS, PROTOID_ZC_COUPLESTATUS, PACKET_ZC_COUPLESTATUS);
//	REGN(322, 6, HEADER_ZC_OPEN_EDITDLG, PROTOID_ZC_OPEN_EDITDLG, PACKET_ZC_OPEN_EDITDLG);
//	REGN(323, 10, HEADER_CZ_INPUT_EDITDLG, PROTOID_CZ_INPUT_EDITDLG, PACKET_CZ_INPUT_EDITDLG);
//	REGN(324, 23, HEADER_ZC_COMPASS, PROTOID_ZC_COMPASS, PACKET_ZC_COMPASS);
//	REGN(325, 19, HEADER_ZC_SHOW_IMAGE, PROTOID_ZC_SHOW_IMAGE, PACKET_ZC_SHOW_IMAGE);
//	REGN(326, 6, HEADER_CZ_CLOSE_DIALOG, PROTOID_CZ_CLOSE_DIALOG, PACKET_CZ_CLOSE_DIALOG);
//	REGN(327, 39, HEADER_ZC_AUTORUN_SKILL, PROTOID_ZC_AUTORUN_SKILL, PACKET_ZC_AUTORUN_SKILL);
//	REGN(328, 8, HEADER_ZC_RESURRECTION, PROTOID_ZC_RESURRECTION, PACKET_ZC_RESURRECTION);
//	REGN(329, 9, HEADER_CZ_REQ_GIVE_MANNER_POINT, PROTOID_CZ_REQ_GIVE_MANNER_POINT, PACKET_CZ_REQ_GIVE_MANNER_POINT);
//	REGN(330, 6, HEADER_ZC_ACK_GIVE_MANNER_POINT, PROTOID_ZC_ACK_GIVE_MANNER_POINT, PACKET_ZC_ACK_GIVE_MANNER_POINT);
//	REGN(331, 27, HEADER_ZC_NOTIFY_MANNER_POINT_GIVEN, PROTOID_ZC_NOTIFY_MANNER_POINT_GIVEN, PACKET_ZC_NOTIFY_MANNER_POINT_GIVEN);
//	REGV(332, 4, HEADER_ZC_MYGUILD_BASIC_INFO, PROTOID_ZC_MYGUILD_BASIC_INFO, PACKET_ZC_MYGUILD_BASIC_INFO);
//	REGN(333, 2, HEADER_CZ_REQ_GUILD_MENUINTERFACE, PROTOID_CZ_REQ_GUILD_MENUINTERFACE, PACKET_CZ_REQ_GUILD_MENUINTERFACE);
//	REGN(334, 6, HEADER_ZC_ACK_GUILD_MENUINTERFACE, PROTOID_ZC_ACK_GUILD_MENUINTERFACE, PACKET_ZC_ACK_GUILD_MENUINTERFACE);
//	REGN(335, 6, HEADER_CZ_REQ_GUILD_MENU, PROTOID_CZ_REQ_GUILD_MENU, PACKET_CZ_REQ_GUILD_MENU);
//	REGN(336, 110, HEADER_ZC_GUILD_INFO, PROTOID_ZC_GUILD_INFO, PACKET_ZC_GUILD_INFO);
//	REGN(337, 6, HEADER_CZ_REQ_GUILD_EMBLEM_IMG, PROTOID_CZ_REQ_GUILD_EMBLEM_IMG, PACKET_CZ_REQ_GUILD_EMBLEM_IMG);
//	REGV(338, 12, HEADER_ZC_GUILD_EMBLEM_IMG, PROTOID_ZC_GUILD_EMBLEM_IMG, PACKET_ZC_GUILD_EMBLEM_IMG);
//	REGV(339, 4, HEADER_CZ_REGISTER_GUILD_EMBLEM_IMG, PROTOID_CZ_REGISTER_GUILD_EMBLEM_IMG, PACKET_CZ_REGISTER_GUILD_EMBLEM_IMG);
//	REGV(340, 4, HEADER_ZC_MEMBERMGR_INFO, PROTOID_ZC_MEMBERMGR_INFO, PACKET_ZC_MEMBERMGR_INFO);
//	REGV(341, 4, HEADER_CZ_REQ_CHANGE_MEMBERPOS, PROTOID_CZ_REQ_CHANGE_MEMBERPOS, PACKET_CZ_REQ_CHANGE_MEMBERPOS);
//	REGV(342, 4, HEADER_ZC_ACK_REQ_CHANGE_MEMBERS, PROTOID_ZC_ACK_REQ_CHANGE_MEMBERS, PACKET_ZC_ACK_REQ_CHANGE_MEMBERS);
//	REGN(343, 6, HEADER_CZ_REQ_OPEN_MEMBER_INFO, PROTOID_CZ_REQ_OPEN_MEMBER_INFO, PACKET_CZ_REQ_OPEN_MEMBER_INFO);
//	REGN(344, 2, XXXXX_HEADER_ZC_ACK_OPEN_MEMBER_INFO, PROTOID_ZC_ACK_OPEN_MEMBER_INFO, PACKET_ZC_ACK_OPEN_MEMBER_INFO); // no-len
//	REGN(345, 54, HEADER_CZ_REQ_LEAVE_GUILD, PROTOID_CZ_REQ_LEAVE_GUILD, PACKET_CZ_REQ_LEAVE_GUILD);
//	REGN(346, 66, HEADER_ZC_ACK_LEAVE_GUILD, PROTOID_ZC_ACK_LEAVE_GUILD, PACKET_ZC_ACK_LEAVE_GUILD);
//	REGN(347, 54, HEADER_CZ_REQ_BAN_GUILD, PROTOID_CZ_REQ_BAN_GUILD, PACKET_CZ_REQ_BAN_GUILD);
//	REGN(348, 90, HEADER_ZC_ACK_BAN_GUILD, PROTOID_ZC_ACK_BAN_GUILD, PACKET_ZC_ACK_BAN_GUILD);
//	REGN(349, 42, HEADER_CZ_REQ_DISORGANIZE_GUILD, PROTOID_CZ_REQ_DISORGANIZE_GUILD, PACKET_CZ_REQ_DISORGANIZE_GUILD);
//	REGN(350, 6, HEADER_ZC_ACK_DISORGANIZE_GUILD_RESULT, PROTOID_ZC_ACK_DISORGANIZE_GUILD_RESULT, PACKET_ZC_ACK_DISORGANIZE_GUILD_RESULT);
//	REGN(351, 42, HEADER_ZC_ACK_DISORGANIZE_GUILD, PROTOID_ZC_ACK_DISORGANIZE_GUILD, PACKET_ZC_ACK_DISORGANIZE_GUILD);
//	REGV(352, 4, HEADER_ZC_POSITION_INFO, PROTOID_ZC_POSITION_INFO, PACKET_ZC_POSITION_INFO);
//	REGV(353, 4, HEADER_CZ_REG_CHANGE_GUILD_POSITIONINFO, PROTOID_CZ_REG_CHANGE_GUILD_POSITIONINFO, PACKET_CZ_REG_CHANGE_GUILD_POSITIONINFO);
//	REGV(354, 6, HEADER_ZC_GUILD_SKILLINFO, PROTOID_ZC_GUILD_SKILLINFO, PACKET_ZC_GUILD_SKILLINFO);
//	REGV(355, 4, HEADER_ZC_BAN_LIST, PROTOID_ZC_BAN_LIST, PACKET_ZC_BAN_LIST);
//	REGV(356, 4, HEADER_ZC_OTHER_GUILD_LIST, PROTOID_ZC_OTHER_GUILD_LIST, PACKET_ZC_OTHER_GUILD_LIST);
//	REGN(357, 30, HEADER_CZ_REQ_MAKE_GUILD, PROTOID_CZ_REQ_MAKE_GUILD, PACKET_CZ_REQ_MAKE_GUILD);
//	REGV(358, 4, HEADER_ZC_POSITION_ID_NAME_INFO, PROTOID_ZC_POSITION_ID_NAME_INFO, PACKET_ZC_POSITION_ID_NAME_INFO);
//	REGN(359, 3, HEADER_ZC_RESULT_MAKE_GUILD, PROTOID_ZC_RESULT_MAKE_GUILD, PACKET_ZC_RESULT_MAKE_GUILD);
//	REGN(360, 14, HEADER_CZ_REQ_JOIN_GUILD, PROTOID_CZ_REQ_JOIN_GUILD, PACKET_CZ_REQ_JOIN_GUILD);
//	REGN(361, 3, HEADER_ZC_ACK_REQ_JOIN_GUILD, PROTOID_ZC_ACK_REQ_JOIN_GUILD, PACKET_ZC_ACK_REQ_JOIN_GUILD);
//	REGN(362, 30, HEADER_ZC_REQ_JOIN_GUILD, PROTOID_ZC_REQ_JOIN_GUILD, PACKET_ZC_REQ_JOIN_GUILD);
//	REGN(363, 10, HEADER_CZ_JOIN_GUILD, PROTOID_CZ_JOIN_GUILD, PACKET_CZ_JOIN_GUILD);
//	REGN(364, 43, HEADER_ZC_UPDATE_GDID, PROTOID_ZC_UPDATE_GDID, PACKET_ZC_UPDATE_GDID);
//	REGN(365, 14, HEADER_ZC_UPDATE_CHARSTAT, PROTOID_ZC_UPDATE_CHARSTAT, PACKET_ZC_UPDATE_CHARSTAT);
//	REGN(366, 186, HEADER_CZ_GUILD_NOTICE, PROTOID_CZ_GUILD_NOTICE, PACKET_CZ_GUILD_NOTICE);
//	REGN(367, 182, HEADER_ZC_GUILD_NOTICE, PROTOID_ZC_GUILD_NOTICE, PACKET_ZC_GUILD_NOTICE);
//	REGN(368, 14, HEADER_CZ_REQ_ALLY_GUILD, PROTOID_CZ_REQ_ALLY_GUILD, PACKET_CZ_REQ_ALLY_GUILD);
//	REGN(369, 30, HEADER_ZC_REQ_ALLY_GUILD, PROTOID_ZC_REQ_ALLY_GUILD, PACKET_ZC_REQ_ALLY_GUILD);
//	REGN(370, 10, HEADER_CZ_ALLY_GUILD, PROTOID_CZ_ALLY_GUILD, PACKET_CZ_ALLY_GUILD);
//	REGN(371, 3, HEADER_ZC_ACK_REQ_ALLY_GUILD, PROTOID_ZC_ACK_REQ_ALLY_GUILD, PACKET_ZC_ACK_REQ_ALLY_GUILD);
//	REGV(372, 4, HEADER_ZC_ACK_CHANGE_GUILD_POSITIONINFO, PROTOID_ZC_ACK_CHANGE_GUILD_POSITIONINFO, PACKET_ZC_ACK_CHANGE_GUILD_POSITIONINFO);
//	REGN(373, 6, HEADER_CZ_REQ_GUILD_MEMBER_INFO, PROTOID_CZ_REQ_GUILD_MEMBER_INFO, PACKET_CZ_REQ_GUILD_MEMBER_INFO);
//	REGN(374, 106, HEADER_ZC_ACK_GUILD_MEMBER_INFO, PROTOID_ZC_ACK_GUILD_MEMBER_INFO, PACKET_ZC_ACK_GUILD_MEMBER_INFO);
//	REGV(375, 4, HEADER_ZC_ITEMIDENTIFY_LIST, PROTOID_ZC_ITEMIDENTIFY_LIST, PACKET_ZC_ITEMIDENTIFY_LIST);
//	REGN(376, 4, HEADER_CZ_REQ_ITEMIDENTIFY, PROTOID_CZ_REQ_ITEMIDENTIFY, PACKET_CZ_REQ_ITEMIDENTIFY);
//	REGN(377, 5, HEADER_ZC_ACK_ITEMIDENTIFY, PROTOID_ZC_ACK_ITEMIDENTIFY, PACKET_ZC_ACK_ITEMIDENTIFY);
//	REGN(378, 4, HEADER_CZ_REQ_ITEMCOMPOSITION_LIST, PROTOID_CZ_REQ_ITEMCOMPOSITION_LIST, PACKET_CZ_REQ_ITEMCOMPOSITION_LIST);
//	REGV(379, 4, HEADER_ZC_ITEMCOMPOSITION_LIST, PROTOID_ZC_ITEMCOMPOSITION_LIST, PACKET_ZC_ITEMCOMPOSITION_LIST);
//	REGN(380, 6, HEADER_CZ_REQ_ITEMCOMPOSITION, PROTOID_CZ_REQ_ITEMCOMPOSITION, PACKET_CZ_REQ_ITEMCOMPOSITION);
//	REGN(381, 7, HEADER_ZC_ACK_ITEMCOMPOSITION, PROTOID_ZC_ACK_ITEMCOMPOSITION, PACKET_ZC_ACK_ITEMCOMPOSITION);
//	REGV(382, 4, HEADER_CZ_GUILD_CHAT, PROTOID_CZ_GUILD_CHAT, PACKET_CZ_GUILD_CHAT);
//	REGV(383, 4, HEADER_ZC_GUILD_CHAT, PROTOID_ZC_GUILD_CHAT, PACKET_ZC_GUILD_CHAT);
//	REGN(384, 6, HEADER_CZ_REQ_HOSTILE_GUILD, PROTOID_CZ_REQ_HOSTILE_GUILD, PACKET_CZ_REQ_HOSTILE_GUILD);
//	REGN(385, 3, HEADER_ZC_ACK_REQ_HOSTILE_GUILD, PROTOID_ZC_ACK_REQ_HOSTILE_GUILD, PACKET_ZC_ACK_REQ_HOSTILE_GUILD);
//	REGN(386, 106, HEADER_ZC_MEMBER_ADD, PROTOID_ZC_MEMBER_ADD, PACKET_ZC_MEMBER_ADD);
//	REGN(387, 10, HEADER_CZ_REQ_DELETE_RELATED_GUILD, PROTOID_CZ_REQ_DELETE_RELATED_GUILD, PACKET_CZ_REQ_DELETE_RELATED_GUILD);
//	REGN(388, 10, HEADER_ZC_DELETE_RELATED_GUILD, PROTOID_ZC_DELETE_RELATED_GUILD, PACKET_ZC_DELETE_RELATED_GUILD);
//	REGN(389, 34, HEADER_ZC_ADD_RELATED_GUILD, PROTOID_ZC_ADD_RELATED_GUILD, PACKET_ZC_ADD_RELATED_GUILD);
	REGN(390, 6, HEADER_SC_COLLECTORDEAD, PROTOID_SC_COLLECTORDEAD, PACKET_SC_COLLECTORDEAD); // no-len
	REGN(391, 6, HEADER_SC_PING, PROTOID_SC_PING, PACKET_SC_PING);
//	REGN(392, 8, HEADER_ZC_ACK_ITEMREFINING, PROTOID_ZC_ACK_ITEMREFINING, PACKET_ZC_ACK_ITEMREFINING);
//	REGN(393, 4, HEADER_ZC_NOTIFY_MAPINFO, PROTOID_ZC_NOTIFY_MAPINFO, PACKET_ZC_NOTIFY_MAPINFO);
//	REGN(394, 4, HEADER_CZ_REQ_DISCONNECT, PROTOID_CZ_REQ_DISCONNECT, PACKET_CZ_REQ_DISCONNECT);
//	REGN(395, 4, HEADER_ZC_ACK_REQ_DISCONNECT, PROTOID_ZC_ACK_REQ_DISCONNECT, PACKET_ZC_ACK_REQ_DISCONNECT);
//	REGN(396, 29, HEADER_ZC_MONSTER_INFO, PROTOID_ZC_MONSTER_INFO, PACKET_ZC_MONSTER_INFO);
//	REGV(397, 4, HEADER_ZC_MAKABLEITEMLIST, PROTOID_ZC_MAKABLEITEMLIST, PACKET_ZC_MAKABLEITEMLIST);
//	REGN(398, 10, HEADER_CZ_REQMAKINGITEM, PROTOID_CZ_REQMAKINGITEM, PACKET_CZ_REQMAKINGITEM);
//	REGN(399, 6, HEADER_ZC_ACK_REQMAKINGITEM, PROTOID_ZC_ACK_REQMAKINGITEM, PACKET_ZC_ACK_REQMAKINGITEM);
//	REGN(400, 7, HEADER_CZ_REQUEST_ACT, PROTOID_CZ_REQUEST_ACT, PACKET_CZ_REQUEST_ACT); // nonstandard
//	REGN(401, 86, HEADER_ZC_TALKBOX_CHATCONTENTS, PROTOID_ZC_TALKBOX_CHATCONTENTS, PACKET_ZC_TALKBOX_CHATCONTENTS);
//	REGN(402, 24, HEADER_ZC_UPDATE_MAPINFO, PROTOID_ZC_UPDATE_MAPINFO, PACKET_ZC_UPDATE_MAPINFO);
//	REGN(403, 2, HEADER_CZ_CLOSE_STORE, PROTOID_CZ_CLOSE_STORE, PACKET_CZ_CLOSE_STORE); // nonstandard
//	REGN(404, 30, HEADER_ZC_ACK_REQNAME_BYGID, PROTOID_ZC_ACK_REQNAME_BYGID, PACKET_ZC_ACK_REQNAME_BYGID);
//	REGN(405, 102, HEADER_ZC_ACK_REQNAMEALL, PROTOID_ZC_ACK_REQNAMEALL, PACKET_ZC_ACK_REQNAMEALL);
//	REGN(406, 9, HEADER_ZC_MSG_STATE_CHANGE, PROTOID_ZC_MSG_STATE_CHANGE, PACKET_ZC_MSG_STATE_CHANGE);
//	REGN(407, 4, HEADER_CZ_RESET, PROTOID_CZ_RESET, PACKET_CZ_RESET);
//	REGN(408, 8, HEADER_CZ_CHANGE_MAPTYPE, PROTOID_CZ_CHANGE_MAPTYPE, PACKET_CZ_CHANGE_MAPTYPE);
//	REGN(409, 4, HEADER_ZC_NOTIFY_MAPPROPERTY, PROTOID_ZC_NOTIFY_MAPPROPERTY, PACKET_ZC_NOTIFY_MAPPROPERTY);
//	REGN(410, 14, HEADER_ZC_NOTIFY_RANKING, PROTOID_ZC_NOTIFY_RANKING, PACKET_ZC_NOTIFY_RANKING);
//	REGN(411, 10, HEADER_ZC_NOTIFY_EFFECT, PROTOID_ZC_NOTIFY_EFFECT, PACKET_ZC_NOTIFY_EFFECT);
//	REGV(412, 4, HEADER_CZ_LOCALBROADCAST, PROTOID_CZ_LOCALBROADCAST, PACKET_CZ_LOCALBROADCAST);
//	REGN(413, 6, HEADER_CZ_CHANGE_EFFECTSTATE, PROTOID_CZ_CHANGE_EFFECTSTATE, PACKET_CZ_CHANGE_EFFECTSTATE);
//	REGN(414, 2, HEADER_ZC_START_CAPTURE, PROTOID_ZC_START_CAPTURE, PACKET_ZC_START_CAPTURE);
//	REGN(415, 6, HEADER_CZ_TRYCAPTURE_MONSTER, PROTOID_CZ_TRYCAPTURE_MONSTER, PACKET_CZ_TRYCAPTURE_MONSTER);
//	REGN(416, 3, HEADER_ZC_TRYCAPTURE_MONSTER, PROTOID_ZC_TRYCAPTURE_MONSTER, PACKET_ZC_TRYCAPTURE_MONSTER);
//	REGN(417, 3, HEADER_CZ_COMMAND_PET, PROTOID_CZ_COMMAND_PET, PACKET_CZ_COMMAND_PET);
//	REGN(418, 37, HEADER_ZC_PROPERTY_PET, PROTOID_ZC_PROPERTY_PET, PACKET_ZC_PROPERTY_PET_2009);
//	REGN(419, 5, HEADER_ZC_FEED_PET, PROTOID_ZC_FEED_PET, PACKET_ZC_FEED_PET);
//	REGN(420, 11, HEADER_ZC_CHANGESTATE_PET, PROTOID_ZC_CHANGESTATE_PET, PACKET_ZC_CHANGESTATE_PET);
//	REGN(421, 26, HEADER_CZ_RENAME_PET, PROTOID_CZ_RENAME_PET, PACKET_CZ_RENAME_PET);
//	REGV(422, 4, HEADER_ZC_PETEGG_LIST, PROTOID_ZC_PETEGG_LIST, PACKET_ZC_PETEGG_LIST);
//	REGN(423, 4, HEADER_CZ_SELECT_PETEGG, PROTOID_CZ_SELECT_PETEGG, PACKET_CZ_SELECT_PETEGG);
//	REGN(424, 4, HEADER_CZ_PETEGG_INFO, PROTOID_CZ_PETEGG_INFO, PACKET_CZ_PETEGG_INFO);
//	REGN(425, 6, HEADER_CZ_PET_ACT, PROTOID_CZ_PET_ACT, PACKET_CZ_PET_ACT);
//	REGN(426, 10, HEADER_ZC_PET_ACT, PROTOID_ZC_PET_ACT, PACKET_ZC_PET_ACT);
//	REGN(427, 12, HEADER_ZC_PAR_CHANGE_USER, PROTOID_ZC_PAR_CHANGE_USER, PACKET_ZC_PAR_CHANGE_USER);
//	REGN(428, 6, HEADER_ZC_SKILL_UPDATE, PROTOID_ZC_SKILL_UPDATE, PACKET_ZC_SKILL_UPDATE);
//	REGV(429, 4, HEADER_ZC_MAKINGARROW_LIST, PROTOID_ZC_MAKINGARROW_LIST, PACKET_ZC_MAKINGARROW_LIST);
//	REGN(430, 4, HEADER_CZ_REQ_MAKINGARROW, PROTOID_CZ_REQ_MAKINGARROW, PACKET_CZ_REQ_MAKINGARROW);
//	REGN(431, 4, HEADER_CZ_REQ_CHANGECART, PROTOID_CZ_REQ_CHANGECART, PACKET_CZ_REQ_CHANGECART);
//	REGN(432, 11, HEADER_ZC_NPCSPRITE_CHANGE, PROTOID_ZC_NPCSPRITE_CHANGE, PACKET_ZC_NPCSPRITE_CHANGE);
//	REGN(433, 7, HEADER_ZC_SHOWDIGIT, PROTOID_ZC_SHOWDIGIT, PACKET_ZC_SHOWDIGIT);
//	REGV(434, 85, HEADER_CZ_REQ_OPENSTORE2, PROTOID_CZ_REQ_OPENSTORE, PACKET_CZ_REQ_OPENSTORE2);
//	REGN(435, 67, HEADER_ZC_SHOW_IMAGE2, PROTOID_ZC_SHOW_IMAGE, PACKET_ZC_SHOW_IMAGE2);
//	REGN(436, 12, HEADER_ZC_CHANGE_GUILD, PROTOID_ZC_CHANGE_GUILD, PACKET_ZC_CHANGE_GUILD);
//	REGN(437, 18, HEADER_SC_BILLING_INFO, PROTOID_SC_BILLING_INFO, PACKET_SC_BILLING_INFO);
//	REGN(438, 114, HEADER_ZC_GUILD_INFO2, PROTOID_ZC_GUILD_INFO, PACKET_ZC_GUILD_INFO2);
//	REGN(439, 6, HEADER_CZ_GUILD_ZENY, PROTOID_CZ_GUILD_ZENY, PACKET_CZ_GUILD_ZENY);
//	REGN(440, 3, HEADER_ZC_GUILD_ZENY_ACK, PROTOID_ZC_GUILD_ZENY_ACK, PACKET_ZC_GUILD_ZENY_ACK);
//	REGN(441, 6, HEADER_ZC_DISPEL, PROTOID_ZC_DISPEL, PACKET_ZC_DISPEL);
//	REGN(442, 26, HEADER_CZ_REMOVE_AID, PROTOID_CZ_REMOVE_AID, PACKET_CZ_REMOVE_AID);
//	REGN(443, 26, HEADER_CZ_SHIFT, PROTOID_CZ_SHIFT, PACKET_CZ_SHIFT);
//	REGN(444, 26, HEADER_CZ_RECALL, PROTOID_CZ_RECALL, PACKET_CZ_RECALL);
//	REGN(445, 26, HEADER_CZ_RECALL_GID, PROTOID_CZ_RECALL_GID, PACKET_CZ_RECALL_GID);
//	REGN(446, 2, HEADER_AC_ASK_PNGAMEROOM, PROTOID_AC_ASK_PNGAMEROOM, PACKET_AC_ASK_PNGAMEROOM);
//	REGN(447, 3, HEADER_CA_REPLY_PNGAMEROOM, PROTOID_CA_REPLY_PNGAMEROOM, PACKET_CA_REPLY_PNGAMEROOM);
//	REGN(448, 2, HEADER_CZ_REQ_REMAINTIME, PROTOID_CZ_REQ_REMAINTIME, PACKET_CZ_REQ_REMAINTIME);
//	REGN(449, 14, HEADER_ZC_REPLY_REMAINTIME, PROTOID_ZC_REPLY_REMAINTIME, PACKET_ZC_REPLY_REMAINTIME);
//	REGN(450, 10, HEADER_ZC_INFO_REMAINTIME, PROTOID_ZC_INFO_REMAINTIME, PACKET_ZC_INFO_REMAINTIME);
//	REGV(451, 16, HEADER_ZC_BROADCAST2, PROTOID_ZC_BROADCAST2, PACKET_ZC_BROADCAST2);
//	REGN(452, 22, HEADER_ZC_ADD_ITEM_TO_STORE2, PROTOID_ZC_ADD_ITEM_TO_STORE, PACKET_ZC_ADD_ITEM_TO_STORE2);
//	REGN(453, 22, HEADER_ZC_ADD_ITEM_TO_CART2, PROTOID_ZC_ADD_ITEM_TO_CART, PACKET_ZC_ADD_ITEM_TO_CART2);
//	REGN(454, 4, HEADER_CS_REQ_ENCRYPTION, PROTOID_CS_REQ_ENCRYPTION, PACKET_CS_REQ_ENCRYPTION);
//	REGN(455, 2, HEADER_SC_ACK_ENCRYPTION, PROTOID_SC_ACK_ENCRYPTION, PACKET_SC_ACK_ENCRYPTION);
//	REGN(456, 13, HEADER_ZC_USE_ITEM_ACK2, PROTOID_ZC_USE_ITEM_ACK, PACKET_ZC_USE_ITEM_ACK2);
//	REGN(457, 97, HEADER_ZC_SKILL_ENTRY2, PROTOID_ZC_SKILL_ENTRY, PACKET_ZC_SKILL_ENTRY2);
//	REGN(458, 3, HEADER_CZ_REQMAKINGHOMUN, PROTOID_CZ_REQMAKINGHOMUN, PACKET_CZ_REQMAKINGHOMUN);
//	REGN(459, 9, HEADER_CZ_MONSTER_TALK, PROTOID_CZ_MONSTER_TALK, PACKET_CZ_MONSTER_TALK);
//	REGN(460, 9, HEADER_ZC_MONSTER_TALK, PROTOID_ZC_MONSTER_TALK, PACKET_ZC_MONSTER_TALK);
//	REGN(461, 30, HEADER_ZC_AUTOSPELLLIST, PROTOID_ZC_AUTOSPELLLIST, PACKET_ZC_AUTOSPELLLIST);
//	REGN(462, 6, HEADER_CZ_SELECTAUTOSPELL, PROTOID_CZ_SELECTAUTOSPELL, PACKET_CZ_SELECTAUTOSPELL);
//	REGN(463, 28, HEADER_ZC_DEVOTIONLIST, PROTOID_ZC_DEVOTIONLIST, PACKET_ZC_DEVOTIONLIST);
//	REGN(464, 8, HEADER_ZC_SPIRITS, PROTOID_ZC_SPIRITS, PACKET_ZC_SPIRITS);
//	REGN(465, 14, HEADER_ZC_BLADESTOP, PROTOID_ZC_BLADESTOP, PACKET_ZC_BLADESTOP);
//	REGN(466, 10, HEADER_ZC_COMBODELAY, PROTOID_ZC_COMBODELAY, PACKET_ZC_COMBODELAY);
//	REGN(467, 35, HEADER_ZC_SOUND, PROTOID_ZC_SOUND, PACKET_ZC_SOUND);
//	REGN(468, 6, HEADER_ZC_OPEN_EDITDLGSTR, PROTOID_ZC_OPEN_EDITDLGSTR, PACKET_ZC_OPEN_EDITDLGSTR);
//	REGV(469, 8, HEADER_CZ_INPUT_EDITDLGSTR, PROTOID_CZ_INPUT_EDITDLGSTR, PACKET_CZ_INPUT_EDITDLGSTR);
//	REGN(470, 4, HEADER_ZC_NOTIFY_MAPPROPERTY2, PROTOID_ZC_NOTIFY_MAPPROPERTY2, PACKET_ZC_NOTIFY_MAPPROPERTY2);
//	REGN(471, 11, HEADER_ZC_SPRITE_CHANGE2, PROTOID_ZC_SPRITE_CHANGE, PACKET_ZC_SPRITE_CHANGE2);
//	REGN(472, 54, HEADER_ZC_NOTIFY_STANDENTRY2, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY2);
//	REGN(473, 53, HEADER_ZC_NOTIFY_NEWENTRY2, PROTOID_ZC_NOTIFY_NEWENTRY, PACKET_ZC_NOTIFY_NEWENTRY2);
//	REGN(474, 60, HEADER_ZC_NOTIFY_MOVEENTRY2, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY2);
//	REGN(475, 2, HEADER_CA_REQ_HASH, PROTOID_CA_REQ_HASH, PACKET_CA_REQ_HASH);
//	REGV(476, 4, HEADER_AC_ACK_HASH, PROTOID_AC_ACK_HASH, PACKET_AC_ACK_HASH);
//	REGN(477, 47, HEADER_CA_LOGIN2, PROTOID_CA_LOGIN2, PACKET_CA_LOGIN2);
//	REGN(478, 33, HEADER_ZC_NOTIFY_SKILL2, PROTOID_ZC_NOTIFY_SKILL, PACKET_ZC_NOTIFY_SKILL2);
//	REGN(479, 6, HEADER_CZ_REQ_ACCOUNTNAME, PROTOID_CZ_REQ_ACCOUNTNAME, PACKET_CZ_REQ_ACCOUNTNAME);
//	REGN(480, 30, HEADER_ZC_ACK_ACCOUNTNAME, PROTOID_ZC_ACK_ACCOUNTNAME, PACKET_ZC_ACK_ACCOUNTNAME);
//	REGN(481, 8, HEADER_ZC_SPIRITS2, PROTOID_ZC_SPIRITS2, PACKET_ZC_SPIRITS2);
//	REGN(482, 34, HEADER_ZC_REQ_COUPLE, PROTOID_ZC_REQ_COUPLE, PACKET_ZC_REQ_COUPLE);
//	REGN(483, 14, HEADER_CZ_JOIN_COUPLE, PROTOID_CZ_JOIN_COUPLE, PACKET_CZ_JOIN_COUPLE);
//	REGN(484, 2, HEADER_ZC_START_COUPLE, PROTOID_ZC_START_COUPLE, PACKET_ZC_START_COUPLE);
//	REGN(485, 6, HEADER_CZ_REQ_JOIN_COUPLE, PROTOID_CZ_REQ_JOIN_COUPLE, PACKET_CZ_REQ_JOIN_COUPLE);
//	REGN(486, 26, HEADER_ZC_COUPLENAME, PROTOID_ZC_COUPLENAME, PACKET_ZC_COUPLENAME);
//	REGN(487, 2, HEADER_CZ_DORIDORI, PROTOID_CZ_DORIDORI, PACKET_CZ_DORIDORI);
//	REGN(488, 28, HEADER_CZ_MAKE_GROUP2, PROTOID_CZ_MAKE_GROUP, PACKET_CZ_MAKE_GROUP2);
//	REGN(489, 81, HEADER_ZC_ADD_MEMBER_TO_GROUP2, PROTOID_ZC_ADD_MEMBER_TO_GROUP, PACKET_ZC_ADD_MEMBER_TO_GROUP2);
//	REGN(490, 6, HEADER_ZC_CONGRATULATION, PROTOID_ZC_CONGRATULATION, PACKET_ZC_CONGRATULATION);
//	REGN(491, 10, HEADER_ZC_NOTIFY_POSITION_TO_GUILDM, PROTOID_ZC_NOTIFY_POSITION_TO_GUILDM, PACKET_ZC_NOTIFY_POSITION_TO_GUILDM);
//	REGN(492, 26, HEADER_ZC_GUILD_MEMBER_MAP_CHANGE, PROTOID_ZC_GUILD_MEMBER_MAP_CHANGE, PACKET_ZC_GUILD_MEMBER_MAP_CHANGE);
//	REGN(493, 2, HEADER_CZ_CHOPOKGI, PROTOID_CZ_CHOPOKGI, PACKET_CZ_CHOPOKGI);
//	REGV(494, 4, HEADER_ZC_NORMAL_ITEMLIST2, PROTOID_ZC_NORMAL_ITEMLIST, PACKET_ZC_NORMAL_ITEMLIST2);
//	REGV(495, 4, HEADER_ZC_CART_NORMAL_ITEMLIST2, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_NORMAL_ITEMLIST2);
//	REGV(496, 4, HEADER_ZC_STORE_NORMAL_ITEMLIST2, PROTOID_ZC_STORE_NORMAL_ITEMLIST, PACKET_ZC_STORE_NORMAL_ITEMLIST2);
//	REGV(497, 4, HEADER_AC_NOTIFY_ERROR, PROTOID_AC_NOTIFY_ERROR, PACKET_AC_NOTIFY_ERROR);
//	REGN(498, 20, HEADER_ZC_UPDATE_CHARSTAT2, PROTOID_ZC_UPDATE_CHARSTAT, PACKET_ZC_UPDATE_CHARSTAT2);
//	REGN(499, 10, HEADER_ZC_NOTIFY_EFFECT2, PROTOID_ZC_NOTIFY_EFFECT2, PACKET_ZC_NOTIFY_EFFECT2);
//	REGN(500, 32, HEADER_ZC_REQ_EXCHANGE_ITEM2, PROTOID_ZC_REQ_EXCHANGE_ITEM, PACKET_ZC_REQ_EXCHANGE_ITEM2);
//	REGN(501, 9, HEADER_ZC_ACK_EXCHANGE_ITEM2, PROTOID_ZC_ACK_EXCHANGE_ITEM, PACKET_ZC_ACK_EXCHANGE_ITEM2);
//	REGN(502, 34, HEADER_ZC_REQ_BABY, PROTOID_ZC_REQ_BABY, PACKET_ZC_REQ_BABY);
//	REGN(503, 14, HEADER_CZ_JOIN_BABY, PROTOID_CZ_JOIN_BABY, PACKET_CZ_JOIN_BABY);
//	REGN(504, 2, HEADER_ZC_START_BABY, PROTOID_ZC_START_BABY, PACKET_ZC_START_BABY);
//	REGN(505, 6, HEADER_CZ_REQ_JOIN_BABY, PROTOID_CZ_REQ_JOIN_BABY, PACKET_CZ_REQ_JOIN_BABY);
//	REGN(506, 48, HEADER_CA_LOGIN3, PROTOID_CA_LOGIN2, PACKET_CA_LOGIN3);
//	REGN(507, 56, HEADER_CH_DELETE_CHAR2, PROTOID_CH_DELETE_CHAR, PACKET_CH_DELETE_CHAR2);
//	REGV(508, 4, HEADER_ZC_REPAIRITEMLIST, PROTOID_ZC_REPAIRITEMLIST, PACKET_ZC_REPAIRITEMLIST);
//	REGN(509, 15, HEADER_CZ_REQ_ITEMREPAIR, PROTOID_CZ_REQ_ITEMREPAIR, PACKET_CZ_REQ_ITEMREPAIR);
//	REGN(510, 5, HEADER_ZC_ACK_ITEMREPAIR, PROTOID_ZC_ACK_ITEMREPAIR, PACKET_ZC_ACK_ITEMREPAIR);
//	REGN(511, 10, HEADER_ZC_HIGHJUMP, PROTOID_ZC_HIGHJUMP, PACKET_ZC_HIGHJUMP);
//	REGN(512, 26, HEADER_CA_CONNECT_INFO_CHANGED, PROTOID_CA_CONNECT_INFO_CHANGED, PACKET_CA_CONNECT_INFO_CHANGED);
//	REGV(513, 4, HEADER_ZC_FRIENDS_LIST, PROTOID_ZC_FRIENDS_LIST, PACKET_ZC_FRIENDS_LIST);
//	REGN(514, 26, HEADER_CZ_ADD_FRIENDS, PROTOID_CZ_ADD_FRIENDS, PACKET_CZ_ADD_FRIENDS);
//	REGN(515, 10, HEADER_CZ_DELETE_FRIENDS, PROTOID_CZ_DELETE_FRIENDS, PACKET_CZ_DELETE_FRIENDS);
//	REGN(516, 18, HEADER_CA_EXE_HASHCHECK, PROTOID_CA_EXE_HASHCHECK, PACKET_CA_EXE_HASHCHECK);
//	REGN(517, 26, HEADER_ZC_DIVORCE, PROTOID_ZC_DIVORCE, PACKET_ZC_DIVORCE);
//	REGN(518, 11, HEADER_ZC_FRIENDS_STATE, PROTOID_ZC_FRIENDS_STATE, PACKET_ZC_FRIENDS_STATE);
//	REGN(519, 34, HEADER_ZC_REQ_ADD_FRIENDS, PROTOID_ZC_REQ_ADD_FRIENDS, PACKET_ZC_REQ_ADD_FRIENDS);
//	REGN(520, 14, HEADER_CZ_ACK_REQ_ADD_FRIENDS, PROTOID_CZ_ACK_REQ_ADD_FRIENDS, PACKET_CZ_ACK_REQ_ADD_FRIENDS);
//	REGN(521, 36, HEADER_ZC_ADD_FRIENDS_LIST, PROTOID_ZC_ADD_FRIENDS_LIST, PACKET_ZC_ADD_FRIENDS_LIST);
//	REGN(522, 10, HEADER_ZC_DELETE_FRIENDS, PROTOID_ZC_DELETE_FRIENDS, PACKET_ZC_DELETE_FRIENDS);
//	REGN(523, 19, HEADER_CH_EXE_HASHCHECK, PROTOID_CH_EXE_HASHCHECK, PACKET_CH_EXE_HASHCHECK); // no-len
//	REGN(524, 19, HEADER_CZ_EXE_HASHCHECK, PROTOID_CZ_EXE_HASHCHECK, PACKET_CZ_EXE_HASHCHECK); // no-len
//	REGV(525, 4, HEADER_HC_BLOCK_CHARACTER, PROTOID_HC_BLOCK_CHARACTER, PACKET_HC_BLOCK_CHARACTER);
//	REGN(526, 32, HEADER_ZC_STARSKILL, PROTOID_ZC_STARSKILL, PACKET_ZC_STARSKILL);
//	REGN(527, 10, HEADER_CZ_REQ_PVPPOINT, PROTOID_CZ_REQ_PVPPOINT, PACKET_CZ_REQ_PVPPOINT); // no-len
//	REGN(528, 22, HEADER_ZC_ACK_PVPPOINT, PROTOID_ZC_ACK_PVPPOINT, PACKET_ZC_ACK_PVPPOINT); // no-len
//	REGN(529, 6, HEADER_ZH_MOVE_PVPWORLD); // server-only
//	REGN(530, 26, HEADER_CZ_REQ_GIVE_MANNER_BYNAME, PROTOID_CZ_REQ_GIVE_MANNER_BYNAME, PACKET_CZ_REQ_GIVE_MANNER_BYNAME);
//	REGN(531, 26, HEADER_CZ_REQ_STATUS_GM, PROTOID_CZ_REQ_STATUS_GM, PACKET_CZ_REQ_STATUS_GM);
//	REGN(532, 42, HEADER_ZC_ACK_STATUS_GM, PROTOID_ZC_ACK_STATUS_GM, PACKET_ZC_ACK_STATUS_GM);
//	REGN(533, 6, HEADER_ZC_SKILLMSG, PROTOID_ZC_SKILLMSG, PACKET_ZC_SKILLMSG);
//	REGN(534, 6, HEADER_ZC_BABYMSG, PROTOID_ZC_BABYMSG, PACKET_ZC_BABYMSG);
//	REGN(535, 2, HEADER_CZ_BLACKSMITH_RANK, PROTOID_CZ_BLACKSMITH_RANK, PACKET_CZ_BLACKSMITH_RANK);
//	REGN(536, 2, HEADER_CZ_ALCHEMIST_RANK, PROTOID_CZ_ALCHEMIST_RANK, PACKET_CZ_ALCHEMIST_RANK);
//	REGN(537, 282, HEADER_ZC_BLACKSMITH_RANK, PROTOID_ZC_BLACKSMITH_RANK, PACKET_ZC_BLACKSMITH_RANK);
//	REGN(538, 282, HEADER_ZC_ALCHEMIST_RANK, PROTOID_ZC_ALCHEMIST_RANK, PACKET_ZC_ALCHEMIST_RANK);
//	REGN(539, 10, HEADER_ZC_BLACKSMITH_POINT, PROTOID_ZC_BLACKSMITH_POINT, PACKET_ZC_BLACKSMITH_POINT);
//	REGN(540, 10, HEADER_ZC_ALCHEMIST_POINT, PROTOID_ZC_ALCHEMIST_POINT, PACKET_ZC_ALCHEMIST_POINT);
//	REGN(541, 6, HEADER_CZ_LESSEFFECT, PROTOID_CZ_LESSEFFECT, PACKET_CZ_LESSEFFECT);
//	REGN(542, 6, HEADER_ZC_LESSEFFECT, PROTOID_ZC_LESSEFFECT, PACKET_ZC_LESSEFFECT);
//	REGN(543, 66, HEADER_ZC_NOTIFY_PKINFO, PROTOID_ZC_NOTIFY_PKINFO, PACKET_ZC_NOTIFY_PKINFO);
//	REGN(544, 10, HEADER_ZC_NOTIFY_CRAZYKILLER, PROTOID_ZC_NOTIFY_CRAZYKILLER, PACKET_ZC_NOTIFY_CRAZYKILLER);
//	REGV(545, 4, HEADER_ZC_NOTIFY_WEAPONITEMLIST, PROTOID_ZC_NOTIFY_WEAPONITEMLIST, PACKET_ZC_NOTIFY_WEAPONITEMLIST);
//	REGN(546, 6, HEADER_CZ_REQ_WEAPONREFINE, PROTOID_CZ_REQ_WEAPONREFINE, PACKET_CZ_REQ_WEAPONREFINE);
//	REGN(547, 8, HEADER_ZC_ACK_WEAPONREFINE, PROTOID_ZC_ACK_WEAPONREFINE, PACKET_ZC_ACK_WEAPONREFINE);
//	REGN(548, 10, HEADER_ZC_TAEKWON_POINT, PROTOID_ZC_TAEKWON_POINT, PACKET_ZC_TAEKWON_POINT);
//	REGN(549, 2, HEADER_CZ_TAEKWON_RANK, PROTOID_CZ_TAEKWON_RANK, PACKET_CZ_TAEKWON_RANK);
//	REGN(550, 282, HEADER_ZC_TAEKWON_RANK, PROTOID_ZC_TAEKWON_RANK, PACKET_ZC_TAEKWON_RANK);
//	REGN(551, 18, HEADER_ZC_GAME_GUARD, PROTOID_ZC_GAME_GUARD, PACKET_ZC_GAME_GUARD);
//	REGN(552, 18, HEADER_CZ_ACK_GAME_GUARD, PROTOID_CZ_ACK_GAME_GUARD, PACKET_CZ_ACK_GAME_GUARD);
//	REGN(553, 15, HEADER_ZC_STATE_CHANGE3, PROTOID_ZC_STATE_CHANGE, PACKET_ZC_STATE_CHANGE3);
//	REGN(554, 58, HEADER_ZC_NOTIFY_STANDENTRY3, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY3);
//	REGN(555, 57, HEADER_ZC_NOTIFY_NEWENTRY3, PROTOID_ZC_NOTIFY_NEWENTRY, PACKET_ZC_NOTIFY_NEWENTRY3);
//	REGN(556, 65, HEADER_ZC_NOTIFY_MOVEENTRY3, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY3);
//	REGN(557, 5, HEADER_CZ_COMMAND_MER);
//	REGN(558, 71, HEADER_ZC_PROPERTY_HOMUN);
//	REGN(559, 5, HEADER_ZC_FEED_MER);
//	REGN(560, 12, HEADER_ZC_CHANGESTATE_MER);
//	REGN(561, 26, HEADER_CZ_RENAME_MER);
//	REGN(562, 9, HEADER_CZ_REQUEST_MOVENPC);
//	REGN(563, 11, HEADER_CZ_REQUEST_ACTNPC);
//	REGN(564, 6, HEADER_CZ_REQUEST_MOVETOOWNER);
//	REGV(565, 4, HEADER_ZC_HOSKILLINFO_LIST);
//	REGN(566, 10, HEADER_ZC_KILLER_POINT, PROTOID_ZC_KILLER_POINT, PACKET_ZC_KILLER_POINT);
//	REGN(567, 2, HEADER_CZ_KILLER_RANK, PROTOID_CZ_KILLER_RANK, PACKET_CZ_KILLER_RANK);
//	REGN(568, 282, HEADER_ZC_KILLER_RANK, PROTOID_ZC_KILLER_RANK, PACKET_ZC_KILLER_RANK);
//	REGN(569, 11, HEADER_ZC_HOSKILLINFO_UPDATE);
//	REGN(570, 4, HEADER_ZC_REQ_STORE_PASSWORD, PROTOID_ZC_REQ_STORE_PASSWORD, PACKET_ZC_REQ_STORE_PASSWORD);
//	REGN(571, 36, HEADER_CZ_ACK_STORE_PASSWORD, PROTOID_CZ_ACK_STORE_PASSWORD, PACKET_CZ_ACK_STORE_PASSWORD);
//	REGN(572, 6, HEADER_ZC_RESULT_STORE_PASSWORD, PROTOID_ZC_RESULT_STORE_PASSWORD, PACKET_ZC_RESULT_STORE_PASSWORD);
//	REGN(573, 6, HEADER_AC_EVENT_RESULT, PROTOID_AC_EVENT_RESULT, PACKET_AC_EVENT_RESULT);
	REGN(574, 8, HEADER_HC_REQUEST_CHARACTER_PASSWORD, PROTOID_HC_REQUEST_CHARACTER_PASSWORD, PACKET_HC_REQUEST_CHARACTER_PASSWORD__2009);
//	REGN(575, 2, HEADER_CZ_MAIL_GET_LIST);
//	REGV(576, 8, HEADER_ZC_MAIL_REQ_GET_LIST);
//	REGN(577, 6, HEADER_CZ_MAIL_OPEN);
//	REGV(578, 99, HEADER_ZC_MAIL_REQ_OPEN);
//	REGN(579, 6, HEADER_CZ_MAIL_DELETE);
//	REGN(580, 6, HEADER_CZ_MAIL_GET_ITEM);
//	REGN(581, 3, HEADER_ZC_MAIL_REQ_GET_ITEM);
//	REGN(582, 4, HEADER_CZ_MAIL_RESET_ITEM);
//	REGN(583, 8, HEADER_CZ_MAIL_ADD_ITEM);
//	REGV(584, 68, HEADER_CZ_MAIL_SEND);
//	REGN(585, 3, HEADER_ZC_MAIL_REQ_SEND);
//	REGN(586, 70, HEADER_ZC_MAIL_RECEIVE);
//	REGN(587, 4, HEADER_CZ_AUCTION_CREATE);
//	REGN(588, 8, HEADER_CZ_AUCTION_ADD_ITEM);
//	REGN(589, 12, HEADER_CZ_AUCTION_ADD);
//	REGN(590, 6, HEADER_CZ_AUCTION_ADD_CANCEL);
//	REGN(591, 10, HEADER_CZ_AUCTION_BUY);
//	REGN(592, 3, HEADER_ZC_AUCTION_RESULT);
//	REGN(593, 34, HEADER_CZ_AUCTION_ITEM_SEARCH);
//	REGV(594, 12, HEADER_ZC_AUCTION_ITEM_REQ_SEARCH);
//	REGN(595, 3, HEADER_ZC_STARPLACE);
//	REGN(596, 3, HEADER_CZ_AGREE_STARPLACE);
//	REGN(597, 5, HEADER_ZC_ACK_MAIL_ADD_ITEM);
//	REGN(598, 5, HEADER_ZC_ACK_AUCTION_ADD_ITEM);
//	REGN(599, 8, HEADER_ZC_ACK_MAIL_DELETE);
//	REGN(600, 2, HEADER_CA_REQ_GAME_GUARD_CHECK, PROTOID_CA_REQ_GAME_GUARD_CHECK, PACKET_CA_REQ_GAME_GUARD_CHECK);
//	REGN(601, 3, HEADER_AC_ACK_GAME_GUARD, PROTOID_AC_ACK_GAME_GUARD, PACKET_AC_ACK_GAME_GUARD);
//	REGV(602, 4, HEADER_ZC_MAKINGITEM_LIST);
//	REGN(603, 6, HEADER_CZ_REQ_MAKINGITEM);
//	REGN(604, 4, HEADER_CZ_AUCTION_REQ_MY_INFO);
//	REGN(605, 6, HEADER_CZ_AUCTION_REQ_MY_SELL_STOP);
//	REGN(606, 4, HEADER_ZC_AUCTION_ACK_MY_SELL_STOP);
//	REGN(607, 6, HEADER_ZC_AUCTION_WINDOWS);
//	REGN(608, 6, HEADER_ZC_MAIL_WINDOWS);
//	REGN(609, 11, HEADER_AC_REQ_LOGIN_OLDEKEY);
//	REGN(610, 11, HEADER_AC_REQ_LOGIN_NEWEKEY);
//	REGN(611, 11, HEADER_AC_REQ_LOGIN_CARDPASS);
//	REGN(612, 20, HEADER_CA_ACK_LOGIN_OLDEKEY);
//	REGN(613, 20, HEADER_CA_ACK_LOGIN_NEWEKEY);
//	REGN(614, 30, HEADER_CA_ACK_LOGIN_CARDPASS);
//	REGN(615, 4, HEADER_AC_ACK_EKEY_FAIL_NOTEXIST);
//	REGN(616, 4, HEADER_AC_ACK_EKEY_FAIL_NOTUSESEKEY);
//	REGN(617, 4, HEADER_AC_ACK_EKEY_FAIL_NOTUSEDEKEY);
//	REGN(618, 4, HEADER_AC_ACK_EKEY_FAIL_AUTHREFUSE);
//	REGN(619, 4, HEADER_AC_ACK_EKEY_FAIL_INPUTEKEY);
//	REGN(620, 4, HEADER_AC_ACK_EKEY_FAIL_NOTICE);
//	REGN(621, 4, HEADER_AC_ACK_EKEY_FAIL_NEEDCARDPASS);
//	REGN(622, 4, HEADER_AC_ACK_AUTHEKEY_FAIL_NOTMATCHCARDPASS); // no-len
//	REGN(623, 2, HEADER_AC_ACK_FIRST_LOGIN, PROTOID_AC_ACK_FIRST_LOGIN, PACKET_AC_ACK_FIRST_LOGIN);
//	REGN(624, 2, HEADER_AC_REQ_LOGIN_ACCOUNT_INFO);
//	REGN(625, 40, HEADER_CA_ACK_LOGIN_ACCOUNT_INFO);
//	REGN(626, 44, HEADER_AC_ACK_PT_ID_INFO);
//	REGN(627, 30, HEADER_CZ_REQ_MAIL_RETURN);
//	REGN(628, 8, HEADER_ZC_ACK_MAIL_RETURN);
	REGN(629, 37, HEADER_CH_ENTER2, PROTOID_CH_ENTER, PACKET_CH_ENTER2);
//	REGV(630, 51, HEADER_AC_ACCEPT_LOGIN2, PROTOID_AC_ACCEPT_LOGIN, PACKET_AC_ACCEPT_LOGIN2);
//	REGN(631, 84, HEADER_CA_LOGIN_PCBANG, PROTOID_CA_LOGIN, PACKET_CA_LOGIN_PCBANG);
//	REGN(632, 2, HEADER_ZC_NOTIFY_PCBANG);
//	REGN(633, 2, HEADER_CZ_HUNTINGLIST);
//	REGV(634, 4, HEADER_ZC_HUNTINGLIST);
//	REGN(635, 14, HEADER_ZC_PCBANG_EFFECT);
//	REGN(636, 60, HEADER_CA_LOGIN4, PROTOID_CA_LOGIN2, PACKET_CA_LOGIN4);
//	REGN(637, 62, HEADER_ZC_PROPERTY_MERCE);
//	REGV(638, 6, HEADER_ZC_SHANDA_PROTECT);
//	REGN(639, 8, HEADER_CA_CLIENT_TYPE, PROTOID_CA_CLIENT_TYPE, PACKET_CA_CLIENT_TYPE);
//	REGN(640, 12, HEADER_ZC_GANGSI_POINT, PROTOID_ZC_GANGSI_POINT, PACKET_ZC_GANGSI_POINT);
//	REGN(641, 4, HEADER_CZ_GANGSI_RANK, PROTOID_CZ_GANGSI_RANK, PACKET_CZ_GANGSI_RANK);
//	REGN(642, 284, HEADER_ZC_GANGSI_RANK, PROTOID_ZC_GANGSI_RANK, PACKET_ZC_GANGSI_RANK);
//	REGN(643, 6, HEADER_ZC_AID, PROTOID_ZC_AID, PACKET_ZC_AID);
//	REGN(644, 14, HEADER_ZC_NOTIFY_EFFECT3);
//	REGN(645, 6, HEADER_ZC_DEATH_QUESTION);
//	REGN(646, 4, HEADER_CZ_DEATH_QUESTION);
//	REGV(647, 8, HEADER_ZC_PC_CASH_POINT_ITEMLIST, PROTOID_ZC_PC_CASH_POINT_ITEMLIST, PACKET_ZC_PC_CASH_POINT_ITEMLIST);
//	REGN(648, 6, HEADER_CZ_PC_BUY_CASH_POINT_ITEM, PROTOID_CZ_PC_BUY_CASH_POINT_ITEM, PACKET_CZ_PC_BUY_CASH_POINT_ITEM);
//	REGN(649, 8, HEADER_ZC_PC_CASH_POINT_UPDATE, PROTOID_ZC_PC_CASH_POINT_UPDATE, PACKET_ZC_PC_CASH_POINT_UPDATE);
//	REGN(650, 18, HEADER_ZC_NPC_SHOWEFST_UPDATE);
//	REGV(651, 4, HEADER_HC_CHARNOTBEENSELECTED);
//	REGN(652, 46, HEADER_CH_SELECT_CHAR_GOINGTOBEUSED);
//	REGN(653, 34, HEADER_CH_REQ_IS_VALID_CHARNAME);
//	REGN(654, 4, HEADER_HC_ACK_IS_VALID_CHARNAME);
//	REGN(655, 6, HEADER_CH_REQ_CHANGE_CHARNAME);
//	REGN(656, 4, HEADER_HC_ACK_CHANGE_CHARNAME);
//	REGN(657, 4, HEADER_ZC_MSG, PROTOID_ZC_MSG, PACKET_ZC_MSG);
//	REGN(658, 2, HEADER_CZ_STANDING_RESURRECTION);
//	REGN(659, 70, HEADER_ZC_BOSS_INFO);
//	REGN(660, 10, HEADER_ZC_READ_BOOK);
//	REGV(661, 4, HEADER_ZC_EQUIPMENT_ITEMLIST2, PROTOID_ZC_EQUIPMENT_ITEMLIST, PACKET_ZC_EQUIPMENT_ITEMLIST2);
//	REGV(662, 4, HEADER_ZC_STORE_EQUIPMENT_ITEMLIST2, PROTOID_ZC_STORE_EQUIPMENT_ITEMLIST, PACKET_ZC_STORE_EQUIPMENT_ITEMLIST2);
//	REGV(663, 4, HEADER_ZC_CART_EQUIPMENT_ITEMLIST2, PROTOID_ZC_CART_EQUIPMENT_ITEMLIST, PACKET_ZC_CART_EQUIPMENT_ITEMLIST2);
//	REGN(664, 8, HEADER_ZC_CASH_TIME_COUNTER, PROTOID_ZC_CASH_TIME_COUNTER, PACKET_ZC_CASH_TIME_COUNTER);
//	REGN(665, 6, HEADER_ZC_CASH_ITEM_DELETE, PROTOID_ZC_CASH_ITEM_DELETE, PACKET_ZC_CASH_ITEM_DELETE);
//	REGN(666, 27, HEADER_ZC_ITEM_PICKUP_ACK2, PROTOID_ZC_ITEM_PICKUP_ACK, PACKET_ZC_ITEM_PICKUP_ACK2);
//	REGN(667, 80, HEADER_ZC_MER_INIT);
//	REGN(668, 66, HEADER_ZC_MER_PROPERTY);
//	REGV(669, 4, HEADER_ZC_MER_SKILLINFO_LIST);
//	REGN(670, 11, HEADER_ZC_MER_SKILLINFO_UPDATE);
//	REGN(671, 3, HEADER_CZ_MER_COMMAND);
//	REGN(672, ?, UNUSED_HEADER_CZ_MER_USE_SKILL); // no-len
//	REGN(673, ?, UNUSED_HEADER_CZ_MER_UPGRADE_SKILLLEVEL); // no-len
//	REGN(674, 8, HEADER_ZC_MER_PAR_CHANGE);
//	REGN(675, ?, HEADER_ZC_GAMEGUARD_LINGO_KEY); // no-len
//	REGN(676, ?, HEADER_CZ_GAMEGUARD_LINGO_READY); // no-len
//	REGN(677, 8, HEADER_CZ_KSY_EVENT);
//	REGV(678, 10, HEADER_ZC_HACKSH_CPX_MSG);
//	REGV(679, 10, HEADER_CZ_HACKSH_CPX_MSG);
//	REGN(680, ?, HEADER_ZC_HACKSHIELD_CRC_MSG); // no-len
//	REGN(681, ?, HEADER_CZ_HACKSHIELD_CRC_MSG); // no-len
//	REGN(682, 4, HEADER_ZC_REQ_CASH_PASSWORD, PROTOID_ZC_REQ_CASH_PASSWORD, PACKET_ZC_REQ_CASH_PASSWORD);
//	REGN(683, 36, HEADER_CZ_ACK_CASH_PASSWORD, PROTOID_CZ_ACK_CASH_PASSWORD, PACKET_CZ_ACK_CASH_PASSWORD);
//	REGN(684, 6, HEADER_ZC_RESULT_CASH_PASSWORD, PROTOID_ZC_RESULT_CASH_PASSWORD, PACKET_ZC_RESULT_CASH_PASSWORD);
//	REGN(685, 8, HEADER_AC_REQUEST_SECOND_PASSWORD);
//	REGN(686, ?, HEADER_ZC_SRPACKET_INIT); // no-len
//	REGN(687, ?, HEADER_CZ_SRPACKET_START); // no-len
//	REGN(688, 85, HEADER_CA_LOGIN_CHANNEL, PROTOID_CA_LOGIN, PACKET_CA_LOGIN_CHANNEL);
//	REGV(689, 8, HEADER_ZC_ALL_QUEST_LIST, PROTOID_ZC_ALL_QUEST_LIST, PACKET_ZC_ALL_QUEST_LIST);
//	REGV(690, 8, HEADER_ZC_ALL_QUEST_MISSION, PROTOID_ZC_ALL_QUEST_MISSION, PACKET_ZC_ALL_QUEST_MISSION);
//	REGN(691, 107, HEADER_ZC_ADD_QUEST, PROTOID_ZC_ADD_QUEST, PACKET_ZC_ADD_QUEST);
//	REGN(692, 6, HEADER_ZC_DEL_QUEST, PROTOID_ZC_DEL_QUEST, PACKET_ZC_DEL_QUEST);
//	REGV(693, 6, HEADER_ZC_UPDATE_MISSION_HUNT);
//	REGN(694, 7, HEADER_CZ_ACTIVE_QUEST, PROTOID_CZ_ACTIVE_QUEST, PACKET_CZ_ACTIVE_QUEST);
//	REGN(695, 7, HEADER_ZC_ACTIVE_QUEST, PROTOID_ZC_ACTIVE_QUEST, PACKET_ZC_ACTIVE_QUEST);
//	REGN(696, 22, HEADER_ZC_ITEM_PICKUP_PARTY);
//	REGN(697, 191, HEADER_ZC_SHORTCUT_KEY_LIST, PROTOID_ZC_SHORTCUT_KEY_LIST, PACKET_ZC_SHORTCUT_KEY_LIST);
//	REGN(698, 11, HEADER_CZ_SHORTCUT_KEY_CHANGE, PROTOID_CZ_SHORTCUT_KEY_CHANGE, PACKET_CZ_SHORTCUT_KEY_CHANGE);
//	REGN(699, 8, HEADER_ZC_EQUIPITEM_DAMAGED);
//	REGN(700, 6, HEADER_ZC_NOTIFY_PCBANG_PLAYING_TIME);
//	REGN(701, ?, HEADER_ZC_SRCRYPTOR2_INIT); // no-len
//	REGN(702, ?, HEADER_CZ_SRCRYPTOR2_START); // no-len
//	REGN(703, ?, HEADER_ZC_SRPACKETR2_INIT); // no-len
//	REGN(704, ?, HEADER_CZ_SRPACKETR2_START); // no-len
//	REGV(705, 12, HEADER_ZC_NPC_CHAT, PROTOID_ZC_NPC_CHAT, PACKET_ZC_NPC_CHAT);
//	REGV(706, 6, HEADER_ZC_FORMATSTRING_MSG, PROTOID_ZC_FORMATSTRING_MSG, PACKET_ZC_FORMATSTRING_MSG);
//	REGN(707, ?, UNUSED_HEADER_CZ_FORMATSTRING_MSG_RES); // no-len
//	REGN(708, 26, HEADER_CZ_PARTY_JOIN_REQ, PROTOID_CZ_PARTY_JOIN_REQ, PACKET_CZ_PARTY_JOIN_REQ);
//	REGN(709, 30, HEADER_ZC_PARTY_JOIN_REQ_ACK, PROTOID_ZC_ACK_REQ_JOIN_GROUP, PACKET_ZC_PARTY_JOIN_REQ_ACK);
//	REGN(710, 30, HEADER_ZC_PARTY_JOIN_REQ, PROTOID_ZC_REQ_JOIN_GROUP, PACKET_ZC_PARTY_JOIN_REQ);
//	REGN(711, 7, HEADER_CZ_PARTY_JOIN_REQ_ACK, PROTOID_CZ_JOIN_GROUP, PACKET_CZ_PARTY_JOIN_REQ_ACK);
//	REGN(712, 3, HEADER_CZ_PARTY_CONFIG, PROTOID_CZ_PARTY_CONFIG, PACKET_CZ_PARTY_CONFIG);
//	REGN(713, 3, HEADER_ZC_PARTY_CONFIG, PROTOID_ZC_PARTY_CONFIG, PACKET_ZC_PARTY_CONFIG);
	REGN(714, 3, HEADER_HC_REFUSE_SELECTCHAR, PROTOID_HC_REFUSE_SELECTCHAR, PACKET_HC_REFUSE_SELECTCHAR);
//	REGN(715, 65, HEADER_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO, PROTOID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO, PACKET_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO);
//	REGN(716, 4, HEADER_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY, PROTOID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY, PACKET_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY);
//	REGN(717, 71, HEADER_ZC_MEMORIALDUNGEON_INFO, PROTOID_ZC_MEMORIALDUNGEON_INFO, PACKET_ZC_MEMORIALDUNGEON_INFO);
//	REGN(718, 10, HEADER_ZC_MEMORIALDUNGEON_NOTIFY, PROTOID_ZC_MEMORIALDUNGEON_NOTIFY, PACKET_ZC_MEMORIALDUNGEON_NOTIFY);
//	REGN(719, 6, HEADER_CZ_MEMORIALDUNGEON_COMMAND, PROTOID_CZ_MEMORIALDUNGEON_COMMAND, PACKET_CZ_MEMORIALDUNGEON_COMMAND);
//	REGV(720, 4, HEADER_ZC_EQUIPMENT_ITEMLIST3, PROTOID_ZC_EQUIPMENT_ITEMLIST, PACKET_ZC_EQUIPMENT_ITEMLIST3);
//	REGV(721, 4, HEADER_ZC_STORE_EQUIPMENT_ITEMLIST3, PROTOID_ZC_STORE_EQUIPMENT_ITEMLIST, PACKET_ZC_STORE_EQUIPMENT_ITEMLIST3);
//	REGV(722, 4, HEADER_ZC_CART_EQUIPMENT_ITEMLIST3, PROTOID_ZC_CART_EQUIPMENT_ITEMLIST, PACKET_ZC_CART_EQUIPMENT_ITEMLIST3);
//	REGN(723, 4, HEADER_ZC_NOTIFY_BIND_ON_EQUIP);
//	REGN(724, 29, HEADER_ZC_ITEM_PICKUP_ACK3, PROTOID_ZC_ITEM_PICKUP_ACK, PACKET_ZC_ITEM_PICKUP_ACK3);
//	REGN(725, 2, HEADER_ZC_ISVR_DISCONNECT, PROTOID_ZC_ISVR_DISCONNECT, PACKET_ZC_ISVR_DISCONNECT);
//	REGN(726, 6, HEADER_CZ_EQUIPWIN_MICROSCOPE, PROTOID_CZ_EQUIPWIN_MICROSCOPE, PACKET_CZ_EQUIPWIN_MICROSCOPE);
//	REGV(727, 43, HEADER_ZC_EQUIPWIN_MICROSCOPE, PROTOID_ZC_EQUIPWIN_MICROSCOPE, PACKET_ZC_EQUIPWIN_MICROSCOPE);
//	REGN(728, 10, HEADER_CZ_CONFIG, PROTOID_CZ_CONFIG, PACKET_CZ_CONFIG);
//	REGN(729, 10, HEADER_ZC_CONFIG, PROTOID_ZC_CONFIG, PACKET_ZC_CONFIG);
//	REGN(730, 3, HEADER_ZC_CONFIG_NOTIFY, PROTOID_ZC_CONFIG_NOTIFY, PACKET_ZC_CONFIG_NOTIFY);
//	REGV(731, 4, HEADER_CZ_BATTLEFIELD_CHAT);
//	REGV(732, 32, HEADER_ZC_BATTLEFIELD_CHAT);
//	REGN(733, 32, HEADER_ZC_BATTLEFIELD_NOTIFY_CAMPINFO);
//	REGN(734, 6, HEADER_ZC_BATTLEFIELD_NOTIFY_POINT);
//	REGN(735, 36, HEADER_ZC_BATTLEFIELD_NOTIFY_POSITION);
//	REGN(736, 34, HEADER_ZC_BATTLEFIELD_NOTIFY_HP);
//	REGN(737, 33, HEADER_ZC_NOTIFY_ACT2, PROTOID_ZC_NOTIFY_ACT, PACKET_ZC_NOTIFY_ACT2);
//	REGN(738, 8, HEADER_CZ_USE_ITEM_NEW_JAPEN);
//	REGN(739, 10, HEADER_CZ_USE_SKILL_NEW_JAPEN);
//	REGN(740, 6, HEADER_CZ_ITEM_PICKUP_NEW_JAPEN);
//	REGN(741, 5, HEADER_CZ_REQUEST_MOVE_NEW_JAPEN);
//	REGN(742, 6, HEADER_CZ_BOT_CHECK);
//	REGV(743, 6, HEADER_ZC_MAPPROPERTY, PROTOID_ZC_MAPPROPERTY, PACKET_ZC_MAPPROPERTY);
//	REGV(744, 4, HEADER_ZC_NORMAL_ITEMLIST3, PROTOID_ZC_NORMAL_ITEMLIST, PACKET_ZC_NORMAL_ITEMLIST3);
//	REGV(745, 4, HEADER_ZC_CART_NORMAL_ITEMLIST3, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_NORMAL_ITEMLIST3);
//	REGV(746, 4, HEADER_ZC_STORE_NORMAL_ITEMLIST3, PROTOID_ZC_STORE_NORMAL_ITEMLIST, PACKET_ZC_STORE_NORMAL_ITEMLIST3);
//	REGN(747, 13, HEADER_ZC_ACCEPT_ENTER2, PROTOID_ZC_ACCEPT_ENTER, PACKET_ZC_ACCEPT_ENTER2);
//	REGN(748, 67, HEADER_ZC_NOTIFY_MOVEENTRY4, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY4);
//	REGN(749, 59, HEADER_ZC_NOTIFY_NEWENTRY4, PROTOID_ZC_NOTIFY_NEWENTRY, PACKET_ZC_NOTIFY_NEWENTRY4);
//	REGN(750, 60, HEADER_ZC_NOTIFY_STANDENTRY4, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY4);
//	REGN(751, 8, HEADER_ZC_NOTIFY_FONT);
//	REGN(752, 10, HEADER_ZC_PROGRESS);
//	REGN(753, 2, HEADER_CZ_PROGRESS);
//	REGN(754, 2, HEADER_ZC_PROGRESS_CANCEL);
//	REGV(755, 68, HEADER_CZ_IRMAIL_SEND);
//	REGN(756, 3, HEADER_ZC_IRMAIL_SEND_RES);
//	REGN(757, 7, HEADER_ZC_IRMAIL_NOTIFY);
//	REGN(758, 7, HEADER_CZ_IRMAIL_LIST);
//	...
//	REGN(860, 2, HEADER_CZ_OPEN_SIMPLE_CASHSHOP_ITEMLIST, PROTOID_CZ_OPEN_SIMPLE_CASHSHOP_ITEMLIST, PACKET_CZ_OPEN_SIMPLE_CASHSHOP_ITEMLIST);
//	REGV(861, 16, HEADER_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST, PROTOID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST, PACKET_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST);
//	REGN(862, 2, HEADER_CZ_CLOSE_WINDOW, PROTOID_CZ_CLOSE_WINDOW, PACKET_CZ_CLOSE_WINDOW);
//	REGN(863, 5, HEADER_CZ_REQUEST_MOVE2, PROTOID_CZ_REQUEST_MOVE, PACKET_CZ_REQUEST_MOVE2);
//	REGN(864, 6, HEADER_CZ_REQUEST_TIME2, PROTOID_CZ_REQUEST_TIME, PACKET_CZ_REQUEST_TIME2);
//	REGN(865, 5, HEADER_CZ_CHANGE_DIRECTION2);
//	REGN(866, 6, HEADER_CZ_ITEM_PICKUP2);
//	REGN(867, 6, HEADER_CZ_ITEM_THROW2);
//	REGN(868, 8, HEADER_CZ_MOVE_ITEM_FROM_BODY_TO_STORE2);
//	REGN(869, 8, HEADER_CZ_MOVE_ITEM_FROM_STORE_TO_BODY2);
//	REGN(870, 10, HEADER_CZ_USE_SKILL_TOGROUND2);
//	REGN(871, 90, HEADER_CZ_USE_SKILL_TOGROUND_WITHTALKBOX2);
//	REGN(872, 6, HEADER_CZ_REQNAME2);
//	REGN(873, 6, HEADER_CZ_REQNAME_BYGID2);
//	...
//	REGN(989, 18, HEADER_AHC_GAME_GUARD);
//	REGN(990, 18, HEADER_CAH_ACK_GAME_GUARD);
//	REGN(991, ?, HEADER_ZC_WAITINGROOM_PARTYPLAY_JOIN); // no-len
//	REGN(992, ?, HEADER_CZ_WAITINGROOM_PARTYPLAY_JOIN_RESULT); // no-len
//	REGN(993, ?, HEADER_ZC_WAITINGROOM_SUBSCRIPTION_RESULT); // no-len
//	...
//	REGN(1078, 19, HEADER_CZ_ENTER2, PROTOID_CZ_ENTER, PACKET_CZ_ENTER2);
//	REGN(1079, 7, HEADER_CZ_REQUEST_ACT2, PROTOID_CZ_REQUEST_ACT, PACKET_CZ_REQUEST_ACT2);
//	REGN(1080, 10, HEADER_CZ_USE_SKILL2, PROTOID_CZ_USE_SKILL, PACKET_CZ_USE_SKILL2);
//	REGN(1081, 8, HEADER_CZ_USE_ITEM2, PROTOID_CZ_USE_ITEM, PACKET_CZ_USE_ITEM2);
//	REGN(1082, ?, HEADER_ZC_REQ_CRACKPROOF); // no-len
//	REGN(1083, ?, HEADER_CZ_ACK_CRACKPROOF); // no-len
//	REGN(1084, ?, HEADER_ZC_CRACKPROOF_ERRCODE); // no-len
//	REGN(1085, 8, HEADER_ZC_SKILL_POSTDELAY, PROTOID_ZC_SKILL_POSTDELAY, PACKET_ZC_SKILL_POSTDELAY);
//	REGV(1086, 4, HEADER_ZC_SKILL_POSTDELAY_LIST, PROTOID_ZC_SKILL_POSTDELAY_LIST, PACKET_ZC_SKILL_POSTDELAY_LIST);
//	REGN(1087, 25, HEADER_ZC_MSG_STATE_CHANGE2, PROTOID_ZC_MSG_STATE_CHANGE, PACKET_ZC_MSG_STATE_CHANGE2);
//	REGN(1088, 10, HEADER_ZC_MILLENNIUMSHIELD, PROTOID_ZC_MILLENNIUMSHIELD, PACKET_ZC_MILLENNIUMSHIELD);
//	REGN(1089, 4, HEADER_ZC_SKILLINFO_DELETE, PROTOID_ZC_SKILLINFO_DELETE, PACKET_ZC_SKILLINFO_DELETE);
//	REGV(1090, 8, HEADER_ZC_SKILL_SELECT_REQUEST, PROTOID_ZC_SKILL_SELECT_REQUEST, PACKET_ZC_SKILL_SELECT_REQUEST);
//	REGN(1091, 8, HEADER_CZ_SKILL_SELECT_RESPONSE, PROTOID_CZ_SKILL_SELECT_RESPONSE, PACKET_CZ_SKILL_SELECT_RESPONSE);
//	REGV(1092, 8, HEADER_ZC_SIMPLE_CASH_POINT_ITEMLIST, PROTOID_ZC_SIMPLE_CASH_POINT_ITEMLIST, PACKET_ZC_SIMPLE_CASH_POINT_ITEMLIST);
//	REGN(1093, 6, HEADER_CZ_SIMPLE_BUY_CASH_POINT_ITEM, PROTOID_CZ_SIMPLE_BUY_CASH_POINT_ITEM, PACKET_CZ_SIMPLE_BUY_CASH_POINT_ITEM);
//	REGN(1094, 14, HEADER_ZC_QUEST_NOTIFY_EFFECT);
//	REGN(1095, 2, HEADER_CZ_BLOCKING_PLAY_CANCEL, PROTOID_CZ_BLOCKING_PLAY_CANCEL, PACKET_CZ_BLOCKING_PLAY_CANCEL);
//	REGV(1096, 4, HEADER_HC_CHARACTER_LIST);
//	REGN(1097, 4, HEADER_ZC_HACKSH_ERROR_MSG);
//	REGN(1098, 6, HEADER_CZ_CLIENT_VERSION);
//	REGN(1099, 2, HEADER_CZ_CLOSE_SIMPLECASH_SHOP, PROTOID_CZ_CLOSE_SIMPLECASH_SHOP, PACKET_CZ_CLOSE_SIMPLECASH_SHOP);
//	...
//	REGN(2000, ?, HEADER_ZC_ES_RESULT, PROTOID_ZC_ES_RESULT, PACKET_ZC_ES_RESULT); // no-len
//	REGN(2001, ?, HEADER_CZ_ES_GET_LIST, PROTOID_CZ_ES_GET_LIST, PACKET_CZ_ES_GET_LIST); // no-len
//	REGN(2002, ?, HEADER_ZC_ES_LIST, PROTOID_ZC_ES_LIST, PACKET_ZC_ES_LIST); // no-len
//	REGN(2003, ?, HEADER_CZ_ES_CHOOSE, PROTOID_CZ_ES_CHOOSE, PACKET_CZ_ES_CHOOSE); // no-len
//	REGN(2004, ?, HEADER_CZ_ES_CANCEL, PROTOID_CZ_ES_CANCEL, PACKET_CZ_ES_CANCEL); // no-len
//	REGN(2005, ?, HEADER_ZC_ES_READY, PROTOID_ZC_ES_READY, PACKET_ZC_ES_READY); // no-len
//	REGN(2006, ?, HEADER_ZC_ES_GOTO, PROTOID_ZC_ES_GOTO, PACKET_ZC_ES_GOTO); // no-len
//	REGN(2007, 8, HEADER_CZ_GROUPINFO_CHANGE_V2, PROTOID_CZ_GROUPINFO_CHANGE, PACKET_CZ_GROUPINFO_CHANGE_V2);
//	REGN(2008, 8, HEADER_ZC_REQ_GROUPINFO_CHANGE_V2, PROTOID_ZC_GROUPINFO_CHANGE, PACKET_ZC_REQ_GROUPINFO_CHANGE_V2);
//	REGN(2009, 268, HEADER_ZC_SHORTCUT_KEY_LIST_V2, PROTOID_ZC_SHORTCUT_KEY_LIST, PACKET_ZC_SHORTCUT_KEY_LIST_V2);
//	REGN(2010, 6, HEADER_CZ_CHANGE_GROUP_MASTER, PROTOID_CZ_CHANGE_GROUP_MASTER, PACKET_CZ_CHANGE_GROUP_MASTER);
//	REGN(2011, 8, HEADER_ZC_HO_PAR_CHANGE);
//	REGN(2012, 6, HEADER_CZ_SEEK_PARTY);
//	REGN(2013, 54, HEADER_ZC_SEEK_PARTY);
//	REGN(2014, 30, HEADER_CZ_SEEK_PARTY_MEMBER);
//	REGN(2015, 54, HEADER_ZC_SEEK_PARTY_MEMBER);
//	REGN(2016, 58, HEADER_ZC_ES_NOTI_MYINFO);
//	REGN(2017, 15, HEADER_ZC_SKILLINFO_UPDATE2, PROTOID_ZC_SKILLINFO_UPDATE, PACKET_ZC_SKILLINFO_UPDATE2);
//	REGN(2018, 8, HEADER_ZC_MSG_VALUE, PROTOID_ZC_MSG_VALUE, PACKET_ZC_MSG_VALUE);
//	REGN(2019, 6, HEADER_ZC_ITEMLISTWIN_OPEN);
//	REGV(2020, 12, HEADER_CZ_ITEMLISTWIN_RES);
//	REGN(2021, 4, HEADER_CH_ENTER_CHECKBOT);
//	REGN(2022, 8, HEADER_ZC_MSG_SKILL, PROTOID_ZC_MSG_SKILL, PACKET_ZC_MSG_SKILL);
//	REGN(2023, 32, HEADER_CH_CHECKBOT);
//	REGV(2024, 4, HEADER_HC_CHECKBOT);
//	REGN(2025, 5, HEADER_HC_CHECKBOT_RESULT);
//	REGN(2026, 2, HEADER_CZ_BATTLE_FIELD_LIST);
//	REGV(2027, 8, HEADER_ZC_BATTLE_FIELD_LIST);
//	REGN(2028, 8, HEADER_CZ_JOIN_BATTLE_FIELD);
//	REGN(2029, 10, HEADER_ZC_JOIN_BATTLE_FIELD);
//	REGN(2030, 6, HEADER_CZ_CANCEL_BATTLE_FIELD);
//	REGN(2031, 8, HEADER_ZC_CANCEL_BATTLE_FIELD);
//	REGN(2032, 6, HEADER_CZ_REQ_BATTLE_STATE_MONITOR);
//	REGN(2033, 18, HEADER_ZC_ACK_BATTLE_STATE_MONITOR);
//	REGN(2034, 8, HEADER_ZC_BATTLE_NOTI_START_STEP);
//	REGN(2035, 6, HEADER_ZC_BATTLE_JOIN_NOTI_DEFER);
//	REGN(2036, 3, HEADER_ZC_BATTLE_JOIN_DISABLE_STATE);
//	REGN(2037, 6, HEADER_CZ_GM_FULLSTRIP, PROTOID_CZ_GM_FULLSTRIP, PACKET_CZ_GM_FULLSTRIP);
//	REGN(2038, 14, HEADER_ZC_NOTIFY_EXP, PROTOID_ZC_NOTIFY_EXP, PACKET_ZC_NOTIFY_EXP);
//	REGV(2039, 69, HEADER_ZC_NOTIFY_MOVEENTRY7, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY7);
//	REGV(2040, 62, HEADER_ZC_NOTIFY_NEWENTRY5, PROTOID_ZC_NOTIFY_NEWENTRY, PACKET_ZC_NOTIFY_NEWENTRY5);
//	REGV(2041, 63, HEADER_ZC_NOTIFY_STANDENTRY5, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY5);
//	REGN(2042, 8, HEADER_ZC_DELETE_ITEM_FROM_BODY, PROTOID_ZC_ITEM_THROW_ACK, PACKET_ZC_DELETE_ITEM_FROM_BODY);
//	REGN(2043, 25, HEADER_ZC_USESKILL_ACK2, PROTOID_ZC_USESKILL_ACK, PACKET_ZC_USESKILL_ACK2);
//	REGN(2044, 10, HEADER_ZC_CHANGE_GROUP_MASTER);
//	REGV(2045, 7, HEADER_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN);
//	REGN(2046, 26, HEADER_ZC_PLAY_NPC_BGM);
//	REGN(2047, ?, HEADER_ZC_DEFINE_CHECK); // no-len
//	REGV(2048, 12, HEADER_ZC_PC_PURCHASE_ITEMLIST_FROMMC2, PROTOID_ZC_PC_PURCHASE_ITEMLIST_FROMMC, PACKET_ZC_PC_PURCHASE_ITEMLIST_FROMMC2);
//	REGN(2049, 12, HEADER_CZ_PC_PURCHASE_ITEMLIST_FROMMC2, PROTOID_CZ_PC_PURCHASE_ITEMLIST_FROMMC, PACKET_CZ_PC_PURCHASE_ITEMLIST_FROMMC2);
//	REGN(2050, 18, HEADER_CZ_PARTY_BOOKING_REQ_REGISTER);
//	REGN(2051, 4, HEADER_ZC_PARTY_BOOKING_ACK_REGISTER);
//	REGN(2052, 14, HEADER_CZ_PARTY_BOOKING_REQ_SEARCH);
//	REGV(2053, 5, HEADER_ZC_PARTY_BOOKING_ACK_SEARCH);
//	REGN(2054, 2, HEADER_CZ_PARTY_BOOKING_REQ_DELETE);
//	REGN(2055, 4, HEADER_ZC_PARTY_BOOKING_ACK_DELETE);
//	REGN(2056, 14, HEADER_CZ_PARTY_BOOKING_REQ_UPDATE);
//	REGN(2057, 50, HEADER_ZC_PARTY_BOOKING_NOTIFY_INSERT);
//	REGN(2058, 18, HEADER_ZC_PARTY_BOOKING_NOTIFY_UPDATE);
//	REGN(2059, 6, HEADER_ZC_PARTY_BOOKING_NOTIFY_DELETE);
//	REGN(2060, 2, HEADER_CZ_SIMPLE_CASH_BTNSHOW);
//	REGN(2061, 3, HEADER_ZC_SIMPLE_CASH_BTNSHOW);
//	REGN(2062, 14, HEADER_ZC_NOTIFY_HP_TO_GROUPM_R2, PROTOID_ZC_NOTIFY_HP_TO_GROUPM, PACKET_ZC_NOTIFY_HP_TO_GROUPM_R2);
//	REGN(2063, 20, HEADER_ZC_ADD_EXCHANGE_ITEM2, PROTOID_ZC_ADD_EXCHANGE_ITEM, PACKET_ZC_ADD_EXCHANGE_ITEM2);
//	REGN(2064, 3, HEADER_ZC_OPEN_BUYING_STORE);
//	REGV(2065, 89, HEADER_CZ_REQ_OPEN_BUYING_STORE);
//	REGN(2066, 8, HEADER_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER);
//	REGV(2067, 12, HEADER_ZC_MYITEMLIST_BUYING_STORE);
//	REGN(2068, 86, HEADER_ZC_BUYING_STORE_ENTRY);
//	REGN(2069, 2, HEADER_CZ_REQ_CLOSE_BUYING_STORE);
//	REGN(2070, 6, HEADER_ZC_DISAPPEAR_BUYING_STORE_ENTRY);
//	REGN(2071, 6, HEADER_CZ_REQ_CLICK_TO_BUYING_STORE);
//	REGV(2072, 16, HEADER_ZC_ACK_ITEMLIST_BUYING_STORE);
//	REGV(2073, 12, HEADER_CZ_REQ_TRADE_BUYING_STORE);
//	REGN(2074, 4, HEADER_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER);
//	REGN(2075, 10, HEADER_ZC_UPDATE_ITEM_FROM_BUYING_STORE);
//	REGN(2076, 10, HEADER_ZC_ITEM_DELETE_BUYING_STORE);
//	REGN(2077, 22, HEADER_ZC_EL_INIT);
//	REGN(2078, 8, HEADER_ZC_EL_PAR_CHANGE);
//	REGV(2079, 9, HEADER_ZC_BROADCAST4);
//	REGN(2080, 11, HEADER_ZC_COSTUME_SPRITE_CHANGE);
//	REGN(2081, 2, HEADER_AC_OTP_USER);
//	REGN(2082, 9, HEADER_CA_OTP_AUTH_REQ);
//	REGV(2083, 6, HEADER_AC_OTP_AUTH_ACK);
//	REGN(2084, 6, HEADER_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER);
//	REGV(2085, 65, HEADER_CA_SSO_LOGIN_REQ);
//	REGN(2086, 4, HEADER_AC_SSO_LOGIN_ACK);
//	REGN(2087, 6, HEADER_CH_DELETE_CHAR3_RESERVED);
//	REGN(2088, 14, HEADER_HC_DELETE_CHAR3_RESERVED);
//	REGN(2089, 12, HEADER_CH_DELETE_CHAR3);
//	REGN(2090, 10, HEADER_HC_DELETE_CHAR3);
//	REGN(2091, 6, HEADER_CH_DELETE_CHAR3_CANCEL);
//	REGN(2092, 10, HEADER_HC_DELETE_CHAR3_CANCEL);
//	REGV(2093, 29, HEADER_HC_ACCEPT_ENTER2);
//	...
//	REGV(2101, 15, HEADER_CZ_SEARCH_STORE_INFO);
//	REGV(2102, 7, HEADER_ZC_SEARCH_STORE_INFO_ACK);
//	REGN(2103, 3, HEADER_ZC_SEARCH_STORE_INFO_FAILED);
//	REGN(2104, 2, HEADER_CZ_SEARCH_STORE_INFO_NEXT_PAGE);
//	REGN(2105, 66, HEADER_ZC_ACK_BAN_GUILD_SSO);
//	REGN(2106, 5, HEADER_ZC_OPEN_SEARCH_STORE_INFO);
//	REGN(2107, 2, HEADER_CZ_CLOSE_SEARCH_STORE_INFO);
//	REGN(2108, 12, HEADER_CZ_SSILIST_ITEM_CLICK);
//	REGN(2109, 6, HEADER_ZC_SSILIST_ITEM_CLICK_ACK);
//	REGN(2110, 26, HEADER_AC_REFUSE_LOGIN_R2);
//	REGN(2111, 22, HEADER_ZC_SEARCH_STORE_OPEN_INFO); // no-len
//	REGV(2112, 4, HEADER_HC_NOTIFY_ACCESSIBLE_MAPNAME);
//	REGN(2113, 4, HEADER_CH_SELECT_ACCESSIBLE_MAPNAME);
//	REGN(2114, 6, HEADER_CZ_RECALL_SSO);
//	REGN(2115, 6, HEADER_CZ_REMOVE_AID_SSO);
//	REGN(2116, 2, HEADER_CZ_SE_CASHSHOP_OPEN);
//	REGN(2117, 6, HEADER_ZC_SE_CASHSHOP_OPEN);
//	REGN(2118, 4, HEADER_CZ_REQ_SE_CASH_TAB_CODE);
//	REGV(2119, 6, HEADER_ZC_ACK_SE_CASH_ITEM_LIST);
//	REGV(2120, 6, HEADER_CZ_SE_PC_BUY_CASHITEM_LIST);
//	REGN(2121, 12, HEADER_ZC_SE_PC_BUY_CASHITEM_RESULT);
//	REGN(2122, 2, HEADER_CZ_SE_CASHSHOP_CLOSE);
//	REGN(2123, 19, HEADER_ZC_ITEM_FALL_ENTRY4);
//	REGN(2124, 10, HEADER_CZ_MACRO_USE_SKILL);
//	REGN(2125, 10, HEADER_CZ_MACRO_USE_SKILL_TOGROUND);
//	REGN(2126, 5, HEADER_CZ_MACRO_REQUEST_MOVE);
//	REGN(2127, 6, HEADER_CZ_MACRO_ITEM_PICKUP);
//	REGN(2128, 7, HEADER_CZ_MACRO_REQUEST_ACT);
//	REGV(2129, 4, HEADER_ZC_GPK_DYNCODE);
//	REGN(2130, 2, HEADER_CZ_GPK_DYNCODE_RELOAD);
//	REGV(2131, 4, HEADER_ZC_GPK_AUTH);
//	REGV(2132, 4, HEADER_CZ_GPK_AUTH);
//	REGN(2133, 6, HEADER_ZC_MACRO_ITEMPICKUP_FAIL);
//	REGV(2134, 71, HEADER_ZC_NOTIFY_MOVEENTRY8, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY8);
//	REGV(2135, 65, HEADER_ZC_NOTIFY_STANDENTRY7, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY7);
//	REGV(2136, 64, HEADER_ZC_NOTIFY_NEWENTRY6, PROTOID_ZC_NOTIFY_NEWENTRY, PACKET_ZC_NOTIFY_NEWENTRY6);
//	REGV(2137, 45, HEADER_ZC_EQUIPWIN_MICROSCOPE2, PROTOID_ZC_EQUIPWIN_MICROSCOPE, PACKET_ZC_EQUIPWIN_MICROSCOPE2);
//	REGN(2138, 2, HEADER_ZC_REASSEMBLY_AUTH01);
//	REGN(2139, 2, HEADER_ZC_REASSEMBLY_AUTH02);
//	REGN(2140, 2, HEADER_ZC_REASSEMBLY_AUTH03);
//	REGN(2141, 2, HEADER_ZC_REASSEMBLY_AUTH04);
//	REGN(2142, 2, HEADER_ZC_REASSEMBLY_AUTH05);
//	REGN(2143, 2, HEADER_ZC_REASSEMBLY_AUTH06);
//	REGN(2144, 2, HEADER_ZC_REASSEMBLY_AUTH07);
//	REGN(2145, 2, HEADER_ZC_REASSEMBLY_AUTH08);
//	REGN(2146, 2, HEADER_ZC_REASSEMBLY_AUTH09);
//	REGN(2147, 2, HEADER_ZC_REASSEMBLY_AUTH10);
//	REGN(2148, 2, HEADER_ZC_REASSEMBLY_AUTH11);
//	REGN(2149, 2, HEADER_ZC_REASSEMBLY_AUTH12);
//	REGN(2150, 2, HEADER_ZC_REASSEMBLY_AUTH13);
//	REGN(2151, 2, HEADER_ZC_REASSEMBLY_AUTH14);
//	REGN(2152, 2, HEADER_ZC_REASSEMBLY_AUTH15);
//	REGN(2153, 2, HEADER_ZC_REASSEMBLY_AUTH16);
//	REGN(2154, 2, HEADER_ZC_REASSEMBLY_AUTH17);
//	REGN(2155, 2, HEADER_ZC_REASSEMBLY_AUTH18);
//	REGN(2156, 2, HEADER_ZC_REASSEMBLY_AUTH19);
//	REGN(2157, 2, HEADER_ZC_REASSEMBLY_AUTH20);
//	REGN(2158, 2, HEADER_ZC_REASSEMBLY_AUTH21);
//	REGN(2159, 2, HEADER_ZC_REASSEMBLY_AUTH22);
//	REGN(2160, 2, HEADER_ZC_REASSEMBLY_AUTH23);
//	REGN(2161, 2, HEADER_ZC_REASSEMBLY_AUTH24);
//	REGN(2162, 2, HEADER_ZC_REASSEMBLY_AUTH25);
//	REGN(2163, 2, HEADER_ZC_REASSEMBLY_AUTH26);
//	REGN(2164, 2, HEADER_ZC_REASSEMBLY_AUTH27);
//	REGN(2165, 2, HEADER_ZC_REASSEMBLY_AUTH28);
//	REGN(2166, 2, HEADER_ZC_REASSEMBLY_AUTH29);
//	REGN(2167, 2, HEADER_ZC_REASSEMBLY_AUTH30);
//	REGN(2168, 2, HEADER_ZC_REASSEMBLY_AUTH31);
//	REGN(2169, 2, HEADER_ZC_REASSEMBLY_AUTH32);
//	REGN(2170, 2, HEADER_ZC_REASSEMBLY_AUTH33);
//	REGN(2171, 2, HEADER_ZC_REASSEMBLY_AUTH34);
//	REGN(2172, 2, HEADER_ZC_REASSEMBLY_AUTH35);
//	REGN(2173, 2, HEADER_ZC_REASSEMBLY_AUTH36);
//	REGN(2174, 2, HEADER_ZC_REASSEMBLY_AUTH37);
//	REGN(2175, 2, HEADER_ZC_REASSEMBLY_AUTH38);
//	REGN(2176, 2, HEADER_ZC_REASSEMBLY_AUTH39);
//	REGN(2177, 2, HEADER_ZC_REASSEMBLY_AUTH40);
//	REGN(2178, 2, HEADER_ZC_REASSEMBLY_AUTH41);
//	REGN(2179, 2, HEADER_ZC_REASSEMBLY_AUTH42);
//	REGN(2180, 2, HEADER_CZ_REASSEMBLY_AUTH01);
//	REGN(2181, 2, HEADER_CZ_REASSEMBLY_AUTH02);
//	REGN(2182, 2, HEADER_CZ_REASSEMBLY_AUTH03);
//	REGN(2183, 2, HEADER_CZ_REASSEMBLY_AUTH04);
//	REGN(2184, 2, HEADER_CZ_REASSEMBLY_AUTH05);
//	REGN(2185, 2, HEADER_CZ_REASSEMBLY_AUTH06);
//	REGN(2186, 2, HEADER_CZ_REASSEMBLY_AUTH07);
//	REGN(2187, 2, HEADER_CZ_REASSEMBLY_AUTH08);
//	REGN(2188, 2, HEADER_CZ_REASSEMBLY_AUTH09);
//	REGN(2189, 2, HEADER_CZ_REASSEMBLY_AUTH10);
//	REGN(2190, 2, HEADER_CZ_REASSEMBLY_AUTH11);
//	REGN(2191, 2, HEADER_CZ_REASSEMBLY_AUTH12);
//	REGN(2192, 2, HEADER_CZ_REASSEMBLY_AUTH13);
//	REGN(2193, 2, HEADER_CZ_REASSEMBLY_AUTH14);
//	REGN(2194, 2, HEADER_CZ_REASSEMBLY_AUTH15);
//	REGN(2195, 2, HEADER_CZ_REASSEMBLY_AUTH16);
//	REGN(2196, 2, HEADER_CZ_REASSEMBLY_AUTH17);
//	REGN(2197, 2, HEADER_CZ_REASSEMBLY_AUTH18);
//	REGN(2198, 2, HEADER_CZ_REASSEMBLY_AUTH19);
//	REGN(2199, 2, HEADER_CZ_REASSEMBLY_AUTH20);
//	REGN(2200, 2, HEADER_CZ_REASSEMBLY_AUTH21);
//	REGN(2201, 2, HEADER_CZ_REASSEMBLY_AUTH22);
//	REGN(2202, 2, HEADER_CZ_REASSEMBLY_AUTH23);
//	REGN(2203, 2, HEADER_CZ_REASSEMBLY_AUTH24);
//	REGN(2204, 2, HEADER_CZ_REASSEMBLY_AUTH25);
//	REGN(2205, 2, HEADER_CZ_REASSEMBLY_AUTH26);
//	REGN(2206, 2, HEADER_CZ_REASSEMBLY_AUTH27);
//	REGN(2207, 2, HEADER_CZ_REASSEMBLY_AUTH28);
//	REGN(2208, 2, HEADER_CZ_REASSEMBLY_AUTH29);
//	REGN(2209, 2, HEADER_CZ_REASSEMBLY_AUTH30);
//	REGN(2210, 2, HEADER_CZ_REASSEMBLY_AUTH31);
//	REGN(2211, 2, HEADER_CZ_REASSEMBLY_AUTH32);
//	REGN(2212, 2, HEADER_CZ_REASSEMBLY_AUTH33);
//	REGN(2213, 2, HEADER_CZ_REASSEMBLY_AUTH34);
//	REGN(2214, 2, HEADER_CZ_REASSEMBLY_AUTH35);
//	REGN(2215, 2, HEADER_CZ_REASSEMBLY_AUTH36);
//	REGN(2216, 2, HEADER_CZ_REASSEMBLY_AUTH37);
//	REGN(2217, 2, HEADER_CZ_REASSEMBLY_AUTH38);
//	REGN(2218, 2, HEADER_CZ_REASSEMBLY_AUTH39);
//	REGN(2219, 2, HEADER_CZ_REASSEMBLY_AUTH40);
//	REGN(2220, 2, HEADER_CZ_REASSEMBLY_AUTH41);
//	REGN(2221, 2, HEADER_CZ_REASSEMBLY_AUTH42);
//	REGN(2222, ?, HEADER_CC_REPLAYPACKET); // no-len
//	REGN(2223, 10, HEADER_HC_WAITING_LOGIN);
//	REGN(2224, 17, HEADER_CH_WAITING_LOGIN);
//	REGV(2225, 4, HEADER_ZC_MCSTORE_NOTMOVEITEM_LIST);
//	REGV(2226, 6, HEADER_AC_REALNAME_AUTH);
//	REGV(2227, 8, HEADER_ZC_SHOWSCRIPT);
//	REGN(2228, 2, HEADER_ZC_START_COLLECTION);
//	REGN(2229, 6, HEADER_CZ_TRYCOLLECTION);
//	REGN(2230, 3, HEADER_ZC_TRYCOLLECTION);
//	REGN(2231, ?, HEADER_HC_SECOND_PASSWD_REQ); // no-len
//	REGN(2232, 10, HEADER_CH_SECOND_PASSWD_ACK);
//	REGN(2233, 12, HEADER_HC_SECOND_PASSWD_LOGIN);
//	REGN(2234, 10, HEADER_CH_MAKE_SECOND_PASSWD);
//	REGN(2235, 8, HEADER_HC_MAKE_SECOND_PASSWD);
//	REGN(2236, 10, HEADER_CH_DELETE_SECOND_PASSWD);
//	REGN(2237, 8, HEADER_HC_DELETE_SECOND_PASSWD);
//	REGN(2238, 14, HEADER_CH_EDIT_SECOND_PASSWD);
//	REGN(2239, 8, HEADER_HC_EDIT_SECOND_PASSWD);
//	REGV(2240, 10, HEADER_ZC_ACK_SE_CASH_ITEM_LIST2);
//	REGN(2241, 2, HEADER_CZ_MACRO_START);
//	REGN(2242, 2, HEADER_CZ_MACRO_STOP);
//	REGN(2243, 10, HEADER_CH_NOT_AVAILABLE_SECOND_PASSWD);
//	REGN(2244, 8, HEADER_HC_NOT_AVAILABLE_SECOND_PASSWD);
//	REGN(2245, 6, HEADER_CH_AVAILABLE_SECOND_PASSWD);
//	REGN(2246, 4, HEADER_HC_AVAILABLE_SECOND_PASSWD);
//	REGV(2247, 19, HEADER_ZC_SKILL_ENTRY3);
//	REGN(2248, 34, HEADER_ZC_NOTIFY_ACT3, PROTOID_ZC_NOTIFY_ACT, PACKET_ZC_NOTIFY_ACT3);
//	REGN(2249, 2, HEADER_CZ_REQ_SCHEDULER_CASHITEM);
//	REGV(2250, 10, HEADER_ZC_ACK_SCHEDULER_CASHITEM);
//	REGV(2251, 10, HEADER_ZC_PERSONAL_INFOMATION);
//	REGN(2252, 109, HEADER_CA_LOGIN5);
//	REGN(2253, 10, HEADER_ZC_STOPMOVE_FORCE);
//	REGN(2254, 2, HEADER_ZC_FAILED_GET_ITEM_FROM_ZONEDA);
//	REGN(2255, 10, HEADER_ZC_SPIRITS_ATTRIBUTE);
//	REGN(2256, 9, HEADER_ZC_REQ_WEAR_EQUIP_ACK2);
//	REGN(2257, 7, HEADER_ZC_REQ_TAKEOFF_EQUIP_ACK2);
//	REGN(2258, 10, HEADER_ZC_FASTMOVE);
//	REGN(2259, 10, HEADER_ZC_SE_CASHSHOP_UPDATE);
//	REGN(2260, 8, HEADER_CH_REQ_CHANGE_CHARACTER_SLOT);
//	REGV(2261, 8, HEADER_HC_ACK_CHANGE_CHARACTER_SLOT);
//	REGN(2262, 6, HEADER_ZC_CLEAR_DIALOG);
//	REGN(2263, 28, HEADER_CZ_REQ_ENTRY_QUEUE_APPLY);
//	REGN(2264, 27, HEADER_ZC_ACK_ENTRY_QUEUE_APPLY);
//	REGN(2265, 30, HEADER_ZC_NOTIFY_ENTRY_QUEUE_APPLY);
//	REGN(2266, 26, HEADER_CZ_REQ_ENTRY_QUEUE_CANCEL);
//	REGN(2267, 27, HEADER_ZC_ACK_ENTRY_QUEUE_CANCEL);
//	REGN(2268, 26, HEADER_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION);
//	REGN(2269, 27, HEADER_CZ_REPLY_ENTRY_QUEUE_ADMISSION);
//	REGN(2270, 27, HEADER_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION);
//	REGN(2271, 50, HEADER_ZC_NOTIFY_LOBBY_ADMISSION);
//	REGN(2272, 51, HEADER_CZ_REPLY_LOBBY_ADMISSION);
//	REGN(2273, 51, HEADER_ZC_REPLY_ACK_LOBBY_ADMISSION);
//	REGN(2274, 27, HEADER_ZC_NAVIGATION_ACTIVE);
//	REGN(2275, 118, HEADER_HC_UPDATE_CHARINFO);
//	REGN(2276, 6, HEADER_AC_SHUTDOWN_INFO);
//	REGN(2277, 41, HEADER_CZ_PARTY_RECRUIT_REQ_REGISTER);
//	REGN(2278, 4, HEADER_ZC_PARTY_RECRUIT_ACK_REGISTER);
//	REGN(2279, 10, HEADER_CZ_PARTY_RECRUIT_REQ_SEARCH);
//	REGV(2280, 5, HEADER_ZC_PARTY_RECRUIT_ACK_SEARCH);
//	REGN(2281, 2, HEADER_CZ_PARTY_RECRUIT_REQ_DELETE);
//	REGN(2282, 4, HEADER_ZC_PARTY_RECRUIT_ACK_DELETE);
//	REGN(2283, 39, HEADER_CZ_PARTY_RECRUIT_REQ_UPDATE);
//	REGN(2284, 73, HEADER_ZC_PARTY_RECRUIT_NOTIFY_INSERT);
//	REGN(2285, 43, HEADER_ZC_PARTY_RECRUIT_NOTIFY_UPDATE);
//	REGN(2286, 6, HEADER_ZC_PARTY_RECRUIT_NOTIFY_DELETE);
//	REGN(2287, 6, HEADER_CZ_PARTY_RECRUIT_ADD_FILTERLINGLIST);
//	REGN(2288, 6, HEADER_CZ_PARTY_RECRUIT_SUB_FILTERLINGLIST);
//	REGN(2289, 6, HEADER_CZ_PARTY_RECRUIT_REQ_VOLUNTEER);
//	REGN(2290, 36, HEADER_ZC_PARTY_RECRUIT_VOLUNTEER_INFO);
//	REGV(2291, 8, HEADER_ZC_PARTY_RECRUIT_PERSONAL_SETTING);
//	REGN(2292, 6, HEADER_CZ_PARTY_RECRUIT_SHOW_EQUIPMENT);
//	REGV(2293, 4, HEADER_CZ_PARTY_RECRUIT_REQ_RECALL);
//	REGN(2294, 22, HEADER_ZC_PARTY_RECRUIT_RECALL_COST);
//	REGN(2295, 3, HEADER_CZ_PARTY_RECRUIT_ACK_RECALL);
//	REGN(2296, 7, HEADER_ZC_PARTY_RECRUIT_FAILED_RECALL);
//	REGN(2297, 6, HEADER_CZ_PARTY_RECRUIT_REFUSE_VOLUNTEER);
//	REGN(2298, 6, HEADER_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER);
//	REGN(2299, 6, HEADER_CZ_PARTY_RECRUIT_CANCEL_VOLUNTEER);
//	REGN(2300, 30, HEADER_CH_REQ_CHANGE_CHARACTERNAME);
//	REGN(2301, 6, HEADER_CH_ACK_CHANGE_CHARACTERNAME);
//	REGV(2302, 4, HEADER_ZC_HUNTING_QUEST_INFO);
//	REGN(2303, 24, HEADER_ZC_EFST_SET_ENTER);
//	REGV(2304, 4, HEADER_ZC_INVENTORY_ITEMLIST_NORMAL);
//	REGV(2305, 4, HEADER_ZC_INVENTORY_ITEMLIST_EQUIP);
//	REGV(2306, 4, HEADER_ZC_CART_ITEMLIST_NORMAL);
//	REGV(2307, 4, HEADER_ZC_CART_ITEMLIST_EQUIP);
//	REGV(2308, 4, HEADER_ZC_STORE_ITEMLIST_NORMAL);
//	REGV(2309, 4, HEADER_ZC_STORE_ITEMLIST_EQUIP);
//	REGV(2310, 45, HEADER_ZC_MICROSCOPE);
//	REGN(2311, 5, HEADER_CZ_INVENTORY_TAB);
//	REGN(2312, 5, HEADER_ZC_INVENTORY_TAB);
//	REGN(2313, 6, HEADER_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER);
//	REGN(2314, 26, HEADER_CZ_REQ_ENTRY_QUEUE_RANKING);
//	REGN(2315, 30, HEADER_ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST);
//	REGN(2316, 30, HEADER_ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST);
//	REGV(2317, 10, HEADER_ZC_PREMIUM_CAMPAIGN_INFO);
//	REGN(2318, 2, HEADER_ZC_ENTRY_QUEUE_INIT);
//	REGV(2319, 73, HEADER_ZC_NOTIFY_NEWENTRY7);
//	REGN(2320, 10, HEADER_CZ_REQ_PARTY_NAME);
//	REGN(2321, 30, HEADER_ZC_ACK_PARTY_NAME);
//	REGN(2322, 10, HEADER_CZ_REQ_GUILD_NAME);
//	REGN(2323, 30, HEADER_ZC_ACK_GUILD_NAME);
//	REGV(2324, 80, HEADER_ZC_NOTIFY_MOVEENTRY9);
//	REGV(2325, 74, HEADER_ZC_NOTIFY_STANDENTRY8);
//	REGN(2326, 26, HEADER_CZ_REQ_JOIN_GUILD2);
//	REGN(2327, 2, HEADER_ZC_REASSEMBLY_AUTH43);
//	REGN(2328, 2, HEADER_ZC_REASSEMBLY_AUTH44);
//	REGN(2329, 2, HEADER_ZC_REASSEMBLY_AUTH45);
//	REGN(2330, 2, HEADER_ZC_REASSEMBLY_AUTH46);
//	REGN(2331, 2, HEADER_ZC_REASSEMBLY_AUTH47);
//	REGN(2332, 2, HEADER_ZC_REASSEMBLY_AUTH48);
//	REGN(2333, 2, HEADER_ZC_REASSEMBLY_AUTH49);
//	REGN(2334, 2, HEADER_ZC_REASSEMBLY_AUTH50);
//	REGN(2335, 2, HEADER_ZC_REASSEMBLY_AUTH51);
//	REGN(2336, 2, HEADER_ZC_REASSEMBLY_AUTH52);
//	REGN(2337, 2, HEADER_ZC_REASSEMBLY_AUTH53);
//	REGN(2338, 2, HEADER_ZC_REASSEMBLY_AUTH54);
//	REGN(2339, 2, HEADER_ZC_REASSEMBLY_AUTH55);
//	REGN(2340, 2, HEADER_ZC_REASSEMBLY_AUTH56);
//	REGN(2341, 2, HEADER_ZC_REASSEMBLY_AUTH57);
//	REGN(2342, 2, HEADER_ZC_REASSEMBLY_AUTH58);
//	REGN(2343, 2, HEADER_ZC_REASSEMBLY_AUTH59);
//	REGN(2344, 2, HEADER_ZC_REASSEMBLY_AUTH60);
//	REGN(2345, 2, HEADER_ZC_REASSEMBLY_AUTH61);
//	REGN(2346, 2, HEADER_ZC_REASSEMBLY_AUTH62);
//	REGN(2347, 2, HEADER_ZC_REASSEMBLY_AUTH63);
//	REGN(2348, 2, HEADER_ZC_REASSEMBLY_AUTH64);
//	REGN(2349, 2, HEADER_ZC_REASSEMBLY_AUTH65);
//	REGN(2350, 2, HEADER_ZC_REASSEMBLY_AUTH66);
//	REGN(2351, 2, HEADER_ZC_REASSEMBLY_AUTH67);
//	REGN(2352, 2, HEADER_ZC_REASSEMBLY_AUTH68);
//	REGN(2353, 2, HEADER_ZC_REASSEMBLY_AUTH69);
//	REGN(2354, 2, HEADER_ZC_REASSEMBLY_AUTH70);
//	REGN(2355, 2, HEADER_ZC_REASSEMBLY_AUTH71);
//	REGN(2356, 2, HEADER_ZC_REASSEMBLY_AUTH72);
//	REGN(2357, 2, HEADER_ZC_REASSEMBLY_AUTH73);
//	REGN(2358, 2, HEADER_ZC_REASSEMBLY_AUTH74);
//	REGN(2359, 2, HEADER_ZC_REASSEMBLY_AUTH75);
//	REGN(2360, 2, HEADER_ZC_REASSEMBLY_AUTH76);
//	REGN(2361, 2, HEADER_ZC_REASSEMBLY_AUTH77);
//	REGN(2362, 2, HEADER_ZC_REASSEMBLY_AUTH78);
//	REGN(2363, 2, HEADER_ZC_REASSEMBLY_AUTH79);
//	REGN(2364, 2, HEADER_ZC_REASSEMBLY_AUTH80);
//	REGN(2365, 2, HEADER_ZC_REASSEMBLY_AUTH81);
//	REGN(2366, 2, HEADER_ZC_REASSEMBLY_AUTH82);
//	REGN(2367, 2, HEADER_ZC_REASSEMBLY_AUTH83);
//	REGN(2368, 2, HEADER_ZC_REASSEMBLY_AUTH84);
//	REGN(2369, 2, HEADER_CZ_REASSEMBLY_AUTH43);
//	REGN(2370, 2, HEADER_CZ_REASSEMBLY_AUTH44);
//	REGN(2371, 2, HEADER_CZ_REASSEMBLY_AUTH45);
//	REGN(2372, 2, HEADER_CZ_REASSEMBLY_AUTH46);
//	REGN(2373, 2, HEADER_CZ_REASSEMBLY_AUTH47);
//	REGN(2374, 2, HEADER_CZ_REASSEMBLY_AUTH48);
//	REGN(2375, 2, HEADER_CZ_REASSEMBLY_AUTH49);
//	REGN(2376, 2, HEADER_CZ_REASSEMBLY_AUTH50);
//	REGN(2377, 2, HEADER_CZ_REASSEMBLY_AUTH51);
//	REGN(2378, 2, HEADER_CZ_REASSEMBLY_AUTH52);
//	REGN(2379, 2, HEADER_CZ_REASSEMBLY_AUTH53);
//	REGN(2380, 2, HEADER_CZ_REASSEMBLY_AUTH54);
//	REGN(2381, 2, HEADER_CZ_REASSEMBLY_AUTH55);
//	REGN(2382, 2, HEADER_CZ_REASSEMBLY_AUTH56);
//	REGN(2383, 2, HEADER_CZ_REASSEMBLY_AUTH57);
//	REGN(2384, 2, HEADER_CZ_REASSEMBLY_AUTH58);
//	REGN(2385, 2, HEADER_CZ_REASSEMBLY_AUTH59);
//	REGN(2386, 2, HEADER_CZ_REASSEMBLY_AUTH60);
//	REGN(2387, 2, HEADER_CZ_REASSEMBLY_AUTH61);
//	REGN(2388, 2, HEADER_CZ_REASSEMBLY_AUTH62);
//	REGN(2389, 2, HEADER_CZ_REASSEMBLY_AUTH63);
//	REGN(2390, 2, HEADER_CZ_REASSEMBLY_AUTH64);
//	REGN(2391, 2, HEADER_CZ_REASSEMBLY_AUTH65);
//	REGN(2392, 2, HEADER_CZ_REASSEMBLY_AUTH66);
//	REGN(2393, 2, HEADER_CZ_REASSEMBLY_AUTH67);
//	REGN(2394, 2, HEADER_CZ_REASSEMBLY_AUTH68);
//	REGN(2395, 2, HEADER_CZ_REASSEMBLY_AUTH69);
//	REGN(2396, 2, HEADER_CZ_REASSEMBLY_AUTH70);
//	REGN(2397, 2, HEADER_CZ_REASSEMBLY_AUTH71);
//	REGN(2398, 2, HEADER_CZ_REASSEMBLY_AUTH72);
//	REGN(2399, 2, HEADER_CZ_REASSEMBLY_AUTH73);
//	REGN(2400, 2, HEADER_CZ_REASSEMBLY_AUTH74);
//	REGN(2401, 2, HEADER_CZ_REASSEMBLY_AUTH75);
//	REGN(2402, 2, HEADER_CZ_REASSEMBLY_AUTH76);
//	REGN(2403, 2, HEADER_CZ_REASSEMBLY_AUTH77);
//	REGN(2404, 2, HEADER_CZ_REASSEMBLY_AUTH78);
//	REGN(2405, 2, HEADER_CZ_REASSEMBLY_AUTH79);
//	REGN(2406, 2, HEADER_CZ_REASSEMBLY_AUTH80);
//	REGN(2407, 2, HEADER_CZ_REASSEMBLY_AUTH81);
//	REGN(2408, 2, HEADER_CZ_REASSEMBLY_AUTH82);
//	REGN(2409, 2, HEADER_CZ_REASSEMBLY_AUTH83);
//	REGN(2410, 2, HEADER_CZ_REASSEMBLY_AUTH84);
//	REGN(2411, 4, HEADER_ZC_PRNPC_STATE);
//	REGN(2412, 6, HEADER_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM);
//	REGV(2413, 4, HEADER_ZC_MERGE_ITEM_OPEN);
//	REGV(2414, 4, HEADER_CZ_REQ_MERGE_ITEM);
//	REGN(2415, 7, HEADER_ZC_ACK_MERGE_ITEM);
//	REGN(2416, 31, HEADER_CH_MAKE_CHAR_NOT_STATS);
//	REGN(2417, 6, HEADER_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM);
//	REGV(2418, 9, HEADER_ZC_SAY_DIALOG2);
//	REGN(2419, 7, HEADER_ZC_WAIT_DIALOG2);
//	REGN(2420, 2, HEADER_CZ_CANCEL_MERGE_ITEM);
//	REGV(2421, 28, HEADER_ZC_STORE_ITEMLIST_NORMAL_V2);
//	REGV(2422, 28, HEADER_ZC_STORE_ITEMLIST_EQUIP_V2);
//	REGN(2423, 14, HEADER_ZC_HP_INFO);
//	REGN(2424, 6, HEADER_CZ_REQ_BEFORE_WORLD_INFO);
//	REGN(2425, 50, HEADER_ZC_ACK_BEFORE_WORLD_INFO);
//	REGV(2426, 8, HEADER_ZC_ALL_QUEST_LIST2);
//	REGV(2427, 16, HEADER_ZC_PERSONAL_INFOMATION2);
//	REGN(2428, 4, HEADER_CZ_REQ_RANKING);
//	REGN(2429, 288, HEADER_ZC_ACK_RANKING);
//	REGN(2430, 12, HEADER_ZC_UPDATE_RANKING_POINT);
//	REGV(2431, 8, HEADER_ZC_SELECTCART);
//	REGN(2432, 7, HEADER_CZ_SELECTCART);
//	REGV(2433, 12, HEADER_ZC_PERSONAL_INFOMATION_CHN);
//	REGN(2434, 7, HEADER_ZC_FATIGUE_CHN);
//	REGN(2435, 29, HEADER_ZC_MSG_STATE_CHANGE3);
//	REGN(2436, 28, HEADER_ZC_EFST_SET_ENTER2);
//	REGV(2437, 4, HEADER_ZC_SKILL_POSTDELAY_LIST2);
//	REGN(2438, 10, HEADER_AC_SHUTDOWN_NOTIFY);
//	REGV(2439, 41, HEADER_CA_LOGIN_CHN);
//	REGN(2440, 6, HEADER_ZC_NOTIFY_CLAN_CONNECTINFO);
//	REGN(2441, 2, HEADER_ZC_ACK_CLAN_LEAVE);
//	REGV(2442, 74, HEADER_ZC_CLANINFO);
//	REGN(2443, 2, HEADER_AC_REQ_NEW_USER);
//	REGN(2444, 4, HEADER_CA_ACK_NEW_USER);
//	REGV(2445, 4, HEADER_CZ_CLAN_CHAT);
//	REGV(2446, 28, HEADER_ZC_NOTIFY_CLAN_CHAT);
//	REGV(2447, 8, HEADER_CH_DELETE_CHAR3_EXT);
//	REGN(2448, 31, HEADER_ZC_ITEM_PICKUP_ACK_V5);
//	REGV(2449, 4, HEADER_ZC_INVENTORY_ITEMLIST_NORMAL_V5);
//	REGV(2450, 4, HEADER_ZC_INVENTORY_ITEMLIST_EQUIP_V5);
//	REGV(2451, 4, HEADER_ZC_CART_ITEMLIST_NORMAL_V5);
//	REGV(2452, 4, HEADER_ZC_CART_ITEMLIST_EQUIP_V5);
//	REGV(2453, 28, HEADER_ZC_STORE_ITEMLIST_NORMAL_V5);
//	REGV(2454, 28, HEADER_ZC_STORE_ITEMLIST_EQUIP_V5);
//	REGV(2455, 45, HEADER_ZC_EQUIPWIN_MICROSCOPE_V5);
//	REGN(2456, 8, HEADER_CZ_REQ_WEAR_EQUIP_V5);
//	REGN(2457, 11, HEADER_ZC_ACK_WEAR_EQUIP_V5);
//	REGN(2458, 9, HEADER_ZC_ACK_TAKEOFF_EQUIP_V5);
//	REGN(2459, 8, HEADER_ZC_MAPPROPERTY_R2);
//	REGN(2460, 6, HEADER_CH_REQ_CHARINFO_PER_PAGE);
//	REGV(2461, 4, HEADER_HC_ACK_CHARINFO_PER_PAGE);
//	REGN(2462, 12, HEADER_HC_WAITING_ENTER_QUEUE);
//	REGV(2463, 22, HEADER_ZC_SKILL_ENTRY4);
//	REGN(2464, 6, HEADER_HC_CHARLIST_NOTIFY);
//	REGN(2465, 2, HEADER_CH_CHARLIST_REQ);
//	REGN(2466, 0, HEADER_LAST); // dummy

	SetFirstRawPacketInfo(0x7FFF); // HEADER_HC_AID_RAW
}
