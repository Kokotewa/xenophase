#include "Protocol.h"
#include "packet/all.h"


static ProtocolImpl ProtocolInstance("Zone 2013-10-15 France");
void ProtocolImpl::InitInstance()
{
//	REGN(100, 55, HEADER_CA_LOGIN, PROTOID_CA_LOGIN, PACKET_CA_LOGIN);
//	REGN(101, 17, HEADER_CH_ENTER, PROTOID_CH_ENTER, PACKET_CH_ENTER);
//	REGN(102, 3, HEADER_CH_SELECT_CHAR, PROTOID_CH_SELECT_CHAR, PACKET_CH_SELECT_CHAR);
//	REGN(103, 37, HEADER_CH_MAKE_CHAR, PROTOID_CH_MAKE_CHAR, PACKET_CH_MAKE_CHAR);
//	REGN(104, 46, HEADER_CH_DELETE_CHAR, PROTOID_CH_DELETE_CHAR, PACKET_CH_DELETE_CHAR);
//	REGV(105, 47, HEADER_AC_ACCEPT_LOGIN, PROTOID_AC_ACCEPT_LOGIN, PACKET_AC_ACCEPT_LOGIN);
//	REGN(106, 23, HEADER_AC_REFUSE_LOGIN, PROTOID_AC_REFUSE_LOGIN, PACKET_AC_REFUSE_LOGIN);
//	REGN(0x7FFF, 4, HEADER_HC_AID_RAW, PROTOID_HC_AID, PACKET_HC_AID_RAW);
//	REGV(107, 4, HEADER_HC_ACCEPT_ENTER, PROTOID_HC_ACCEPT_ENTER, PACKET_HC_ACCEPT_ENTER_THAI20130312);
//	REGN(108, 3, HEADER_HC_REFUSE_ENTER, PROTOID_HC_REFUSE_ENTER, PACKET_HC_REFUSE_ENTER);
//	REGN(109, 118, HEADER_HC_ACCEPT_MAKECHAR, PROTOID_HC_ACCEPT_MAKECHAR, PACKET_HC_ACCEPT_MAKECHAR_THAI20130312);
//	REGN(110, 3, HEADER_HC_REFUSE_MAKECHAR, PROTOID_HC_REFUSE_MAKECHAR, PACKET_HC_REFUSE_MAKECHAR);
//	REGN(111, 2, HEADER_HC_ACCEPT_DELETECHAR, PROTOID_HC_ACCEPT_DELETECHAR, PACKET_HC_ACCEPT_DELETECHAR);
//	REGN(112, 3, HEADER_HC_REFUSE_DELETECHAR, PROTOID_HC_REFUSE_DELETECHAR, PACKET_HC_REFUSE_DELETECHAR);
//	REGN(113, 28, HEADER_HC_NOTIFY_ZONESVR, PROTOID_HC_NOTIFY_ZONESVR, PACKET_HC_NOTIFY_ZONESVR);
	REGN(114, 19, HEADER_CZ_ENTER, PROTOID_CZ_ENTER, PACKET_CZ_ENTER);
//	REGN(0x7FFE, 4, HEADER_ZC_AID_RAW, PROTOID_ZC_AID, PACKET_ZC_AID_RAW);
//	REGN(115, 11, HEADER_ZC_ACCEPT_ENTER, PROTOID_ZC_ACCEPT_ENTER, PACKET_ZC_ACCEPT_ENTER);
	REGN(116, 3, HEADER_ZC_REFUSE_ENTER, PROTOID_ZC_REFUSE_ENTER, PACKET_ZC_REFUSE_ENTER);
	REGV(117, 11, HEADER_ZC_NOTIFY_INITCHAR); //TODO
	REGN(118, 9, HEADER_ZC_NOTIFY_UPDATECHAR); //TODO
	REGN(119, 5, HEADER_ZC_NOTIFY_UPDATEPLAYER); //TODO
	REGN(120, 55, HEADER_ZC_NOTIFY_STANDENTRY); //TODO
	REGN(121, 53, HEADER_ZC_NOTIFY_NEWENTRY); //TODO
	REGN(122, 58, HEADER_ZC_NOTIFY_ACTENTRY); //TODO
//	REGN(123, 60, HEADER_ZC_NOTIFY_MOVEENTRY, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY);
//	REGN(124, 44, HEADER_ZC_NOTIFY_STANDENTRY_NPC, PROTOID_ZC_NOTIFY_STANDENTRY_NPC, PACKET_ZC_NOTIFY_STANDENTRY_NPC_2010);
	REGN(125, 2, HEADER_CZ_NOTIFY_ACTORINIT, PROTOID_CZ_NOTIFY_ACTORINIT, PACKET_CZ_NOTIFY_ACTORINIT);
	REGN(126, 6, HEADER_CZ_REQUEST_TIME, PROTOID_CZ_REQUEST_TIME, PACKET_CZ_REQUEST_TIME);
	REGN(127, 6, HEADER_ZC_NOTIFY_TIME, PROTOID_ZC_NOTIFY_TIME, PACKET_ZC_NOTIFY_TIME);
	REGN(128, 7, HEADER_ZC_NOTIFY_VANISH, PROTOID_ZC_NOTIFY_VANISH, PACKET_ZC_NOTIFY_VANISH);
	REGN(129, 3, HEADER_SC_NOTIFY_BAN, PROTOID_SC_NOTIFY_BAN, PACKET_SC_NOTIFY_BAN);
	REGN(130, 2, HEADER_CZ_REQUEST_QUIT); //TODO
	REGN(131, 2, HEADER_ZC_ACCEPT_QUIT); //TODO
	REGN(132, 2, HEADER_ZC_REFUSE_QUIT); //TODO
	REGN(133, 5, HEADER_CZ_REQUEST_MOVE, PROTOID_CZ_REQUEST_MOVE, PACKET_CZ_REQUEST_MOVE);
	REGN(134, 16, HEADER_ZC_NOTIFY_MOVE); //TODO
	REGN(135, 12, HEADER_ZC_NOTIFY_PLAYERMOVE, PROTOID_ZC_NOTIFY_PLAYERMOVE, PACKET_ZC_NOTIFY_PLAYERMOVE);
	REGN(136, 10, HEADER_ZC_STOPMOVE, PROTOID_ZC_STOPMOVE, PACKET_ZC_STOPMOVE);
	REGN(137, 7, HEADER_CZ_REQUEST_ACT, PROTOID_CZ_REQUEST_ACT, PACKET_CZ_REQUEST_ACT);
	REGN(138, 29, HEADER_ZC_NOTIFY_ACT, PROTOID_ZC_NOTIFY_ACT, PACKET_ZC_NOTIFY_ACT);
	REGN(139, 23, HEADER_ZC_NOTIFY_ACT_POSITION); //TODO
	REGV(140, 4, HEADER_CZ_REQUEST_CHAT, PROTOID_CZ_REQUEST_CHAT, PACKET_CZ_REQUEST_CHAT);
	REGV(141, 8, HEADER_ZC_NOTIFY_CHAT, PROTOID_ZC_NOTIFY_CHAT, PACKET_ZC_NOTIFY_CHAT);
	REGV(142, 4, HEADER_ZC_NOTIFY_PLAYERCHAT, PROTOID_ZC_NOTIFY_PLAYERCHAT, PACKET_ZC_NOTIFY_PLAYERCHAT);
	REGN(143, 6, HEADER_SC_ENTRY_ACK, PROTOID_SC_ENTRY_ACK, PACKET_SC_ENTRY_ACK);
	REGN(144, 7, HEADER_CZ_CONTACTNPC, PROTOID_CZ_CONTACTNPC, PACKET_CZ_CONTACTNPC);
	REGN(145, 22, HEADER_ZC_NPCACK_MAPMOVE, PROTOID_ZC_NPCACK_MAPMOVE, PACKET_ZC_NPCACK_MAPMOVE);
	REGN(146, 28, HEADER_ZC_NPCACK_SERVERMOVE); //TODO
	REGN(147, 2, HEADER_ZC_NPCACK_ENABLE); //TODO
	REGN(148, 6, HEADER_CZ_REQNAME); //TODO
	REGN(149, 30, HEADER_ZC_ACK_REQNAME, PROTOID_ZC_ACK_REQNAME, PACKET_ZC_ACK_REQNAME);
	REGV(150, 28, HEADER_CZ_WHISPER, PROTOID_CZ_WHISPER, PACKET_CZ_WHISPER);
	REGV(151, 32, HEADER_ZC_WHISPER, PROTOID_ZC_WHISPER, PACKET_ZC_WHISPER__KRO20061023);
	REGN(152, 3, HEADER_ZC_ACK_WHISPER, PROTOID_ZC_ACK_WHISPER, PACKET_ZC_ACK_WHISPER);
	REGV(153, 4, HEADER_CZ_BROADCAST, PROTOID_CZ_BROADCAST, PACKET_CZ_BROADCAST);
	REGV(154, 4, HEADER_ZC_BROADCAST, PROTOID_ZC_BROADCAST, PACKET_ZC_BROADCAST);
	REGN(155, 5, HEADER_CZ_CHANGE_DIRECTION, PROTOID_CZ_CHANGE_DIRECTION, PACKET_CZ_CHANGE_DIRECTION);
	REGN(156, 9, HEADER_ZC_CHANGE_DIRECTION, PROTOID_ZC_CHANGE_DIRECTION, PACKET_ZC_CHANGE_DIRECTION);
	REGN(157, 17, HEADER_ZC_ITEM_ENTRY, PROTOID_ZC_ITEM_ENTRY, PACKET_ZC_ITEM_ENTRY);
	REGN(158, 17, HEADER_ZC_ITEM_FALL_ENTRY, PROTOID_ZC_ITEM_FALL_ENTRY, PACKET_ZC_ITEM_FALL_ENTRY);
	REGN(159, 6, HEADER_CZ_ITEM_PICKUP, PROTOID_CZ_ITEM_PICKUP, PACKET_CZ_ITEM_PICKUP);
//	REGN(160, 23, HEADER_ZC_ITEM_PICKUP_ACK, PROTOID_ZC_ITEM_PICKUP_ACK, PACKET_ZC_ITEM_PICKUP_ACK);
	REGN(161, 6, HEADER_ZC_ITEM_DISAPPEAR, PROTOID_ZC_ITEM_DISAPPEAR, PACKET_ZC_ITEM_DISAPPEAR);
	REGN(162, 6, HEADER_CZ_ITEM_THROW, PROTOID_CZ_ITEM_THROW, PACKET_CZ_ITEM_THROW);
//	REGV(163, 4, HEADER_ZC_NORMAL_ITEMLIST, PROTOID_ZC_NORMAL_ITEMLIST, PACKET_ZC_NORMAL_ITEMLIST);
	REGV(164, 4, HEADER_ZC_EQUIPMENT_ITEMLIST); //TODO
	REGV(165, 4, HEADER_ZC_STORE_NORMAL_ITEMLIST); //TODO
	REGV(166, 4, HEADER_ZC_STORE_EQUIPMENT_ITEMLIST); //TODO
	REGN(167, 8, HEADER_CZ_USE_ITEM, PROTOID_CZ_USE_ITEM, PACKET_CZ_USE_ITEM);
//	REGN(168, 7, HEADER_ZC_USE_ITEM_ACK, PROTOID_ZC_USE_ITEM_ACK, PACKET_ZC_USE_ITEM_ACK);
	REGN(169, 6, HEADER_CZ_REQ_WEAR_EQUIP, PROTOID_CZ_REQ_WEAR_EQUIP, PACKET_CZ_REQ_WEAR_EQUIP);
	REGN(170, 9, HEADER_ZC_REQ_WEAR_EQUIP_ACK, PROTOID_ZC_REQ_WEAR_EQUIP_ACK, PACKET_ZC_REQ_WEAR_EQUIP_ACK__FRANCE20131015);
	REGN(171, 4, HEADER_CZ_REQ_TAKEOFF_EQUIP, PROTOID_CZ_REQ_TAKEOFF_EQUIP, PACKET_CZ_REQ_TAKEOFF_EQUIP);
	REGN(172, 7, HEADER_ZC_REQ_TAKEOFF_EQUIP_ACK, PROTOID_ZC_REQ_TAKEOFF_EQUIP_ACK, PACKET_ZC_REQ_TAKEOFF_EQUIP_ACK);
//	REGN(173, 4, HEADER_CZ_REQ_ITEM_EXPLANATION_BYNAME, PROTOID_CZ_REQ_ITEM_EXPLANATION_BYNAME, PACKET_CZ_REQ_ITEM_EXPLANATION_BYNAME); // no-len
//	REGV(174, 4, HEADER_ZC_REQ_ITEM_EXPLANATION_ACK, PROTOID_ZC_REQ_ITEM_EXPLANATION_ACK, PACKET_ZC_REQ_ITEM_EXPLANATION_ACK);
	REGN(175, 6, HEADER_ZC_ITEM_THROW_ACK, PROTOID_ZC_ITEM_THROW_ACK, PACKET_ZC_ITEM_THROW_ACK);
	REGN(176, 8, HEADER_ZC_PAR_CHANGE, PROTOID_ZC_PAR_CHANGE, PACKET_ZC_PAR_CHANGE);
	REGN(177, 8, HEADER_ZC_LONGPAR_CHANGE, PROTOID_ZC_LONGPAR_CHANGE, PACKET_ZC_LONGPAR_CHANGE);
	REGN(178, 3, HEADER_CZ_RESTART, PROTOID_CZ_RESTART, PACKET_CZ_RESTART);
	REGN(179, 3, HEADER_ZC_RESTART_ACK, PROTOID_ZC_RESTART_ACK, PACKET_ZC_RESTART_ACK);
	REGV(180, 8, HEADER_ZC_SAY_DIALOG, PROTOID_ZC_SAY_DIALOG, PACKET_ZC_SAY_DIALOG);
	REGN(181, 6, HEADER_ZC_WAIT_DIALOG, PROTOID_ZC_WAIT_DIALOG, PACKET_ZC_WAIT_DIALOG);
	REGN(182, 6, HEADER_ZC_CLOSE_DIALOG, PROTOID_ZC_CLOSE_DIALOG, PACKET_ZC_CLOSE_DIALOG);
	REGV(183, 8, HEADER_ZC_MENU_LIST, PROTOID_ZC_MENU_LIST, PACKET_ZC_MENU_LIST);
	REGN(184, 7, HEADER_CZ_CHOOSE_MENU, PROTOID_CZ_CHOOSE_MENU, PACKET_CZ_CHOOSE_MENU);
	REGN(185, 6, HEADER_CZ_REQ_NEXT_SCRIPT, PROTOID_CZ_REQ_NEXT_SCRIPT, PACKET_CZ_REQ_NEXT_SCRIPT);
	REGN(186, 2, HEADER_CZ_REQ_STATUS); //TODO
	REGN(187, 5, HEADER_CZ_STATUS_CHANGE, PROTOID_CZ_STATUS_CHANGE, PACKET_CZ_STATUS_CHANGE);
	REGN(188, 6, HEADER_ZC_STATUS_CHANGE_ACK, PROTOID_ZC_STATUS_CHANGE_ACK, PACKET_ZC_STATUS_CHANGE_ACK);
	REGN(189, 44, HEADER_ZC_STATUS, PROTOID_ZC_STATUS, PACKET_ZC_STATUS);
	REGN(190, 5, HEADER_ZC_STATUS_CHANGE, PROTOID_ZC_STATUS_CHANGE, PACKET_ZC_STATUS_CHANGE);
	REGN(191, 3, HEADER_CZ_REQ_EMOTION, PROTOID_CZ_REQ_EMOTION, PACKET_CZ_REQ_EMOTION);
	REGN(192, 7, HEADER_ZC_EMOTION, PROTOID_ZC_EMOTION, PACKET_ZC_EMOTION);
	REGN(193, 2, HEADER_CZ_REQ_USER_COUNT, PROTOID_CZ_REQ_USER_COUNT, PACKET_CZ_REQ_USER_COUNT);
	REGN(194, 6, HEADER_ZC_USER_COUNT, PROTOID_ZC_USER_COUNT, PACKET_ZC_USER_COUNT);
//	REGN(195, 8, HEADER_ZC_SPRITE_CHANGE, PROTOID_ZC_SPRITE_CHANGE, PACKET_ZC_SPRITE_CHANGE);
	REGN(196, 6, HEADER_ZC_SELECT_DEALTYPE, PROTOID_ZC_SELECT_DEALTYPE, PACKET_ZC_SELECT_DEALTYPE);
	REGN(197, 7, HEADER_CZ_ACK_SELECT_DEALTYPE, PROTOID_CZ_ACK_SELECT_DEALTYPE, PACKET_CZ_ACK_SELECT_DEALTYPE);
	REGV(198, 4, HEADER_ZC_PC_PURCHASE_ITEMLIST, PROTOID_ZC_PC_PURCHASE_ITEMLIST, PACKET_ZC_PC_PURCHASE_ITEMLIST);
	REGV(199, 4, HEADER_ZC_PC_SELL_ITEMLIST, PROTOID_ZC_PC_SELL_ITEMLIST, PACKET_ZC_PC_SELL_ITEMLIST);
	REGV(200, 4, HEADER_CZ_PC_PURCHASE_ITEMLIST, PROTOID_CZ_PC_PURCHASE_ITEMLIST, PACKET_CZ_PC_PURCHASE_ITEMLIST);
	REGV(201, 4, HEADER_CZ_PC_SELL_ITEMLIST, PROTOID_CZ_PC_SELL_ITEMLIST, PACKET_CZ_PC_SELL_ITEMLIST);
	REGN(202, 3, HEADER_ZC_PC_PURCHASE_RESULT, PROTOID_ZC_PC_PURCHASE_RESULT, PACKET_ZC_PC_PURCHASE_RESULT);
	REGN(203, 3, HEADER_ZC_PC_SELL_RESULT, PROTOID_ZC_PC_SELL_RESULT, PACKET_ZC_PC_SELL_RESULT);
	REGN(204, 6, HEADER_CZ_DISCONNECT_CHARACTER, PROTOID_CZ_DISCONNECT_CHARACTER, PACKET_CZ_DISCONNECT_CHARACTER);
	REGN(205, 3, HEADER_ZC_ACK_DISCONNECT_CHARACTER, PROTOID_ZC_ACK_DISCONNECT_CHARACTER, PACKET_ZC_ACK_DISCONNECT_CHARACTER);
	REGN(206, 2, HEADER_CZ_DISCONNECT_ALL_CHARACTER, PROTOID_CZ_DISCONNECT_ALL_CHARACTER, PACKET_CZ_DISCONNECT_ALL_CHARACTER);
	REGN(207, 27, HEADER_CZ_SETTING_WHISPER_PC, PROTOID_CZ_SETTING_WHISPER_PC, PACKET_CZ_SETTING_WHISPER_PC);
	REGN(208, 3, HEADER_CZ_SETTING_WHISPER_STATE, PROTOID_CZ_SETTING_WHISPER_STATE, PACKET_CZ_SETTING_WHISPER_STATE);
	REGN(209, 4, HEADER_ZC_SETTING_WHISPER_PC, PROTOID_ZC_SETTING_WHISPER_PC, PACKET_ZC_SETTING_WHISPER_PC);
	REGN(210, 4, HEADER_ZC_SETTING_WHISPER_STATE, PROTOID_ZC_SETTING_WHISPER_STATE, PACKET_ZC_SETTING_WHISPER_STATE);
	REGN(211, 2, HEADER_CZ_REQ_WHISPER_LIST, PROTOID_CZ_REQ_WHISPER_LIST, PACKET_CZ_REQ_WHISPER_LIST);
	REGV(212, 4, HEADER_ZC_WHISPER_LIST, PROTOID_ZC_WHISPER_LIST, PACKET_ZC_WHISPER_LIST);
	REGV(213, 15, HEADER_CZ_CREATE_CHATROOM, PROTOID_CZ_CREATE_CHATROOM, PACKET_CZ_CREATE_CHATROOM);
	REGN(214, 3, HEADER_ZC_ACK_CREATE_CHATROOM, PROTOID_ZC_ACK_CREATE_CHATROOM, PACKET_ZC_ACK_CREATE_CHATROOM);
	REGV(215, 17, HEADER_ZC_ROOM_NEWENTRY, PROTOID_ZC_ROOM_NEWENTRY, PACKET_ZC_ROOM_NEWENTRY);
	REGN(216, 6, HEADER_ZC_DESTROY_ROOM, PROTOID_ZC_DESTROY_ROOM, PACKET_ZC_DESTROY_ROOM);
	REGN(217, 14, HEADER_CZ_REQ_ENTER_ROOM, PROTOID_CZ_REQ_ENTER_ROOM, PACKET_CZ_REQ_ENTER_ROOM);
	REGN(218, 3, HEADER_ZC_REFUSE_ENTER_ROOM, PROTOID_ZC_REFUSE_ENTER_ROOM, PACKET_ZC_REFUSE_ENTER_ROOM);
	REGV(219, 8, HEADER_ZC_ENTER_ROOM, PROTOID_ZC_ENTER_ROOM, PACKET_ZC_ENTER_ROOM);
	REGN(220, 28, HEADER_ZC_MEMBER_NEWENTRY, PROTOID_ZC_MEMBER_NEWENTRY, PACKET_ZC_MEMBER_NEWENTRY);
	REGN(221, 29, HEADER_ZC_MEMBER_EXIT, PROTOID_ZC_MEMBER_EXIT, PACKET_ZC_MEMBER_EXIT);
	REGV(222, 15, HEADER_CZ_CHANGE_CHATROOM, PROTOID_CZ_CHANGE_CHATROOM, PACKET_CZ_CHANGE_CHATROOM);
	REGV(223, 17, HEADER_ZC_CHANGE_CHATROOM, PROTOID_ZC_CHANGE_CHATROOM, PACKET_ZC_CHANGE_CHATROOM);
	REGN(224, 30, HEADER_CZ_REQ_ROLE_CHANGE, PROTOID_CZ_REQ_ROLE_CHANGE, PACKET_CZ_REQ_ROLE_CHANGE);
	REGN(225, 30, HEADER_ZC_ROLE_CHANGE, PROTOID_ZC_ROLE_CHANGE, PACKET_ZC_ROLE_CHANGE);
	REGN(226, 26, HEADER_CZ_REQ_EXPEL_MEMBER, PROTOID_CZ_REQ_EXPEL_MEMBER, PACKET_CZ_REQ_EXPEL_MEMBER);
	REGN(227, 2, HEADER_CZ_EXIT_ROOM, PROTOID_CZ_EXIT_ROOM, PACKET_CZ_EXIT_ROOM);
	REGN(228, 6, HEADER_CZ_REQ_EXCHANGE_ITEM, PROTOID_CZ_REQ_EXCHANGE_ITEM, PACKET_CZ_REQ_EXCHANGE_ITEM);
//	REGN(229, 26, HEADER_ZC_REQ_EXCHANGE_ITEM, PROTOID_ZC_REQ_EXCHANGE_ITEM, PACKET_ZC_REQ_EXCHANGE_ITEM);
	REGN(230, 3, HEADER_CZ_ACK_EXCHANGE_ITEM, PROTOID_CZ_ACK_EXCHANGE_ITEM, PACKET_CZ_ACK_EXCHANGE_ITEM);
//	REGN(231, 3, HEADER_ZC_ACK_EXCHANGE_ITEM, PROTOID_ZC_ACK_EXCHANGE_ITEM, PACKET_ZC_ACK_EXCHANGE_ITEM);
	REGN(232, 8, HEADER_CZ_ADD_EXCHANGE_ITEM, PROTOID_CZ_ADD_EXCHANGE_ITEM, PACKET_CZ_ADD_EXCHANGE_ITEM);
//	REGN(233, 19, HEADER_ZC_ADD_EXCHANGE_ITEM, PROTOID_ZC_ADD_EXCHANGE_ITEM, PACKET_ZC_ADD_EXCHANGE_ITEM);
	REGN(234, 5, HEADER_ZC_ACK_ADD_EXCHANGE_ITEM, PROTOID_ZC_ACK_ADD_EXCHANGE_ITEM, PACKET_ZC_ACK_ADD_EXCHANGE_ITEM);
	REGN(235, 2, HEADER_CZ_CONCLUDE_EXCHANGE_ITEM, PROTOID_CZ_CONCLUDE_EXCHANGE_ITEM, PACKET_CZ_CONCLUDE_EXCHANGE_ITEM);
	REGN(236, 3, HEADER_ZC_CONCLUDE_EXCHANGE_ITEM, PROTOID_ZC_CONCLUDE_EXCHANGE_ITEM, PACKET_ZC_CONCLUDE_EXCHANGE_ITEM);
	REGN(237, 2, HEADER_CZ_CANCEL_EXCHANGE_ITEM, PROTOID_CZ_CANCEL_EXCHANGE_ITEM, PACKET_CZ_CANCEL_EXCHANGE_ITEM);
	REGN(238, 2, HEADER_ZC_CANCEL_EXCHANGE_ITEM, PROTOID_ZC_CANCEL_EXCHANGE_ITEM, PACKET_ZC_CANCEL_EXCHANGE_ITEM);
	REGN(239, 2, HEADER_CZ_EXEC_EXCHANGE_ITEM, PROTOID_CZ_EXEC_EXCHANGE_ITEM, PACKET_CZ_EXEC_EXCHANGE_ITEM);
	REGN(240, 3, HEADER_ZC_EXEC_EXCHANGE_ITEM, PROTOID_ZC_EXEC_EXCHANGE_ITEM, PACKET_ZC_EXEC_EXCHANGE_ITEM);
	REGN(241, 2, HEADER_ZC_EXCHANGEITEM_UNDO, PROTOID_ZC_EXCHANGEITEM_UNDO, PACKET_ZC_EXCHANGEITEM_UNDO);
	REGN(242, 6, HEADER_ZC_NOTIFY_STOREITEM_COUNTINFO, PROTOID_ZC_NOTIFY_STOREITEM_COUNTINFO, PACKET_ZC_NOTIFY_STOREITEM_COUNTINFO);
	REGN(243, 8, HEADER_CZ_MOVE_ITEM_FROM_BODY_TO_STORE, PROTOID_CZ_MOVE_ITEM_FROM_BODY_TO_STORE, PACKET_CZ_MOVE_ITEM_FROM_BODY_TO_STORE);
	REGN(244, 21, HEADER_ZC_ADD_ITEM_TO_STORE); //TODO
	REGN(245, 8, HEADER_CZ_MOVE_ITEM_FROM_STORE_TO_BODY, PROTOID_CZ_MOVE_ITEM_FROM_STORE_TO_BODY, PACKET_CZ_MOVE_ITEM_FROM_STORE_TO_BODY);
	REGN(246, 8, HEADER_ZC_DELETE_ITEM_FROM_STORE, PROTOID_ZC_DELETE_ITEM_FROM_STORE, PACKET_ZC_DELETE_ITEM_FROM_STORE);
	REGN(247, 2, HEADER_CZ_CLOSE_STORE, PROTOID_CZ_CLOSE_STORE, PACKET_CZ_CLOSE_STORE);
	REGN(248, 2, HEADER_ZC_CLOSE_STORE, PROTOID_ZC_CLOSE_STORE, PACKET_ZC_CLOSE_STORE);
	REGN(249, 26, HEADER_CZ_MAKE_GROUP, PROTOID_CZ_MAKE_GROUP, PACKET_CZ_MAKE_GROUP);
	REGN(250, 3, HEADER_ZC_ACK_MAKE_GROUP, PROTOID_ZC_ACK_MAKE_GROUP, PACKET_ZC_ACK_MAKE_GROUP);
	REGV(251, 28, HEADER_ZC_GROUP_LIST, PROTOID_ZC_GROUP_LIST, PACKET_ZC_GROUP_LIST);
	REGN(252, 6, HEADER_CZ_REQ_JOIN_GROUP, PROTOID_CZ_REQ_JOIN_GROUP, PACKET_CZ_REQ_JOIN_GROUP);
//	REGN(253, 27, HEADER_ZC_ACK_REQ_JOIN_GROUP, PROTOID_ZC_ACK_REQ_JOIN_GROUP, PACKET_ZC_ACK_REQ_JOIN_GROUP);
//	REGN(254, 30, HEADER_ZC_REQ_JOIN_GROUP, PROTOID_ZC_REQ_JOIN_GROUP, PACKET_ZC_REQ_JOIN_GROUP);
	REGN(255, 10, HEADER_CZ_JOIN_GROUP, PROTOID_CZ_JOIN_GROUP, PACKET_CZ_JOIN_GROUP);
	REGN(256, 2, HEADER_CZ_REQ_LEAVE_GROUP, PROTOID_CZ_REQ_LEAVE_GROUP, PACKET_CZ_REQ_LEAVE_GROUP);
	REGN(257, 6, HEADER_ZC_GROUPINFO_CHANGE, PROTOID_ZC_GROUPINFO_CHANGE, PACKET_ZC_GROUPINFO_CHANGE);
	REGN(258, 6, HEADER_CZ_CHANGE_GROUPEXPOPTION); //TODO
	REGN(259, 30, HEADER_CZ_REQ_EXPEL_GROUP_MEMBER, PROTOID_CZ_REQ_EXPEL_GROUP_MEMBER, PACKET_CZ_REQ_EXPEL_GROUP_MEMBER);
//	REGN(260, 79, HEADER_ZC_ADD_MEMBER_TO_GROUP, PROTOID_ZC_ADD_MEMBER_TO_GROUP, PACKET_ZC_ADD_MEMBER_TO_GROUP);
	REGN(261, 31, HEADER_ZC_DELETE_MEMBER_FROM_GROUP, PROTOID_ZC_DELETE_MEMBER_FROM_GROUP, PACKET_ZC_DELETE_MEMBER_FROM_GROUP);
//	REGN(262, 10, HEADER_ZC_NOTIFY_HP_TO_GROUPM, PROTOID_ZC_NOTIFY_HP_TO_GROUPM, PACKET_ZC_NOTIFY_HP_TO_GROUPM);
	REGN(263, 10, HEADER_ZC_NOTIFY_POSITION_TO_GROUPM, PROTOID_ZC_NOTIFY_POSITION_TO_GROUPM, PACKET_ZC_NOTIFY_POSITION_TO_GROUPM);
	REGV(264, 4, HEADER_CZ_REQUEST_CHAT_PARTY, PROTOID_CZ_REQUEST_CHAT_PARTY, PACKET_CZ_REQUEST_CHAT_PARTY);
	REGV(265, 8, HEADER_ZC_NOTIFY_CHAT_PARTY, PROTOID_ZC_NOTIFY_CHAT_PARTY, PACKET_ZC_NOTIFY_CHAT_PARTY);
	REGN(266, 4, HEADER_ZC_MVP_GETTING_ITEM); //TODO
	REGN(267, 6, HEADER_ZC_MVP_GETTING_SPECIAL_EXP); //TODO
	REGN(268, 6, HEADER_ZC_MVP); //TODO
	REGN(269, 2, HEADER_ZC_THROW_MVPITEM); //TODO
	REGN(270, 11, HEADER_ZC_SKILLINFO_UPDATE, PROTOID_ZC_SKILLINFO_UPDATE, PACKET_ZC_SKILLINFO_UPDATE);
	REGV(271, 4, HEADER_ZC_SKILLINFO_LIST, PROTOID_ZC_SKILLINFO_LIST, PACKET_ZC_SKILLINFO_LIST);
	REGN(272, 10, HEADER_ZC_ACK_TOUSESKILL, PROTOID_ZC_ACK_TOUSESKILL, PACKET_ZC_ACK_TOUSESKILL);
	REGN(273, 39, HEADER_ZC_ADD_SKILL, PROTOID_ZC_ADD_SKILL, PACKET_ZC_ADD_SKILL);
	REGN(274, 4, HEADER_CZ_UPGRADE_SKILLLEVEL, PROTOID_CZ_UPGRADE_SKILLLEVEL, PACKET_CZ_UPGRADE_SKILLLEVEL);
	REGN(275, 10, HEADER_CZ_USE_SKILL, PROTOID_CZ_USE_SKILL, PACKET_CZ_USE_SKILL);
//	REGN(276, 31, HEADER_ZC_NOTIFY_SKILL, PROTOID_ZC_NOTIFY_SKILL, PACKET_ZC_NOTIFY_SKILL);
	REGN(277, 35, HEADER_ZC_NOTIFY_SKILL_POSITION); //TODO
	REGN(278, 10, HEADER_CZ_USE_SKILL_TOGROUND, PROTOID_CZ_USE_SKILL_TOGROUND, PACKET_CZ_USE_SKILL_TOGROUND);
	REGN(279, 18, HEADER_ZC_NOTIFY_GROUNDSKILL, PROTOID_ZC_NOTIFY_GROUNDSKILL, PACKET_ZC_NOTIFY_GROUNDSKILL);
	REGN(280, 2, HEADER_CZ_CANCEL_LOCKON, PROTOID_CZ_CANCEL_LOCKON, PACKET_CZ_CANCEL_LOCKON);
	REGN(281, 13, HEADER_ZC_STATE_CHANGE); //TODO
	REGN(282, 15, HEADER_ZC_USE_SKILL, PROTOID_ZC_USE_SKILL, PACKET_ZC_USE_SKILL);
	REGN(283, 20, HEADER_CZ_SELECT_WARPPOINT); //TODO
	REGN(284, 68, HEADER_ZC_WARPLIST); //TODO
	REGN(285, 2, HEADER_CZ_REMEMBER_WARPPOINT); //TODO
	REGN(286, 3, HEADER_ZC_ACK_REMEMBER_WARPPOINT); //TODO
//	REGN(287, 16, HEADER_ZC_SKILL_ENTRY, PROTOID_ZC_SKILL_ENTRY, PACKET_ZC_SKILL_ENTRY);
	REGN(288, 6, HEADER_ZC_SKILL_DISAPPEAR, PROTOID_ZC_SKILL_DISAPPEAR, PACKET_ZC_SKILL_DISAPPEAR);
	REGN(289, 14, HEADER_ZC_NOTIFY_CARTITEM_COUNTINFO, PROTOID_ZC_NOTIFY_CARTITEM_COUNTINFO, PACKET_ZC_NOTIFY_CARTITEM_COUNTINFO);
	REGV(290, 4, HEADER_ZC_CART_EQUIPMENT_ITEMLIST); //TODO
	REGV(291, 4, HEADER_ZC_CART_NORMAL_ITEMLIST, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_NORMAL_ITEMLIST);
	REGN(292, 21, HEADER_ZC_ADD_ITEM_TO_CART); //TODO
	REGN(293, 8, HEADER_ZC_DELETE_ITEM_FROM_CART); //TODO
	REGN(294, 8, HEADER_CZ_MOVE_ITEM_FROM_BODY_TO_CART); //TODO
	REGN(295, 8, HEADER_CZ_MOVE_ITEM_FROM_CART_TO_BODY); //TODO
	REGN(296, 8, HEADER_CZ_MOVE_ITEM_FROM_STORE_TO_CART); //TODO
	REGN(297, 8, HEADER_CZ_MOVE_ITEM_FROM_CART_TO_STORE); //TODO
	REGN(298, 2, HEADER_CZ_REQ_CARTOFF, PROTOID_CZ_REQ_CARTOFF, PACKET_CZ_REQ_CARTOFF);
	REGN(299, 2, HEADER_ZC_CARTOFF, PROTOID_ZC_CARTOFF, PACKET_ZC_CARTOFF);
	REGN(300, 3, HEADER_ZC_ACK_ADDITEM_TO_CART); //TODO
	REGN(301, 4, HEADER_ZC_OPENSTORE); //TODO
	REGN(302, 2, HEADER_CZ_REQ_CLOSESTORE); //TODO
	REGV(303, 84, HEADER_CZ_REQ_OPENSTORE); //TODO
	REGN(304, 6, HEADER_CZ_REQ_BUY_FROMMC); //TODO
	REGN(305, 86, HEADER_ZC_STORE_ENTRY); //TODO
	REGN(306, 6, HEADER_ZC_DISAPPEAR_ENTRY); //TODO
	REGV(307, 8, HEADER_ZC_PC_PURCHASE_ITEMLIST_FROMMC); //TODO
	REGV(308, 8, HEADER_CZ_PC_PURCHASE_ITEMLIST_FROMMC); //TODO
	REGN(309, 7, HEADER_ZC_PC_PURCHASE_RESULT_FROMMC); //TODO
	REGV(310, 8, HEADER_ZC_PC_PURCHASE_MYITEMLIST); //TODO
	REGN(311, 6, HEADER_ZC_DELETEITEM_FROM_MCSTORE); //TODO
	REGN(312, 3, HEADER_CZ_PKMODE_CHANGE); //TODO
	REGN(313, 16, HEADER_ZC_ATTACK_FAILURE_FOR_DISTANCE, PROTOID_ZC_ATTACK_FAILURE_FOR_DISTANCE, PACKET_ZC_ATTACK_FAILURE_FOR_DISTANCE);
	REGN(314, 4, HEADER_ZC_ATTACK_RANGE, PROTOID_ZC_ATTACK_RANGE, PACKET_ZC_ATTACK_RANGE);
	REGN(315, 4, HEADER_ZC_ACTION_FAILURE); //TODO
	REGN(316, 4, HEADER_ZC_EQUIP_ARROW); //TODO
	REGN(317, 6, HEADER_ZC_RECOVERY); //TODO
	REGN(318, 24, HEADER_ZC_USESKILL_ACK); //TODO
	REGN(319, 26, HEADER_CZ_ITEM_CREATE, PROTOID_CZ_ITEM_CREATE, PACKET_CZ_ITEM_CREATE);
	REGN(320, 22, HEADER_CZ_MOVETO_MAP, PROTOID_CZ_MOVETO_MAP, PACKET_CZ_MOVETO_MAP);
	REGN(321, 14, HEADER_ZC_COUPLESTATUS, PROTOID_ZC_COUPLESTATUS, PACKET_ZC_COUPLESTATUS);
	REGN(322, 6, HEADER_ZC_OPEN_EDITDLG); //TODO
	REGN(323, 10, HEADER_CZ_INPUT_EDITDLG); //TODO
	REGN(324, 23, HEADER_ZC_COMPASS, PROTOID_ZC_COMPASS, PACKET_ZC_COMPASS);
//	REGN(325, 19, HEADER_ZC_SHOW_IMAGE, PROTOID_ZC_SHOW_IMAGE, PACKET_ZC_SHOW_IMAGE);
	REGN(326, 6, HEADER_CZ_CLOSE_DIALOG, PROTOID_CZ_CLOSE_DIALOG, PACKET_CZ_CLOSE_DIALOG);
	REGN(327, 39, HEADER_ZC_AUTORUN_SKILL, PROTOID_ZC_AUTORUN_SKILL, PACKET_ZC_AUTORUN_SKILL);
	REGN(328, 8, HEADER_ZC_RESURRECTION); //TODO
	REGN(329, 9, HEADER_CZ_REQ_GIVE_MANNER_POINT); //TODO
	REGN(330, 6, HEADER_ZC_ACK_GIVE_MANNER_POINT); //TODO
	REGN(331, 27, HEADER_ZC_NOTIFY_MANNER_POINT_GIVEN); //TODO
	REGV(332, 4, HEADER_ZC_MYGUILD_BASIC_INFO); //TODO
	REGN(333, 2, HEADER_CZ_REQ_GUILD_MENUINTERFACE, PROTOID_CZ_REQ_GUILD_MENUINTERFACE, PACKET_CZ_REQ_GUILD_MENUINTERFACE);
	REGN(334, 6, HEADER_ZC_ACK_GUILD_MENUINTERFACE, PROTOID_ZC_ACK_GUILD_MENUINTERFACE, PACKET_ZC_ACK_GUILD_MENUINTERFACE);
	REGN(335, 6, HEADER_CZ_REQ_GUILD_MENU, PROTOID_CZ_REQ_GUILD_MENU, PACKET_CZ_REQ_GUILD_MENU);
	REGN(336, 110, HEADER_ZC_GUILD_INFO); //TODO
	REGN(337, 6, HEADER_CZ_REQ_GUILD_EMBLEM_IMG, PROTOID_CZ_REQ_GUILD_EMBLEM_IMG, PACKET_CZ_REQ_GUILD_EMBLEM_IMG);
	REGV(338, 12, HEADER_ZC_GUILD_EMBLEM_IMG, PROTOID_ZC_GUILD_EMBLEM_IMG, PACKET_ZC_GUILD_EMBLEM_IMG);
	REGV(339, 4, HEADER_CZ_REGISTER_GUILD_EMBLEM_IMG); //TODO
	REGV(340, 4, HEADER_ZC_MEMBERMGR_INFO, PROTOID_ZC_MEMBERMGR_INFO, PACKET_ZC_MEMBERMGR_INFO);
	REGV(341, 4, HEADER_CZ_REQ_CHANGE_MEMBERPOS); //TODO
	REGV(342, 4, HEADER_ZC_ACK_REQ_CHANGE_MEMBERS); //TODO
	REGN(343, 6, HEADER_CZ_REQ_OPEN_MEMBER_INFO); //TODO
//	REG?(344, ?, XXXXX_HEADER_ZC_ACK_OPEN_MEMBER_INFO); // no-len //TODO
	REGN(345, 54, HEADER_CZ_REQ_LEAVE_GUILD); //TODO
	REGN(346, 66, HEADER_ZC_ACK_LEAVE_GUILD); //TODO
	REGN(347, 54, HEADER_CZ_REQ_BAN_GUILD); //TODO
	REGN(348, 90, HEADER_ZC_ACK_BAN_GUILD); //TODO
	REGN(349, 42, HEADER_CZ_REQ_DISORGANIZE_GUILD); //TODO
	REGN(350, 6, HEADER_ZC_ACK_DISORGANIZE_GUILD_RESULT); //TODO
	REGN(351, 42, HEADER_ZC_ACK_DISORGANIZE_GUILD); //TODO
	REGV(352, 4, HEADER_ZC_POSITION_INFO, PROTOID_ZC_POSITION_INFO, PACKET_ZC_POSITION_INFO);
	REGV(353, 4, HEADER_CZ_REG_CHANGE_GUILD_POSITIONINFO); //TODO
	REGV(354, 6, HEADER_ZC_GUILD_SKILLINFO, PROTOID_ZC_GUILD_SKILLINFO, PACKET_ZC_GUILD_SKILLINFO);
	REGV(355, 4, HEADER_ZC_BAN_LIST); //TODO
	REGV(356, 4, HEADER_ZC_OTHER_GUILD_LIST); //TODO
	REGN(357, 30, HEADER_CZ_REQ_MAKE_GUILD); //TODO
	REGV(358, 4, HEADER_ZC_POSITION_ID_NAME_INFO, PROTOID_ZC_POSITION_ID_NAME_INFO, PACKET_ZC_POSITION_ID_NAME_INFO);
	REGN(359, 3, HEADER_ZC_RESULT_MAKE_GUILD); //TODO
	REGN(360, 14, HEADER_CZ_REQ_JOIN_GUILD, PROTOID_CZ_REQ_JOIN_GUILD, PACKET_CZ_REQ_JOIN_GUILD);
	REGN(361, 3, HEADER_ZC_ACK_REQ_JOIN_GUILD); //TODO
	REGN(362, 30, HEADER_ZC_REQ_JOIN_GUILD, PROTOID_ZC_REQ_JOIN_GUILD, PACKET_ZC_REQ_JOIN_GUILD);
	REGN(363, 10, HEADER_CZ_JOIN_GUILD, PROTOID_CZ_JOIN_GUILD, PACKET_CZ_JOIN_GUILD);
	REGN(364, 43, HEADER_ZC_UPDATE_GDID, PROTOID_ZC_UPDATE_GDID, PACKET_ZC_UPDATE_GDID);
	REGN(365, 14, HEADER_ZC_UPDATE_CHARSTAT); //TODO
	REGN(366, 186, HEADER_CZ_GUILD_NOTICE); //TODO
	REGN(367, 182, HEADER_ZC_GUILD_NOTICE, PROTOID_ZC_GUILD_NOTICE, PACKET_ZC_GUILD_NOTICE);
	REGN(368, 14, HEADER_CZ_REQ_ALLY_GUILD); //TODO
	REGN(369, 30, HEADER_ZC_REQ_ALLY_GUILD); //TODO
	REGN(370, 10, HEADER_CZ_ALLY_GUILD); //TODO
	REGN(371, 3, HEADER_ZC_ACK_REQ_ALLY_GUILD); //TODO
	REGV(372, 4, HEADER_ZC_ACK_CHANGE_GUILD_POSITIONINFO); //TODO
	REGN(373, 6, HEADER_CZ_REQ_GUILD_MEMBER_INFO); //TODO
	REGN(374, 106, HEADER_ZC_ACK_GUILD_MEMBER_INFO); //TODO
	REGV(375, 4, HEADER_ZC_ITEMIDENTIFY_LIST, PROTOID_ZC_ITEMIDENTIFY_LIST, PACKET_ZC_ITEMIDENTIFY_LIST);
	REGN(376, 4, HEADER_CZ_REQ_ITEMIDENTIFY, PROTOID_CZ_REQ_ITEMIDENTIFY, PACKET_CZ_REQ_ITEMIDENTIFY);
	REGN(377, 5, HEADER_ZC_ACK_ITEMIDENTIFY, PROTOID_ZC_ACK_ITEMIDENTIFY, PACKET_ZC_ACK_ITEMIDENTIFY);
	REGN(378, 4, HEADER_CZ_REQ_ITEMCOMPOSITION_LIST); //TODO
	REGV(379, 4, HEADER_ZC_ITEMCOMPOSITION_LIST); //TODO
	REGN(380, 6, HEADER_CZ_REQ_ITEMCOMPOSITION); //TODO
	REGN(381, 7, HEADER_ZC_ACK_ITEMCOMPOSITION); //TODO
	REGV(382, 4, HEADER_CZ_GUILD_CHAT, PROTOID_CZ_GUILD_CHAT, PACKET_CZ_GUILD_CHAT);
	REGV(383, 4, HEADER_ZC_GUILD_CHAT, PROTOID_ZC_GUILD_CHAT, PACKET_ZC_GUILD_CHAT);
	REGN(384, 6, HEADER_CZ_REQ_HOSTILE_GUILD); //TODO
	REGN(385, 3, HEADER_ZC_ACK_REQ_HOSTILE_GUILD); //TODO
	REGN(386, 106, HEADER_ZC_MEMBER_ADD, PROTOID_ZC_MEMBER_ADD, PACKET_ZC_MEMBER_ADD);
	REGN(387, 10, HEADER_CZ_REQ_DELETE_RELATED_GUILD); //TODO
	REGN(388, 10, HEADER_ZC_DELETE_RELATED_GUILD); //TODO
	REGN(389, 34, HEADER_ZC_ADD_RELATED_GUILD); //TODO
//	REG?(390, ?, HEADER_COLLECTORDEAD); // no-len //TODO
	REGN(391, 6, HEADER_SC_PING, PROTOID_SC_PING, PACKET_SC_PING);
	REGN(392, 8, HEADER_ZC_ACK_ITEMREFINING); //TODO
	REGN(393, 4, HEADER_ZC_NOTIFY_MAPINFO); //TODO
	REGN(394, 4, HEADER_CZ_REQ_DISCONNECT, PROTOID_CZ_REQ_DISCONNECT, PACKET_CZ_REQ_DISCONNECT);
	REGN(395, 4, HEADER_ZC_ACK_REQ_DISCONNECT, PROTOID_ZC_ACK_REQ_DISCONNECT, PACKET_ZC_ACK_REQ_DISCONNECT);
	REGN(396, 29, HEADER_ZC_MONSTER_INFO); //TODO
	REGV(397, 4, HEADER_ZC_MAKABLEITEMLIST); //TODO
	REGN(398, 10, HEADER_CZ_REQMAKINGITEM); //TODO
	REGN(399, 6, HEADER_ZC_ACK_REQMAKINGITEM); //TODO
	REGN(400, 90, HEADER_CZ_USE_SKILL_TOGROUND_WITHTALKBOX, PROTOID_CZ_USE_SKILL_TOGROUND_WITHTALKBOX, PACKET_CZ_USE_SKILL_TOGROUND_WITHTALKBOX);
	REGN(401, 86, HEADER_ZC_TALKBOX_CHATCONTENTS); //TODO
	REGN(402, 24, HEADER_ZC_UPDATE_MAPINFO); //TODO
	REGN(403, 6, HEADER_CZ_REQNAME_BYGID, PROTOID_CZ_REQNAME_BYGID, PACKET_CZ_REQNAME_BYGID);
	REGN(404, 30, HEADER_ZC_ACK_REQNAME_BYGID, PROTOID_ZC_ACK_REQNAME_BYGID, PACKET_ZC_ACK_REQNAME_BYGID);
	REGN(405, 102, HEADER_ZC_ACK_REQNAMEALL, PROTOID_ZC_ACK_REQNAMEALL, PACKET_ZC_ACK_REQNAMEALL);
	REGN(406, 9, HEADER_ZC_MSG_STATE_CHANGE, PROTOID_ZC_MSG_STATE_CHANGE, PACKET_ZC_MSG_STATE_CHANGE);
	REGN(407, 4, HEADER_CZ_RESET, PROTOID_CZ_RESET, PACKET_CZ_RESET);
	REGN(408, 8, HEADER_CZ_CHANGE_MAPTYPE); //TODO
	REGN(409, 4, HEADER_ZC_NOTIFY_MAPPROPERTY); //TODO
	REGN(410, 14, HEADER_ZC_NOTIFY_RANKING); //TODO
	REGN(411, 10, HEADER_ZC_NOTIFY_EFFECT, PROTOID_ZC_NOTIFY_EFFECT, PACKET_ZC_NOTIFY_EFFECT);
	REGV(412, 4, HEADER_CZ_LOCALBROADCAST, PROTOID_CZ_LOCALBROADCAST, PACKET_CZ_LOCALBROADCAST);
	REGN(413, 6, HEADER_CZ_CHANGE_EFFECTSTATE, PROTOID_CZ_CHANGE_EFFECTSTATE, PACKET_CZ_CHANGE_EFFECTSTATE);
	REGN(414, 2, HEADER_ZC_START_CAPTURE); //TODO
	REGN(415, 6, HEADER_CZ_TRYCAPTURE_MONSTER); //TODO
	REGN(416, 3, HEADER_ZC_TRYCAPTURE_MONSTER); //TODO
	REGN(417, 3, HEADER_CZ_COMMAND_PET); //TODO
	REGN(418, 37, HEADER_ZC_PROPERTY_PET); //TODO
	REGN(419, 5, HEADER_ZC_FEED_PET); //TODO
	REGN(420, 11, HEADER_ZC_CHANGESTATE_PET); //TODO
	REGN(421, 26, HEADER_CZ_RENAME_PET); //TODO
	REGV(422, 4, HEADER_ZC_PETEGG_LIST); //TODO
	REGN(423, 4, HEADER_CZ_SELECT_PETEGG); //TODO
	REGN(424, 4, HEADER_CZ_PETEGG_INFO); //TODO
	REGN(425, 6, HEADER_CZ_PET_ACT); //TODO
	REGN(426, 10, HEADER_ZC_PET_ACT); //TODO
	REGN(427, 12, HEADER_ZC_PAR_CHANGE_USER); //TODO
	REGN(428, 6, HEADER_ZC_SKILL_UPDATE); //TODO
	REGV(429, 4, HEADER_ZC_MAKINGARROW_LIST); //TODO
	REGN(430, 4, HEADER_CZ_REQ_MAKINGARROW); //TODO
	REGN(431, 4, HEADER_CZ_REQ_CHANGECART); //TODO
	REGN(432, 11, HEADER_ZC_NPCSPRITE_CHANGE); //TODO
	REGN(433, 7, HEADER_ZC_SHOWDIGIT); //TODO
	REGV(434, 85, HEADER_CZ_REQ_OPENSTORE2); //TODO
	REGN(435, 67, HEADER_ZC_SHOW_IMAGE2, PROTOID_ZC_SHOW_IMAGE, PACKET_ZC_SHOW_IMAGE2);
	REGN(436, 12, HEADER_ZC_CHANGE_GUILD); //TODO
	REGN(437, 18, HEADER_SC_BILLING_INFO); //TODO
	REGN(438, 114, HEADER_ZC_GUILD_INFO2, PROTOID_ZC_GUILD_INFO, PACKET_ZC_GUILD_INFO2);
	REGN(439, 6, HEADER_CZ_GUILD_ZENY); //TODO
	REGN(440, 3, HEADER_ZC_GUILD_ZENY_ACK); //TODO
	REGN(441, 6, HEADER_ZC_DISPEL); //TODO
	REGN(442, 26, HEADER_CZ_REMOVE_AID, PROTOID_CZ_REMOVE_AID, PACKET_CZ_REMOVE_AID);
	REGN(443, 26, HEADER_CZ_SHIFT, PROTOID_CZ_SHIFT, PACKET_CZ_SHIFT);
	REGN(444, 26, HEADER_CZ_RECALL, PROTOID_CZ_RECALL, PACKET_CZ_RECALL);
	REGN(445, 26, HEADER_CZ_RECALL_GID, PROTOID_CZ_RECALL_GID, PACKET_CZ_RECALL_GID);
//	REGN(446, 2, HEADER_AC_ASK_PNGAMEROOM, PROTOID_AC_ASK_PNGAMEROOM, PACKET_AC_ASK_PNGAMEROOM);
//	REGN(447, 3, HEADER_CA_REPLY_PNGAMEROOM, PROTOID_CA_REPLY_PNGAMEROOM, PACKET_CA_REPLY_PNGAMEROOM);
	REGN(448, 2, HEADER_CZ_REQ_REMAINTIME); //TODO
	REGN(449, 14, HEADER_ZC_REPLY_REMAINTIME); //TODO
	REGN(450, 10, HEADER_ZC_INFO_REMAINTIME); //TODO
	REGV(451, 16, HEADER_ZC_BROADCAST2); //TODO
	REGN(452, 22, HEADER_ZC_ADD_ITEM_TO_STORE2, PROTOID_ZC_ADD_ITEM_TO_STORE, PACKET_ZC_ADD_ITEM_TO_STORE2);
	REGN(453, 22, HEADER_ZC_ADD_ITEM_TO_CART2); //TODO
	REGN(454, 4, HEADER_CS_REQ_ENCRYPTION); //TODO
	REGN(455, 2, HEADER_SC_ACK_ENCRYPTION); //TODO
	REGN(456, 13, HEADER_ZC_USE_ITEM_ACK2, PROTOID_ZC_USE_ITEM_ACK, PACKET_ZC_USE_ITEM_ACK2);
//	REGN(457, 97, HEADER_ZC_SKILL_ENTRY2, PROTOID_ZC_SKILL_ENTRY, PACKET_ZC_SKILL_ENTRY2);
	REGN(458, 3, HEADER_CZ_REQMAKINGHOMUN); //TODO
	REGN(459, 9, HEADER_CZ_MONSTER_TALK); //TODO
	REGN(460, 9, HEADER_ZC_MONSTER_TALK); //TODO
	REGN(461, 30, HEADER_ZC_AUTOSPELLLIST); //TODO
	REGN(462, 6, HEADER_CZ_SELECTAUTOSPELL); //TODO
	REGN(463, 28, HEADER_ZC_DEVOTIONLIST); //TODO
	REGN(464, 8, HEADER_ZC_SPIRITS); //TODO
	REGN(465, 14, HEADER_ZC_BLADESTOP); //TODO
	REGN(466, 10, HEADER_ZC_COMBODELAY); //TODO
	REGN(467, 35, HEADER_ZC_SOUND); //TODO
	REGN(468, 6, HEADER_ZC_OPEN_EDITDLGSTR); //TODO
	REGV(469, 8, HEADER_CZ_INPUT_EDITDLGSTR); //TODO
	REGN(470, 4, HEADER_ZC_NOTIFY_MAPPROPERTY2, PROTOID_ZC_NOTIFY_MAPPROPERTY2, PACKET_ZC_NOTIFY_MAPPROPERTY2);
	REGN(471, 11, HEADER_ZC_SPRITE_CHANGE2, PROTOID_ZC_SPRITE_CHANGE, PACKET_ZC_SPRITE_CHANGE2);
	REGN(472, 54, HEADER_ZC_NOTIFY_STANDENTRY2); //TODO
	REGN(473, 53, HEADER_ZC_NOTIFY_NEWENTRY2); //TODO
	REGN(474, 60, HEADER_ZC_NOTIFY_MOVEENTRY2); //TODO
	REGN(475, 2, HEADER_CA_REQ_HASH); //TODO
	REGV(476, 4, HEADER_AC_ACK_HASH); //TODO
	REGN(477, 47, HEADER_CA_LOGIN2); //TODO
	REGN(478, 33, HEADER_ZC_NOTIFY_SKILL2, PROTOID_ZC_NOTIFY_SKILL, PACKET_ZC_NOTIFY_SKILL2);
	REGN(479, 6, HEADER_CZ_REQ_ACCOUNTNAME); //TODO
	REGN(480, 30, HEADER_ZC_ACK_ACCOUNTNAME); //TODO
	REGN(481, 8, HEADER_ZC_SPIRITS2); //TODO
	REGN(482, 34, HEADER_ZC_REQ_COUPLE); //TODO
	REGN(483, 14, HEADER_CZ_JOIN_COUPLE); //TODO
	REGN(484, 2, HEADER_ZC_START_COUPLE); //TODO
	REGN(485, 6, HEADER_CZ_REQ_JOIN_COUPLE); //TODO
	REGN(486, 26, HEADER_ZC_COUPLENAME); //TODO
	REGN(487, 2, HEADER_CZ_DORIDORI); //TODO
	REGN(488, 28, HEADER_CZ_MAKE_GROUP2, PROTOID_CZ_MAKE_GROUP, PACKET_CZ_MAKE_GROUP2);
	REGN(489, 81, HEADER_ZC_ADD_MEMBER_TO_GROUP2, PROTOID_ZC_ADD_MEMBER_TO_GROUP, PACKET_ZC_ADD_MEMBER_TO_GROUP2);
	REGN(490, 6, HEADER_ZC_CONGRATULATION); //TODO
	REGN(491, 10, HEADER_ZC_NOTIFY_POSITION_TO_GUILDM, PROTOID_ZC_NOTIFY_POSITION_TO_GUILDM, PACKET_ZC_NOTIFY_POSITION_TO_GUILDM);
	REGN(492, 26, HEADER_ZC_GUILD_MEMBER_MAP_CHANGE); //TODO
	REGN(493, 2, HEADER_CZ_CHOPOKGI); //TODO
//	REGV(494, 4, HEADER_ZC_NORMAL_ITEMLIST2, PROTOID_ZC_NORMAL_ITEMLIST, PACKET_ZC_NORMAL_ITEMLIST2);
//	REGV(495, 4, HEADER_ZC_CART_NORMAL_ITEMLIST2, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_NORMAL_ITEMLIST2);
	REGV(496, 4, HEADER_ZC_STORE_NORMAL_ITEMLIST2); //TODO
	REGV(497, 4, HEADER_AC_NOTIFY_ERROR); //TODO
	REGN(498, 20, HEADER_ZC_UPDATE_CHARSTAT2, PROTOID_ZC_UPDATE_CHARSTAT, PACKET_ZC_UPDATE_CHARSTAT2);
	REGN(499, 10, HEADER_ZC_NOTIFY_EFFECT2, PROTOID_ZC_NOTIFY_EFFECT2, PACKET_ZC_NOTIFY_EFFECT2);
	REGN(500, 32, HEADER_ZC_REQ_EXCHANGE_ITEM2, PROTOID_ZC_REQ_EXCHANGE_ITEM, PACKET_ZC_REQ_EXCHANGE_ITEM2);
	REGN(501, 9, HEADER_ZC_ACK_EXCHANGE_ITEM2, PROTOID_ZC_ACK_EXCHANGE_ITEM, PACKET_ZC_ACK_EXCHANGE_ITEM2);
	REGN(502, 34, HEADER_ZC_REQ_BABY); //TODO
	REGN(503, 14, HEADER_CZ_JOIN_BABY); //TODO
	REGN(504, 2, HEADER_ZC_START_BABY); //TODO
	REGN(505, 6, HEADER_CZ_REQ_JOIN_BABY); //TODO
	REGN(506, 48, HEADER_CA_LOGIN3); //TODO
//	REGN(507, 56, HEADER_CH_DELETE_CHAR2, PROTOID_CH_DELETE_CHAR, PACKET_CH_DELETE_CHAR2);
	REGV(508, 4, HEADER_ZC_REPAIRITEMLIST); //TODO
	REGN(509, 15, HEADER_CZ_REQ_ITEMREPAIR); //TODO
	REGN(510, 5, HEADER_ZC_ACK_ITEMREPAIR); //TODO
	REGN(511, 10, HEADER_ZC_HIGHJUMP, PROTOID_ZC_HIGHJUMP, PACKET_ZC_HIGHJUMP);
	REGN(512, 26, HEADER_CA_CONNECT_INFO_CHANGED); //TODO
	REGV(513, 4, HEADER_ZC_FRIENDS_LIST); //TODO
	REGN(514, 26, HEADER_CZ_ADD_FRIENDS); //TODO
	REGN(515, 10, HEADER_CZ_DELETE_FRIENDS); //TODO
	REGN(516, 18, HEADER_CA_EXE_HASHCHECK); //TODO
	REGN(517, 26, HEADER_ZC_DIVORCE); //TODO
	REGN(518, 11, HEADER_ZC_FRIENDS_STATE); //TODO
	REGN(519, 34, HEADER_ZC_REQ_ADD_FRIENDS); //TODO
	REGN(520, 14, HEADER_CZ_ACK_REQ_ADD_FRIENDS); //TODO
	REGN(521, 36, HEADER_ZC_ADD_FRIENDS_LIST); //TODO
	REGN(522, 10, HEADER_ZC_DELETE_FRIENDS); //TODO
//	REG?(523, ?, HEADER_CH_EXE_HASHCHECK); // no-len //TODO
//	REG?(524, ?, HEADER_CZ_EXE_HASHCHECK); // no-len //TODO
	REGV(525, 4, HEADER_HC_BLOCK_CHARACTER); //TODO
	REGN(526, 32, HEADER_ZC_STARSKILL); //TODO
//	REG?(527, ?, HEADER_CZ_REQ_PVPPOINT); // no-len //TODO
//	REG?(528, ?, HEADER_ZC_ACK_PVPPOINT); // no-len //TODO
	REGN(529, 6, HEADER_ZH_MOVE_PVPWORLD); //TODO
	REGN(530, 26, HEADER_CZ_REQ_GIVE_MANNER_BYNAME); //TODO
	REGN(531, 26, HEADER_CZ_REQ_STATUS_GM); //TODO
	REGN(532, 42, HEADER_ZC_ACK_STATUS_GM); //TODO
	REGN(533, 6, HEADER_ZC_SKILLMSG); //TODO
	REGN(534, 6, HEADER_ZC_BABYMSG); //TODO
	REGN(535, 2, HEADER_CZ_BLACKSMITH_RANK); //TODO
	REGN(536, 2, HEADER_CZ_ALCHEMIST_RANK); //TODO
	REGN(537, 282, HEADER_ZC_BLACKSMITH_RANK); //TODO
	REGN(538, 282, HEADER_ZC_ALCHEMIST_RANK); //TODO
	REGN(539, 10, HEADER_ZC_BLACKSMITH_POINT); //TODO
	REGN(540, 10, HEADER_ZC_ALCHEMIST_POINT); //TODO
	REGN(541, 6, HEADER_CZ_LESSEFFECT, PROTOID_CZ_LESSEFFECT, PACKET_CZ_LESSEFFECT);
	REGN(542, 6, HEADER_ZC_LESSEFFECT, PROTOID_ZC_LESSEFFECT, PACKET_ZC_LESSEFFECT);
	REGN(543, 66, HEADER_ZC_NOTIFY_PKINFO); //TODO
	REGN(544, 10, HEADER_ZC_NOTIFY_CRAZYKILLER); //TODO
	REGV(545, 4, HEADER_ZC_NOTIFY_WEAPONITEMLIST); //TODO
	REGN(546, 6, HEADER_CZ_REQ_WEAPONREFINE); //TODO
	REGN(547, 8, HEADER_ZC_ACK_WEAPONREFINE); //TODO
	REGN(548, 10, HEADER_ZC_TAEKWON_POINT); //TODO
	REGN(549, 2, HEADER_CZ_TAEKWON_RANK); //TODO
	REGN(550, 282, HEADER_ZC_TAEKWON_RANK); //TODO
	REGN(551, 18, HEADER_ZC_GAME_GUARD); //TODO
	REGN(552, 18, HEADER_CZ_ACK_GAME_GUARD); //TODO
	REGN(553, 15, HEADER_ZC_STATE_CHANGE3, PROTOID_ZC_STATE_CHANGE, PACKET_ZC_STATE_CHANGE3);
	REGN(554, 58, HEADER_ZC_NOTIFY_STANDENTRY3); //TODO
	REGN(555, 57, HEADER_ZC_NOTIFY_NEWENTRY3); //TODO
	REGN(556, 65, HEADER_ZC_NOTIFY_MOVEENTRY3); //TODO
	REGN(557, 5, HEADER_CZ_COMMAND_MER); //TODO
	REGN(558, 71, HEADER_ZC_PROPERTY_HOMUN); //TODO
	REGN(559, 5, HEADER_ZC_FEED_MER); //TODO
	REGN(560, 12, HEADER_ZC_CHANGESTATE_MER); //TODO
	REGN(561, 26, HEADER_CZ_RENAME_MER); //TODO
	REGN(562, 9, HEADER_CZ_REQUEST_MOVENPC); //TODO
	REGN(563, 11, HEADER_CZ_REQUEST_ACTNPC); //TODO
	REGN(564, 6, HEADER_CZ_REQUEST_MOVETOOWNER); //TODO
	REGV(565, 4, HEADER_ZC_HOSKILLINFO_LIST); //TODO
	REGN(566, 10, HEADER_ZC_KILLER_POINT); //TODO
	REGN(567, 2, HEADER_CZ_KILLER_RANK); //TODO
	REGN(568, 282, HEADER_ZC_KILLER_RANK); //TODO
	REGN(569, 11, HEADER_ZC_HOSKILLINFO_UPDATE); //TODO
	REGN(570, 4, HEADER_ZC_REQ_STORE_PASSWORD, PROTOID_ZC_REQ_STORE_PASSWORD, PACKET_ZC_REQ_STORE_PASSWORD);
	REGN(571, 36, HEADER_CZ_ACK_STORE_PASSWORD); //TODO
	REGN(572, 6, HEADER_ZC_RESULT_STORE_PASSWORD); //TODO
	REGN(573, 6, HEADER_AC_EVENT_RESULT); //TODO
	REGN(574, 8, HEADER_HC_REQUEST_CHARACTER_PASSWORD); //TODO
	REGN(575, 2, HEADER_CZ_MAIL_GET_LIST); //TODO
	REGV(576, 8, HEADER_ZC_MAIL_REQ_GET_LIST); //TODO
	REGN(577, 6, HEADER_CZ_MAIL_OPEN); //TODO
	REGV(578, 99, HEADER_ZC_MAIL_REQ_OPEN); //TODO
	REGN(579, 6, HEADER_CZ_MAIL_DELETE); //TODO
	REGN(580, 6, HEADER_CZ_MAIL_GET_ITEM); //TODO
	REGN(581, 3, HEADER_ZC_MAIL_REQ_GET_ITEM); //TODO
	REGN(582, 4, HEADER_CZ_MAIL_RESET_ITEM); //TODO
	REGN(583, 8, HEADER_CZ_MAIL_ADD_ITEM); //TODO
	REGV(584, 68, HEADER_CZ_MAIL_SEND); //TODO
	REGN(585, 3, HEADER_ZC_MAIL_REQ_SEND); //TODO
	REGN(586, 70, HEADER_ZC_MAIL_RECEIVE); //TODO
	REGN(587, 4, HEADER_CZ_AUCTION_CREATE); //TODO
	REGN(588, 8, HEADER_CZ_AUCTION_ADD_ITEM); //TODO
	REGN(589, 12, HEADER_CZ_AUCTION_ADD); //TODO
	REGN(590, 6, HEADER_CZ_AUCTION_ADD_CANCEL); //TODO
	REGN(591, 10, HEADER_CZ_AUCTION_BUY); //TODO
	REGN(592, 3, HEADER_ZC_AUCTION_RESULT); //TODO
	REGN(593, 34, HEADER_CZ_AUCTION_ITEM_SEARCH); //TODO
	REGV(594, 12, HEADER_ZC_AUCTION_ITEM_REQ_SEARCH); //TODO
	REGN(595, 3, HEADER_ZC_STARPLACE); //TODO
	REGN(596, 3, HEADER_CZ_AGREE_STARPLACE); //TODO
	REGN(597, 5, HEADER_ZC_ACK_MAIL_ADD_ITEM); //TODO
	REGN(598, 5, HEADER_ZC_ACK_AUCTION_ADD_ITEM); //TODO
	REGN(599, 8, HEADER_ZC_ACK_MAIL_DELETE); //TODO
	REGN(600, 2, HEADER_CA_REQ_GAME_GUARD_CHECK); //TODO
	REGN(601, 3, HEADER_AC_ACK_GAME_GUARD); //TODO
	REGV(602, 4, HEADER_ZC_MAKINGITEM_LIST); //TODO
	REGN(603, 6, HEADER_CZ_REQ_MAKINGITEM); //TODO
	REGN(604, 4, HEADER_CZ_AUCTION_REQ_MY_INFO); //TODO
	REGN(605, 6, HEADER_CZ_AUCTION_REQ_MY_SELL_STOP); //TODO
	REGN(606, 4, HEADER_ZC_AUCTION_ACK_MY_SELL_STOP); //TODO
	REGN(607, 6, HEADER_ZC_AUCTION_WINDOWS); //TODO
	REGN(608, 6, HEADER_ZC_MAIL_WINDOWS); //TODO
	REGN(609, 11, HEADER_AC_REQ_LOGIN_OLDEKEY); //TODO
	REGN(610, 11, HEADER_AC_REQ_LOGIN_NEWEKEY); //TODO
	REGN(611, 11, HEADER_AC_REQ_LOGIN_CARDPASS); //TODO
	REGN(612, 20, HEADER_CA_ACK_LOGIN_OLDEKEY); //TODO
	REGN(613, 20, HEADER_CA_ACK_LOGIN_NEWEKEY); //TODO
	REGN(614, 30, HEADER_CA_ACK_LOGIN_CARDPASS); //TODO
	REGN(615, 4, HEADER_AC_ACK_EKEY_FAIL_NOTEXIST); //TODO
	REGN(616, 4, HEADER_AC_ACK_EKEY_FAIL_NOTUSESEKEY); //TODO
	REGN(617, 4, HEADER_AC_ACK_EKEY_FAIL_NOTUSEDEKEY); //TODO
	REGN(618, 4, HEADER_AC_ACK_EKEY_FAIL_AUTHREFUSE); //TODO
	REGN(619, 4, HEADER_AC_ACK_EKEY_FAIL_INPUTEKEY); //TODO
	REGN(620, 4, HEADER_AC_ACK_EKEY_FAIL_NOTICE); //TODO
	REGN(621, 4, HEADER_AC_ACK_EKEY_FAIL_NEEDCARDPASS); //TODO
//	REG?(622, ?, HEADER_AC_ACK_AUTHEKEY_FAIL_NOTMATCHCARDPASS); // no-len //TODO
	REGN(623, 2, HEADER_AC_ACK_FIRST_LOGIN); //TODO
	REGN(624, 2, HEADER_AC_REQ_LOGIN_ACCOUNT_INFO); //TODO
	REGN(625, 40, HEADER_CA_ACK_LOGIN_ACCOUNT_INFO); //TODO
	REGN(626, 44, HEADER_AC_ACK_PT_ID_INFO); //TODO
	REGN(627, 30, HEADER_CZ_REQ_MAIL_RETURN); //TODO
	REGN(628, 8, HEADER_ZC_ACK_MAIL_RETURN); //TODO
	REGN(629, 37, HEADER_CH_ENTER2); //TODO
	REGV(630, 51, HEADER_AC_ACCEPT_LOGIN2); //TODO
	REGN(631, 84, HEADER_CA_LOGIN_PCBANG); //TODO
	REGN(632, 2, HEADER_ZC_NOTIFY_PCBANG); //TODO
	REGN(633, 2, HEADER_CZ_HUNTINGLIST); //TODO
	REGV(634, 4, HEADER_ZC_HUNTINGLIST); //TODO
	REGN(635, 14, HEADER_ZC_PCBANG_EFFECT); //TODO
	REGN(636, 60, HEADER_CA_LOGIN4); //TODO
	REGN(637, 62, HEADER_ZC_PROPERTY_MERCE); //TODO
	REGV(638, 6, HEADER_ZC_SHANDA_PROTECT); //TODO
	REGN(639, 8, HEADER_CA_CLIENT_TYPE); //TODO
	REGN(640, 12, HEADER_ZC_GANGSI_POINT); //TODO
	REGN(641, 4, HEADER_CZ_GANGSI_RANK); //TODO
	REGN(642, 284, HEADER_ZC_GANGSI_RANK); //TODO
	REGN(643, 6, HEADER_ZC_AID, PROTOID_ZC_AID, PACKET_ZC_AID);
	REGN(644, 14, HEADER_ZC_NOTIFY_EFFECT3, PROTOID_ZC_NOTIFY_EFFECT3, PACKET_ZC_NOTIFY_EFFECT3);
	REGN(645, 6, HEADER_ZC_DEATH_QUESTION); //TODO
	REGN(646, 4, HEADER_CZ_DEATH_QUESTION); //TODO
	REGV(647, 8, HEADER_ZC_PC_CASH_POINT_ITEMLIST); //TODO
	REGN(648, 6, HEADER_CZ_PC_BUY_CASH_POINT_ITEM); //TODO
	REGN(649, 8, HEADER_ZC_PC_CASH_POINT_UPDATE); //TODO
	REGN(650, 18, HEADER_ZC_NPC_SHOWEFST_UPDATE); //TODO
	REGV(651, 4, HEADER_HC_CHARNOTBEENSELECTED); //TODO
	REGN(652, 46, HEADER_CH_SELECT_CHAR_GOINGTOBEUSED); //TODO
	REGN(653, 34, HEADER_CH_REQ_IS_VALID_CHARNAME); //TODO
	REGN(654, 4, HEADER_HC_ACK_IS_VALID_CHARNAME); //TODO
	REGN(655, 6, HEADER_CH_REQ_CHANGE_CHARNAME); //TODO
	REGN(656, 4, HEADER_HC_ACK_CHANGE_CHARNAME); //TODO
	REGN(657, 4, HEADER_ZC_MSG, PROTOID_ZC_MSG, PACKET_ZC_MSG);
	REGN(658, 2, HEADER_CZ_STANDING_RESURRECTION); //TODO
	REGN(659, 70, HEADER_ZC_BOSS_INFO); //TODO
	REGN(660, 10, HEADER_ZC_READ_BOOK); //TODO
	REGV(661, 4, HEADER_ZC_EQUIPMENT_ITEMLIST2); //TODO
	REGV(662, 4, HEADER_ZC_STORE_EQUIPMENT_ITEMLIST2); //TODO
	REGV(663, 4, HEADER_ZC_CART_EQUIPMENT_ITEMLIST2); //TODO
	REGN(664, 8, HEADER_ZC_CASH_TIME_COUNTER); //TODO
	REGN(665, 6, HEADER_ZC_CASH_ITEM_DELETE); //TODO
//	REGN(666, 27, HEADER_ZC_ITEM_PICKUP_ACK2, PROTOID_ZC_ITEM_PICKUP_ACK, PACKET_ZC_ITEM_PICKUP_ACK2);
	REGN(667, 80, HEADER_ZC_MER_INIT); //TODO
	REGN(668, 66, HEADER_ZC_MER_PROPERTY); //TODO
	REGV(669, 4, HEADER_ZC_MER_SKILLINFO_LIST); //TODO
	REGN(670, 11, HEADER_ZC_MER_SKILLINFO_UPDATE); //TODO
	REGN(671, 3, HEADER_CZ_MER_COMMAND); //TODO
//	REG?(672, ?, UNUSED_HEADER_CZ_MER_USE_SKILL); // no-len //TODO
//	REG?(673, ?, UNUSED_HEADER_CZ_MER_UPGRADE_SKILLLEVEL); // no-len //TODO
	REGN(674, 8, HEADER_ZC_MER_PAR_CHANGE); //TODO
//	REG?(675, ?, HEADER_ZC_GAMEGUARD_LINGO_KEY); // no-len //TODO
//	REG?(676, ?, HEADER_CZ_GAMEGUARD_LINGO_READY); // no-len //TODO
	REGN(677, 8, HEADER_CZ_KSY_EVENT); //TODO
	REGV(678, 10, HEADER_ZC_HACKSH_CPX_MSG); //TODO
	REGV(679, 10, HEADER_CZ_HACKSH_CPX_MSG); //TODO
//	REG?(680, ?, HEADER_ZC_HACKSHIELD_CRC_MSG); // no-len //TODO
//	REG?(681, ?, HEADER_CZ_HACKSHIELD_CRC_MSG); // no-len //TODO
	REGN(682, 4, HEADER_ZC_REQ_CASH_PASSWORD); //TODO
	REGN(683, 36, HEADER_CZ_ACK_CASH_PASSWORD); //TODO
	REGN(684, 6, HEADER_ZC_RESULT_CASH_PASSWORD); //TODO
	REGN(685, 8, HEADER_AC_REQUEST_SECOND_PASSWORD); //TODO
//	REG?(686, ?, HEADER_ZC_SRPACKET_INIT); // no-len //TODO
//	REG?(687, ?, HEADER_CZ_SRPACKET_START); // no-len //TODO
//	REGN(688, 85, HEADER_CA_LOGIN_CHANNEL, PROTOID_CA_LOGIN_CHANNEL, PACKET_CA_LOGIN_CHANNEL);
	REGV(689, 8, HEADER_ZC_ALL_QUEST_LIST, PROTOID_ZC_ALL_QUEST_LIST, PACKET_ZC_ALL_QUEST_LIST);
	REGV(690, 8, HEADER_ZC_ALL_QUEST_MISSION, PROTOID_ZC_ALL_QUEST_MISSION, PACKET_ZC_ALL_QUEST_MISSION);
	REGN(691, 107, HEADER_ZC_ADD_QUEST); //TODO
	REGN(692, 6, HEADER_ZC_DEL_QUEST); //TODO
	REGV(693, 6, HEADER_ZC_UPDATE_MISSION_HUNT); //TODO
	REGN(694, 7, HEADER_CZ_ACTIVE_QUEST); //TODO
	REGN(695, 7, HEADER_ZC_ACTIVE_QUEST); //TODO
	REGN(696, 22, HEADER_ZC_ITEM_PICKUP_PARTY); //TODO
//	REGN(697, 191, HEADER_ZC_SHORTCUT_KEY_LIST, PROTOID_ZC_SHORTCUT_KEY_LIST, PACKET_ZC_SHORTCUT_KEY_LIST);
	REGN(698, 11, HEADER_CZ_SHORTCUT_KEY_CHANGE); //TODO
	REGN(699, 8, HEADER_ZC_EQUIPITEM_DAMAGED); //TODO
	REGN(700, 6, HEADER_ZC_NOTIFY_PCBANG_PLAYING_TIME); //TODO
//	REG?(701, ?, HEADER_ZC_SRCRYPTOR2_INIT); // no-len //TODO
//	REG?(702, ?, HEADER_CZ_SRCRYPTOR2_START); // no-len //TODO
//	REG?(703, ?, HEADER_ZC_SRPACKETR2_INIT); // no-len //TODO
//	REG?(704, ?, HEADER_CZ_SRPACKETR2_START); // no-len //TODO
	REGV(705, 12, HEADER_ZC_NPC_CHAT); //TODO
	REGV(706, 6, HEADER_ZC_FORMATSTRING_MSG); //TODO
//	REG?(707, ?, UNUSED_HEADER_CZ_FORMATSTRING_MSG_RES); // no-len //TODO
	REGN(708, 26, HEADER_CZ_PARTY_JOIN_REQ, PROTOID_CZ_PARTY_JOIN_REQ, PACKET_CZ_PARTY_JOIN_REQ);
	REGN(709, 30, HEADER_ZC_PARTY_JOIN_REQ_ACK, PROTOID_ZC_ACK_REQ_JOIN_GROUP, PACKET_ZC_PARTY_JOIN_REQ_ACK);
	REGN(710, 30, HEADER_ZC_PARTY_JOIN_REQ, PROTOID_ZC_REQ_JOIN_GROUP, PACKET_ZC_PARTY_JOIN_REQ);
	REGN(711, 7, HEADER_CZ_PARTY_JOIN_REQ_ACK, PROTOID_CZ_JOIN_GROUP, PACKET_CZ_PARTY_JOIN_REQ_ACK);
	REGN(712, 3, HEADER_CZ_PARTY_CONFIG); //TODO
	REGN(713, 3, HEADER_ZC_PARTY_CONFIG, PROTOID_ZC_PARTY_CONFIG, PACKET_ZC_PARTY_CONFIG);
	REGN(714, 3, HEADER_HC_REFUSE_SELECTCHAR); //TODO
	REGN(715, 65, HEADER_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO, PROTOID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO, PACKET_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO);
	REGN(716, 4, HEADER_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY, PROTOID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY, PACKET_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY);
	REGN(717, 71, HEADER_ZC_MEMORIALDUNGEON_INFO, PROTOID_ZC_MEMORIALDUNGEON_INFO, PACKET_ZC_MEMORIALDUNGEON_INFO);
	REGN(718, 10, HEADER_ZC_MEMORIALDUNGEON_NOTIFY, PROTOID_ZC_MEMORIALDUNGEON_NOTIFY, PACKET_ZC_MEMORIALDUNGEON_NOTIFY);
	REGN(719, 6, HEADER_CZ_MEMORIALDUNGEON_COMMAND, PROTOID_CZ_MEMORIALDUNGEON_COMMAND, PACKET_CZ_MEMORIALDUNGEON_COMMAND);
	REGV(720, 4, HEADER_ZC_EQUIPMENT_ITEMLIST3, PROTOID_ZC_EQUIPMENT_ITEMLIST, PACKET_ZC_EQUIPMENT_ITEMLIST3__KRO20120207);
	REGV(721, 4, HEADER_ZC_STORE_EQUIPMENT_ITEMLIST3); //TODO
	REGV(722, 4, HEADER_ZC_CART_EQUIPMENT_ITEMLIST3); //TODO
	REGN(723, 4, HEADER_ZC_NOTIFY_BIND_ON_EQUIP); //TODO
	REGN(724, 29, HEADER_ZC_ITEM_PICKUP_ACK3, PROTOID_ZC_ITEM_PICKUP_ACK, PACKET_ZC_ITEM_PICKUP_ACK3);
	REGN(725, 2, HEADER_ZC_ISVR_DISCONNECT, PROTOID_ZC_ISVR_DISCONNECT, PACKET_ZC_ISVR_DISCONNECT);
	REGN(726, 6, HEADER_CZ_EQUIPWIN_MICROSCOPE, PROTOID_CZ_EQUIPWIN_MICROSCOPE, PACKET_CZ_EQUIPWIN_MICROSCOPE);
//	REGV(727, 43, HEADER_ZC_EQUIPWIN_MICROSCOPE, PROTOID_ZC_EQUIPWIN_MICROSCOPE, PACKET_ZC_EQUIPWIN_MICROSCOPE);
	REGN(728, 10, HEADER_CZ_CONFIG, PROTOID_CZ_CONFIG, PACKET_CZ_CONFIG);
	REGN(729, 10, HEADER_ZC_CONFIG, PROTOID_ZC_CONFIG, PACKET_ZC_CONFIG);
	REGN(730, 3, HEADER_ZC_CONFIG_NOTIFY, PROTOID_ZC_CONFIG_NOTIFY, PACKET_ZC_CONFIG_NOTIFY);
	REGV(731, 4, HEADER_CZ_BATTLEFIELD_CHAT); //TODO
	REGV(732, 32, HEADER_ZC_BATTLEFIELD_CHAT); //TODO
	REGN(733, 32, HEADER_ZC_BATTLEFIELD_NOTIFY_CAMPINFO); //TODO
	REGN(734, 6, HEADER_ZC_BATTLEFIELD_NOTIFY_POINT); //TODO
	REGN(735, 36, HEADER_ZC_BATTLEFIELD_NOTIFY_POSITION); //TODO
	REGN(736, 34, HEADER_ZC_BATTLEFIELD_NOTIFY_HP); //TODO
	REGN(737, 33, HEADER_ZC_NOTIFY_ACT2, PROTOID_ZC_NOTIFY_ACT, PACKET_ZC_NOTIFY_ACT2);
	REGN(738, 8, HEADER_CZ_USE_ITEM_NEW_JAPEN); //TODO
	REGN(739, 10, HEADER_CZ_USE_SKILL_NEW_JAPEN); //TODO
	REGN(740, 6, HEADER_CZ_ITEM_PICKUP_NEW_JAPEN); //TODO
	REGN(741, 5, HEADER_CZ_REQUEST_MOVE_NEW_JAPEN); //TODO
	REGN(742, 6, HEADER_CZ_BOT_CHECK); //TODO
	REGV(743, 6, HEADER_ZC_MAPPROPERTY, PROTOID_ZC_MAPPROPERTY, PACKET_ZC_MAPPROPERTY);
	REGV(744, 4, HEADER_ZC_NORMAL_ITEMLIST3, PROTOID_ZC_NORMAL_ITEMLIST, PACKET_ZC_NORMAL_ITEMLIST3);
	REGV(745, 4, HEADER_ZC_CART_NORMAL_ITEMLIST3, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_NORMAL_ITEMLIST3);
	REGV(746, 4, HEADER_ZC_STORE_NORMAL_ITEMLIST3, PROTOID_ZC_STORE_NORMAL_ITEMLIST, PACKET_ZC_STORE_NORMAL_ITEMLIST3);
	REGN(747, 13, HEADER_ZC_ACCEPT_ENTER2, PROTOID_ZC_ACCEPT_ENTER, PACKET_ZC_ACCEPT_ENTER2);
	REGN(748, 67, HEADER_ZC_NOTIFY_MOVEENTRY4); //TODO
	REGN(749, 59, HEADER_ZC_NOTIFY_NEWENTRY4); //TODO
	REGN(750, 60, HEADER_ZC_NOTIFY_STANDENTRY4); //TODO
	REGN(751, 8, HEADER_ZC_NOTIFY_FONT); //TODO
	REGN(752, 10, HEADER_ZC_PROGRESS); //TODO
	REGN(753, 2, HEADER_CZ_PROGRESS); //TODO
	REGN(754, 2, HEADER_ZC_PROGRESS_CANCEL); //TODO
	REGV(755, 68, HEADER_CZ_IRMAIL_SEND); //TODO
	REGN(756, 3, HEADER_ZC_IRMAIL_SEND_RES); //TODO
	REGN(757, 7, HEADER_ZC_IRMAIL_NOTIFY); //TODO
	REGN(758, 7, HEADER_CZ_IRMAIL_LIST); //TODO
//	REG?(759, ?, ?); // no-len // no-enum //TODO
//	REG?(760, ?, ?); // no-len // no-enum //TODO
//	REG?(761, ?, ?); // no-len // no-enum //TODO
//	REG?(762, ?, ?); // no-len // no-enum //TODO
//	REG?(763, ?, ?); // no-len // no-enum //TODO
//	REG?(764, ?, ?); // no-len // no-enum //TODO
//	REG?(765, ?, ?); // no-len // no-enum //TODO
//	REG?(766, ?, ?); // no-len // no-enum //TODO
//	REG?(767, ?, ?); // no-len // no-enum //TODO
//	REG?(768, ?, ?); // no-len // no-enum //TODO
//	REG?(769, ?, ?); // no-len // no-enum //TODO
//	REG?(770, ?, ?); // no-len // no-enum //TODO
//	REG?(771, ?, ?); // no-len // no-enum //TODO
//	REG?(772, ?, ?); // no-len // no-enum //TODO
//	REG?(773, ?, ?); // no-len // no-enum //TODO
//	REG?(774, ?, ?); // no-len // no-enum //TODO
//	REG?(775, ?, ?); // no-len // no-enum //TODO
//	REG?(776, ?, ?); // no-len // no-enum //TODO
//	REG?(777, ?, ?); // no-len // no-enum //TODO
//	REG?(778, ?, ?); // no-len // no-enum //TODO
//	REG?(779, ?, ?); // no-len // no-enum //TODO
//	REG?(780, ?, ?); // no-len // no-enum //TODO
//	REG?(781, ?, ?); // no-len // no-enum //TODO
//	REG?(782, ?, ?); // no-len // no-enum //TODO
//	REG?(783, ?, ?); // no-len // no-enum //TODO
//	REG?(784, ?, ?); // no-len // no-enum //TODO
//	REG?(785, ?, ?); // no-len // no-enum //TODO
//	REG?(786, ?, ?); // no-len // no-enum //TODO
//	REG?(787, ?, ?); // no-len // no-enum //TODO
//	REG?(788, ?, ?); // no-len // no-enum //TODO
//	REG?(789, ?, ?); // no-len // no-enum //TODO
//	REG?(790, ?, ?); // no-len // no-enum //TODO
//	REG?(791, ?, ?); // no-len // no-enum //TODO
//	REG?(792, ?, ?); // no-len // no-enum //TODO
//	REG?(793, ?, ?); // no-len // no-enum //TODO
//	REG?(794, ?, ?); // no-len // no-enum //TODO
//	REG?(795, ?, ?); // no-len // no-enum //TODO
//	REG?(796, ?, ?); // no-len // no-enum //TODO
//	REG?(797, ?, ?); // no-len // no-enum //TODO
//	REG?(798, ?, ?); // no-len // no-enum //TODO
//	REG?(799, ?, ?); // no-len // no-enum //TODO
//	REG?(800, ?, ?); // no-len // no-enum //TODO
//	REG?(801, ?, ?); // no-len // no-enum //TODO
//	REG?(802, ?, ?); // no-len // no-enum //TODO
//	REG?(803, ?, ?); // no-len // no-enum //TODO
//	REG?(804, ?, ?); // no-len // no-enum //TODO
//	REG?(805, ?, ?); // no-len // no-enum //TODO
//	REG?(806, ?, ?); // no-len // no-enum //TODO
//	REG?(807, ?, ?); // no-len // no-enum //TODO
//	REG?(808, ?, ?); // no-len // no-enum //TODO
//	REG?(809, ?, ?); // no-len // no-enum //TODO
//	REG?(810, ?, ?); // no-len // no-enum //TODO
//	REG?(811, ?, ?); // no-len // no-enum //TODO
//	REG?(812, ?, ?); // no-len // no-enum //TODO
//	REG?(813, ?, ?); // no-len // no-enum //TODO
//	REG?(814, ?, ?); // no-len // no-enum //TODO
//	REG?(815, ?, ?); // no-len // no-enum //TODO
//	REG?(816, ?, ?); // no-len // no-enum //TODO
//	REG?(817, ?, ?); // no-len // no-enum //TODO
//	REG?(818, ?, ?); // no-len // no-enum //TODO
//	REG?(819, ?, ?); // no-len // no-enum //TODO
//	REG?(820, ?, ?); // no-len // no-enum //TODO
//	REG?(821, ?, ?); // no-len // no-enum //TODO
//	REG?(822, ?, ?); // no-len // no-enum //TODO
//	REG?(823, ?, ?); // no-len // no-enum //TODO
//	REG?(824, ?, ?); // no-len // no-enum //TODO
//	REG?(825, ?, ?); // no-len // no-enum //TODO
//	REG?(826, ?, ?); // no-len // no-enum //TODO
//	REG?(827, ?, ?); // no-len // no-enum //TODO
//	REG?(828, ?, ?); // no-len // no-enum //TODO
//	REG?(829, ?, ?); // no-len // no-enum //TODO
//	REG?(830, ?, ?); // no-len // no-enum //TODO
//	REG?(831, ?, ?); // no-len // no-enum //TODO
//	REG?(832, ?, ?); // no-len // no-enum //TODO
//	REG?(833, ?, ?); // no-len // no-enum //TODO
//	REG?(834, ?, ?); // no-len // no-enum //TODO
//	REG?(835, ?, ?); // no-len // no-enum //TODO
//	REG?(836, ?, ?); // no-len // no-enum //TODO
//	REG?(837, ?, ?); // no-len // no-enum //TODO
//	REG?(838, ?, ?); // no-len // no-enum //TODO
//	REG?(839, ?, ?); // no-len // no-enum //TODO
//	REG?(840, ?, ?); // no-len // no-enum //TODO
//	REG?(841, ?, ?); // no-len // no-enum //TODO
//	REG?(842, ?, ?); // no-len // no-enum //TODO
//	REG?(843, ?, ?); // no-len // no-enum //TODO
//	REG?(844, ?, ?); // no-len // no-enum //TODO
//	REG?(845, ?, ?); // no-len // no-enum //TODO
//	REG?(846, ?, ?); // no-len // no-enum //TODO
//	REG?(847, ?, ?); // no-len // no-enum //TODO
//	REG?(848, ?, ?); // no-len // no-enum //TODO
//	REG?(849, ?, ?); // no-len // no-enum //TODO
//	REG?(850, ?, ?); // no-len // no-enum //TODO
//	REG?(851, ?, ?); // no-len // no-enum //TODO
//	REG?(852, ?, ?); // no-len // no-enum //TODO
//	REG?(853, ?, ?); // no-len // no-enum //TODO
//	REG?(854, ?, ?); // no-len // no-enum //TODO
//	REG?(855, ?, ?); // no-len // no-enum //TODO
//	REG?(856, ?, ?); // no-len // no-enum //TODO
//	REG?(857, ?, ?); // no-len // no-enum //TODO
//	REG?(858, ?, ?); // no-len // no-enum //TODO
//	REG?(859, ?, ?); // no-len // no-enum //TODO
	REGN(860, 2, HEADER_CZ_OPEN_SIMPLE_CASHSHOP_ITEMLIST); //TODO
	REGV(861, 16, HEADER_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST); //TODO
	REGN(862, 2, HEADER_CZ_CLOSE_WINDOW); //TODO
	REGN(863, 5, HEADER_CZ_REQUEST_MOVE2, PROTOID_CZ_REQUEST_MOVE, PACKET_CZ_REQUEST_MOVE2);
	REGN(864, 6, HEADER_CZ_REQUEST_TIME2, PROTOID_CZ_REQUEST_TIME, PACKET_CZ_REQUEST_TIME2);
	REGN(865, 5, HEADER_CZ_CHANGE_DIRECTION2, PROTOID_CZ_CHANGE_DIRECTION, PACKET_CZ_CHANGE_DIRECTION2);
	REGN(866, 6, HEADER_CZ_ITEM_PICKUP2, PROTOID_CZ_ITEM_PICKUP, PACKET_CZ_ITEM_PICKUP2);
	REGN(867, 6, HEADER_CZ_ITEM_THROW2, PROTOID_CZ_ITEM_THROW, PACKET_CZ_ITEM_THROW2);
	REGN(868, 8, HEADER_CZ_MOVE_ITEM_FROM_BODY_TO_STORE2, PROTOID_CZ_MOVE_ITEM_FROM_BODY_TO_STORE, PACKET_CZ_MOVE_ITEM_FROM_BODY_TO_STORE2);
	REGN(869, 8, HEADER_CZ_MOVE_ITEM_FROM_STORE_TO_BODY2, PROTOID_CZ_MOVE_ITEM_FROM_STORE_TO_BODY, PACKET_CZ_MOVE_ITEM_FROM_STORE_TO_BODY2);
	REGN(870, 10, HEADER_CZ_USE_SKILL_TOGROUND2, PROTOID_CZ_USE_SKILL_TOGROUND, PACKET_CZ_USE_SKILL_TOGROUND2);
	REGN(871, 90, HEADER_CZ_USE_SKILL_TOGROUND_WITHTALKBOX2, PROTOID_CZ_USE_SKILL_TOGROUND_WITHTALKBOX, PACKET_CZ_USE_SKILL_TOGROUND_WITHTALKBOX2);
	REGN(872, 6, HEADER_CZ_REQNAME2, PROTOID_CZ_REQNAME, PACKET_CZ_REQNAME2);
	REGN(873, 6, HEADER_CZ_REQNAME_BYGID2, PROTOID_CZ_REQNAME_BYGID, PACKET_CZ_REQNAME_BYGID2);
//	REG?(874, ?, ?); // no-len // no-enum //TODO
//	REG?(875, ?, ?); // no-len // no-enum //TODO
//	REG?(876, ?, ?); // no-len // no-enum //TODO
//	REG?(877, ?, ?); // no-len // no-enum //TODO
//	REG?(878, ?, ?); // no-len // no-enum //TODO
//	REG?(879, ?, ?); // no-len // no-enum //TODO
//	REG?(880, ?, ?); // no-len // no-enum //TODO
//	REG?(881, ?, ?); // no-len // no-enum //TODO
//	REG?(882, ?, ?); // no-len // no-enum //TODO
//	REG?(883, ?, ?); // no-len // no-enum //TODO
//	REG?(884, ?, ?); // no-len // no-enum //TODO
//	REG?(885, ?, ?); // no-len // no-enum //TODO
//	REG?(886, ?, ?); // no-len // no-enum //TODO
//	REG?(887, ?, ?); // no-len // no-enum //TODO
//	REG?(888, ?, ?); // no-len // no-enum //TODO
//	REG?(889, ?, ?); // no-len // no-enum //TODO
//	REG?(890, ?, ?); // no-len // no-enum //TODO
//	REG?(891, ?, ?); // no-len // no-enum //TODO
//	REG?(892, ?, ?); // no-len // no-enum //TODO
//	REG?(893, ?, ?); // no-len // no-enum //TODO
//	REG?(894, ?, ?); // no-len // no-enum //TODO
//	REG?(895, ?, ?); // no-len // no-enum //TODO
//	REG?(896, ?, ?); // no-len // no-enum //TODO
//	REG?(897, ?, ?); // no-len // no-enum //TODO
//	REG?(898, ?, ?); // no-len // no-enum //TODO
//	REG?(899, ?, ?); // no-len // no-enum //TODO
//	REG?(900, ?, ?); // no-len // no-enum //TODO
//	REG?(901, ?, ?); // no-len // no-enum //TODO
//	REG?(902, ?, ?); // no-len // no-enum //TODO
//	REG?(903, ?, ?); // no-len // no-enum //TODO
//	REG?(904, ?, ?); // no-len // no-enum //TODO
//	REG?(905, ?, ?); // no-len // no-enum //TODO
//	REG?(906, ?, ?); // no-len // no-enum //TODO
//	REG?(907, ?, ?); // no-len // no-enum //TODO
//	REG?(908, ?, ?); // no-len // no-enum //TODO
//	REG?(909, ?, ?); // no-len // no-enum //TODO
//	REG?(910, ?, ?); // no-len // no-enum //TODO
//	REG?(911, ?, ?); // no-len // no-enum //TODO
//	REG?(912, ?, ?); // no-len // no-enum //TODO
//	REG?(913, ?, ?); // no-len // no-enum //TODO
//	REG?(914, ?, ?); // no-len // no-enum //TODO
//	REG?(915, ?, ?); // no-len // no-enum //TODO
//	REG?(916, ?, ?); // no-len // no-enum //TODO
//	REG?(917, ?, ?); // no-len // no-enum //TODO
//	REG?(918, ?, ?); // no-len // no-enum //TODO
//	REG?(919, ?, ?); // no-len // no-enum //TODO
//	REG?(920, ?, ?); // no-len // no-enum //TODO
//	REG?(921, ?, ?); // no-len // no-enum //TODO
//	REG?(922, ?, ?); // no-len // no-enum //TODO
//	REG?(923, ?, ?); // no-len // no-enum //TODO
//	REG?(924, ?, ?); // no-len // no-enum //TODO
//	REG?(925, ?, ?); // no-len // no-enum //TODO
//	REG?(926, ?, ?); // no-len // no-enum //TODO
//	REG?(927, ?, ?); // no-len // no-enum //TODO
//	REG?(928, ?, ?); // no-len // no-enum //TODO
//	REG?(929, ?, ?); // no-len // no-enum //TODO
//	REG?(930, ?, ?); // no-len // no-enum //TODO
//	REG?(931, ?, ?); // no-len // no-enum //TODO
//	REG?(932, ?, ?); // no-len // no-enum //TODO
//	REG?(933, ?, ?); // no-len // no-enum //TODO
//	REG?(934, ?, ?); // no-len // no-enum //TODO
//	REG?(935, ?, ?); // no-len // no-enum //TODO
//	REG?(936, ?, ?); // no-len // no-enum //TODO
//	REG?(937, ?, ?); // no-len // no-enum //TODO
//	REG?(938, ?, ?); // no-len // no-enum //TODO
//	REG?(939, ?, ?); // no-len // no-enum //TODO
//	REG?(940, ?, ?); // no-len // no-enum //TODO
//	REG?(941, ?, ?); // no-len // no-enum //TODO
//	REG?(942, ?, ?); // no-len // no-enum //TODO
//	REG?(943, ?, ?); // no-len // no-enum //TODO
//	REG?(944, ?, ?); // no-len // no-enum //TODO
//	REG?(945, ?, ?); // no-len // no-enum //TODO
//	REG?(946, ?, ?); // no-len // no-enum //TODO
//	REG?(947, ?, ?); // no-len // no-enum //TODO
//	REG?(948, ?, ?); // no-len // no-enum //TODO
//	REG?(949, ?, ?); // no-len // no-enum //TODO
//	REG?(950, ?, ?); // no-len // no-enum //TODO
//	REG?(951, ?, ?); // no-len // no-enum //TODO
//	REG?(952, ?, ?); // no-len // no-enum //TODO
//	REG?(953, ?, ?); // no-len // no-enum //TODO
//	REG?(954, ?, ?); // no-len // no-enum //TODO
//	REG?(955, ?, ?); // no-len // no-enum //TODO
//	REG?(956, ?, ?); // no-len // no-enum //TODO
//	REG?(957, ?, ?); // no-len // no-enum //TODO
//	REG?(958, ?, ?); // no-len // no-enum //TODO
//	REG?(959, ?, ?); // no-len // no-enum //TODO
//	REG?(960, ?, ?); // no-len // no-enum //TODO
//	REG?(961, ?, ?); // no-len // no-enum //TODO
//	REG?(962, ?, ?); // no-len // no-enum //TODO
//	REG?(963, ?, ?); // no-len // no-enum //TODO
//	REG?(964, ?, ?); // no-len // no-enum //TODO
//	REG?(965, ?, ?); // no-len // no-enum //TODO
//	REG?(966, ?, ?); // no-len // no-enum //TODO
//	REG?(967, ?, ?); // no-len // no-enum //TODO
//	REG?(968, ?, ?); // no-len // no-enum //TODO
//	REG?(969, ?, ?); // no-len // no-enum //TODO
//	REG?(970, ?, ?); // no-len // no-enum //TODO
//	REG?(971, ?, ?); // no-len // no-enum //TODO
//	REG?(972, ?, ?); // no-len // no-enum //TODO
//	REG?(973, ?, ?); // no-len // no-enum //TODO
//	REG?(974, ?, ?); // no-len // no-enum //TODO
//	REG?(975, ?, ?); // no-len // no-enum //TODO
//	REG?(976, ?, ?); // no-len // no-enum //TODO
//	REG?(977, ?, ?); // no-len // no-enum //TODO
//	REG?(978, ?, ?); // no-len // no-enum //TODO
//	REG?(979, ?, ?); // no-len // no-enum //TODO
//	REG?(980, ?, ?); // no-len // no-enum //TODO
//	REG?(981, ?, ?); // no-len // no-enum //TODO
//	REG?(982, ?, ?); // no-len // no-enum //TODO
//	REG?(983, ?, ?); // no-len // no-enum //TODO
//	REG?(984, ?, ?); // no-len // no-enum //TODO
//	REG?(985, ?, ?); // no-len // no-enum //TODO
//	REG?(986, ?, ?); // no-len // no-enum //TODO
//	REG?(987, ?, ?); // no-len // no-enum //TODO
//	REG?(988, ?, ?); // no-len // no-enum //TODO
	REGN(989, 18, HEADER_AHC_GAME_GUARD); //TODO
	REGN(990, 18, HEADER_CAH_ACK_GAME_GUARD); //TODO
//	REG?(991, ?, HEADER_ZC_WAITINGROOM_PARTYPLAY_JOIN); // no-len //TODO
//	REG?(992, ?, HEADER_CZ_WAITINGROOM_PARTYPLAY_JOIN_RESULT); // no-len //TODO
//	REG?(993, ?, HEADER_ZC_WAITINGROOM_SUBSCRIPTION_RESULT); // no-len //TODO
//	...
//	REG?(1036, ?, ?); // no-len // no-enum //TODO
//	REG?(1037, ?, ?); // no-len // no-enum //TODO
//	REG?(1038, ?, ?); // no-len // no-enum //TODO
//	REG?(1039, ?, ?); // no-len // no-enum //TODO
//	REG?(1040, ?, ?); // no-len // no-enum //TODO
//	REG?(1041, ?, ?); // no-len // no-enum //TODO
//	REG?(1042, ?, ?); // no-len // no-enum //TODO
//	REG?(1043, ?, ?); // no-len // no-enum //TODO
//	REG?(1044, ?, ?); // no-len // no-enum //TODO
//	REG?(1045, ?, ?); // no-len // no-enum //TODO
//	REG?(1046, ?, ?); // no-len // no-enum //TODO
//	REG?(1047, ?, ?); // no-len // no-enum //TODO
//	REG?(1048, ?, ?); // no-len // no-enum //TODO
//	REG?(1049, ?, ?); // no-len // no-enum //TODO
//	REG?(1050, ?, ?); // no-len // no-enum //TODO
//	REG?(1051, ?, ?); // no-len // no-enum //TODO
//	REG?(1052, ?, ?); // no-len // no-enum //TODO
//	REG?(1053, ?, ?); // no-len // no-enum //TODO
//	REG?(1054, ?, ?); // no-len // no-enum //TODO
//	REG?(1055, ?, ?); // no-len // no-enum //TODO
//	REG?(1056, ?, ?); // no-len // no-enum //TODO
//	REG?(1057, ?, ?); // no-len // no-enum //TODO
//	REG?(1058, ?, ?); // no-len // no-enum //TODO
//	REG?(1059, ?, ?); // no-len // no-enum //TODO
//	REG?(1060, ?, ?); // no-len // no-enum //TODO
//	REG?(1061, ?, ?); // no-len // no-enum //TODO
//	REG?(1062, ?, ?); // no-len // no-enum //TODO
//	REG?(1063, ?, ?); // no-len // no-enum //TODO
//	REG?(1064, ?, ?); // no-len // no-enum //TODO
//	REG?(1065, ?, ?); // no-len // no-enum //TODO
//	REG?(1066, ?, ?); // no-len // no-enum //TODO
//	REG?(1067, ?, ?); // no-len // no-enum //TODO
//	REG?(1068, ?, ?); // no-len // no-enum //TODO
//	REG?(1069, ?, ?); // no-len // no-enum //TODO
//	REG?(1070, ?, ?); // no-len // no-enum //TODO
//	REG?(1071, ?, ?); // no-len // no-enum //TODO
//	REG?(1072, ?, ?); // no-len // no-enum //TODO
//	REG?(1073, ?, ?); // no-len // no-enum //TODO
//	REG?(1074, ?, ?); // no-len // no-enum //TODO
//	REG?(1075, ?, ?); // no-len // no-enum //TODO
//	REG?(1076, ?, ?); // no-len // no-enum //TODO
//	REG?(1077, ?, ?); // no-len // no-enum //TODO
	REGN(1078, 19, HEADER_CZ_ENTER2, PROTOID_CZ_ENTER, PACKET_CZ_ENTER2);
	REGN(1079, 7, HEADER_CZ_REQUEST_ACT2); //TODO
	REGN(1080, 10, HEADER_CZ_USE_SKILL2); //TODO
	REGN(1081, 8, HEADER_CZ_USE_ITEM2, PROTOID_CZ_USE_ITEM, PACKET_CZ_USE_ITEM2);
//	REG?(1082, ?, HEADER_ZC_REQ_CRACKPROOF); // no-len //TODO
//	REG?(1083, ?, HEADER_CZ_ACK_CRACKPROOF); // no-len //TODO
//	REG?(1084, ?, HEADER_ZC_CRACKPROOF_ERRCODE); // no-len //TODO
	REGN(1085, 8, HEADER_ZC_SKILL_POSTDELAY, PROTOID_ZC_SKILL_POSTDELAY, PACKET_ZC_SKILL_POSTDELAY);
	REGV(1086, 4, HEADER_ZC_SKILL_POSTDELAY_LIST); //TODO
	REGN(1087, 25, HEADER_ZC_MSG_STATE_CHANGE2, PROTOID_ZC_MSG_STATE_CHANGE, PACKET_ZC_MSG_STATE_CHANGE2);
	REGN(1088, 10, HEADER_ZC_MILLENNIUMSHIELD); //TODO
	REGN(1089, 4, HEADER_ZC_SKILLINFO_DELETE); //TODO
	REGV(1090, 8, HEADER_ZC_SKILL_SELECT_REQUEST); //TODO
	REGN(1091, 8, HEADER_CZ_SKILL_SELECT_RESPONSE); //TODO
	REGV(1092, 8, HEADER_ZC_SIMPLE_CASH_POINT_ITEMLIST); //TODO
	REGN(1093, 6, HEADER_CZ_SIMPLE_BUY_CASH_POINT_ITEM); //TODO
	REGN(1094, 14, HEADER_ZC_QUEST_NOTIFY_EFFECT); //TODO
	REGN(1095, 2, HEADER_CZ_BLOCKING_PLAY_CANCEL, PROTOID_CZ_BLOCKING_PLAY_CANCEL, PACKET_CZ_BLOCKING_PLAY_CANCEL);
	REGV(1096, 4, HEADER_HC_CHARACTER_LIST); //TODO
	REGN(1097, 4, HEADER_ZC_HACKSH_ERROR_MSG); //TODO
	REGN(1098, 6, HEADER_CZ_CLIENT_VERSION); //TODO
	REGN(1099, 2, HEADER_CZ_CLOSE_SIMPLECASH_SHOP); //TODO
//	REG?(2000, ?, HEADER_ZC_ES_RESULT); // no-len //TODO
//	REG?(2001, ?, HEADER_CZ_ES_GET_LIST); // no-len //TODO
//	REG?(2002, ?, HEADER_ZC_ES_LIST); // no-len //TODO
//	REG?(2003, ?, HEADER_CZ_ES_CHOOSE); // no-len //TODO
//	REG?(2004, ?, HEADER_CZ_ES_CANCEL); // no-len //TODO
//	REG?(2005, ?, HEADER_ZC_ES_READY); // no-len //TODO
//	REG?(2006, ?, HEADER_ZC_ES_GOTO); // no-len //TODO
	REGN(2007, 8, HEADER_CZ_GROUPINFO_CHANGE_V2); //TODO
	REGN(2008, 8, HEADER_ZC_REQ_GROUPINFO_CHANGE_V2); //TODO
	REGN(2009, 268, HEADER_ZC_SHORTCUT_KEY_LIST_V2, PROTOID_ZC_SHORTCUT_KEY_LIST, PACKET_ZC_SHORTCUT_KEY_LIST_V2);
	REGN(2010, 6, HEADER_CZ_CHANGE_GROUP_MASTER); //TODO
	REGN(2011, 8, HEADER_ZC_HO_PAR_CHANGE); //TODO
	REGN(2012, 6, HEADER_CZ_SEEK_PARTY); //TODO
	REGN(2013, 54, HEADER_ZC_SEEK_PARTY); //TODO
	REGN(2014, 30, HEADER_CZ_SEEK_PARTY_MEMBER); //TODO
	REGN(2015, 54, HEADER_ZC_SEEK_PARTY_MEMBER); //TODO
	REGN(2016, 58, HEADER_ZC_ES_NOTI_MYINFO); //TODO
	REGN(2017, 15, HEADER_ZC_SKILLINFO_UPDATE2); //TODO
	REGN(2018, 8, HEADER_ZC_MSG_VALUE, PROTOID_ZC_MSG_VALUE, PACKET_ZC_MSG_VALUE);
	REGN(2019, 6, HEADER_ZC_ITEMLISTWIN_OPEN); //TODO
	REGV(2020, 12, HEADER_CZ_ITEMLISTWIN_RES); //TODO
	REGN(2021, 4, HEADER_CH_ENTER_CHECKBOT); //TODO
	REGN(2022, 8, HEADER_ZC_MSG_SKILL); //TODO
	REGN(2023, 32, HEADER_CH_CHECKBOT); //TODO
	REGV(2024, 4, HEADER_HC_CHECKBOT); //TODO
	REGN(2025, 5, HEADER_HC_CHECKBOT_RESULT); //TODO
	REGN(2026, 2, HEADER_CZ_BATTLE_FIELD_LIST); //TODO
	REGV(2027, 8, HEADER_ZC_BATTLE_FIELD_LIST); //TODO
	REGN(2028, 8, HEADER_CZ_JOIN_BATTLE_FIELD); //TODO
	REGN(2029, 10, HEADER_ZC_JOIN_BATTLE_FIELD); //TODO
	REGN(2030, 6, HEADER_CZ_CANCEL_BATTLE_FIELD); //TODO
	REGN(2031, 8, HEADER_ZC_CANCEL_BATTLE_FIELD); //TODO
	REGN(2032, 6, HEADER_CZ_REQ_BATTLE_STATE_MONITOR); //TODO
	REGN(2033, 18, HEADER_ZC_ACK_BATTLE_STATE_MONITOR); //TODO
	REGN(2034, 8, HEADER_ZC_BATTLE_NOTI_START_STEP); //TODO
	REGN(2035, 6, HEADER_ZC_BATTLE_JOIN_NOTI_DEFER); //TODO
	REGN(2036, 3, HEADER_ZC_BATTLE_JOIN_DISABLE_STATE); //TODO
	REGN(2037, 6, HEADER_CZ_GM_FULLSTRIP); //TODO
	REGN(2038, 14, HEADER_ZC_NOTIFY_EXP, PROTOID_ZC_NOTIFY_EXP, PACKET_ZC_NOTIFY_EXP);
	REGV(2039, 69, HEADER_ZC_NOTIFY_MOVEENTRY7); //TODO
	REGV(2040, 62, HEADER_ZC_NOTIFY_NEWENTRY5); //TODO
	REGV(2041, 63, HEADER_ZC_NOTIFY_STANDENTRY5); //TODO
	REGN(2042, 8, HEADER_ZC_DELETE_ITEM_FROM_BODY, PROTOID_ZC_ITEM_THROW_ACK, PACKET_ZC_DELETE_ITEM_FROM_BODY);
	REGN(2043, 25, HEADER_ZC_USESKILL_ACK2, PROTOID_ZC_USESKILL_ACK, PACKET_ZC_USESKILL_ACK2);
	REGN(2044, 10, HEADER_ZC_CHANGE_GROUP_MASTER); //TODO
	REGV(2045, 7, HEADER_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN); //TODO
	REGN(2046, 26, HEADER_ZC_PLAY_NPC_BGM); //TODO
//	REG?(2047, ?, HEADER_ZC_DEFINE_CHECK); // no-len //TODO
	REGV(2048, 12, HEADER_ZC_PC_PURCHASE_ITEMLIST_FROMMC2); //TODO
	REGV(2049, 12, HEADER_CZ_PC_PURCHASE_ITEMLIST_FROMMC2); //TODO
	REGN(2050, 18, HEADER_CZ_PARTY_BOOKING_REQ_REGISTER); //TODO
	REGN(2051, 4, HEADER_ZC_PARTY_BOOKING_ACK_REGISTER); //TODO
	REGN(2052, 14, HEADER_CZ_PARTY_BOOKING_REQ_SEARCH); //TODO
	REGV(2053, 5, HEADER_ZC_PARTY_BOOKING_ACK_SEARCH); //TODO
	REGN(2054, 2, HEADER_CZ_PARTY_BOOKING_REQ_DELETE); //TODO
	REGN(2055, 4, HEADER_ZC_PARTY_BOOKING_ACK_DELETE); //TODO
	REGN(2056, 14, HEADER_CZ_PARTY_BOOKING_REQ_UPDATE); //TODO
	REGN(2057, 50, HEADER_ZC_PARTY_BOOKING_NOTIFY_INSERT); //TODO
	REGN(2058, 18, HEADER_ZC_PARTY_BOOKING_NOTIFY_UPDATE); //TODO
	REGN(2059, 6, HEADER_ZC_PARTY_BOOKING_NOTIFY_DELETE); //TODO
	REGN(2060, 2, HEADER_CZ_SIMPLE_CASH_BTNSHOW); //TODO
	REGN(2061, 3, HEADER_ZC_SIMPLE_CASH_BTNSHOW); //TODO
	REGN(2062, 14, HEADER_ZC_NOTIFY_HP_TO_GROUPM_R2, PROTOID_ZC_NOTIFY_HP_TO_GROUPM, PACKET_ZC_NOTIFY_HP_TO_GROUPM_R2);
	REGN(2063, 20, HEADER_ZC_ADD_EXCHANGE_ITEM2, PROTOID_ZC_ADD_EXCHANGE_ITEM, PACKET_ZC_ADD_EXCHANGE_ITEM2);
	REGN(2064, 3, HEADER_ZC_OPEN_BUYING_STORE); //TODO
	REGV(2065, 89, HEADER_CZ_REQ_OPEN_BUYING_STORE); //TODO
	REGN(2066, 8, HEADER_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER); //TODO
	REGV(2067, 12, HEADER_ZC_MYITEMLIST_BUYING_STORE); //TODO
	REGN(2068, 86, HEADER_ZC_BUYING_STORE_ENTRY); //TODO
	REGN(2069, 2, HEADER_CZ_REQ_CLOSE_BUYING_STORE); //TODO
	REGN(2070, 6, HEADER_ZC_DISAPPEAR_BUYING_STORE_ENTRY); //TODO
	REGN(2071, 6, HEADER_CZ_REQ_CLICK_TO_BUYING_STORE); //TODO
	REGV(2072, 16, HEADER_ZC_ACK_ITEMLIST_BUYING_STORE); //TODO
	REGV(2073, 12, HEADER_CZ_REQ_TRADE_BUYING_STORE); //TODO
	REGN(2074, 4, HEADER_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER); //TODO
	REGN(2075, 10, HEADER_ZC_UPDATE_ITEM_FROM_BUYING_STORE); //TODO
	REGN(2076, 10, HEADER_ZC_ITEM_DELETE_BUYING_STORE); //TODO
	REGN(2077, 22, HEADER_ZC_EL_INIT); //TODO
	REGN(2078, 8, HEADER_ZC_EL_PAR_CHANGE); //TODO
	REGV(2079, 9, HEADER_ZC_BROADCAST4); //TODO
	REGN(2080, 11, HEADER_ZC_COSTUME_SPRITE_CHANGE); //TODO
	REGN(2081, 2, HEADER_AC_OTP_USER); //TODO
	REGN(2082, 9, HEADER_CA_OTP_AUTH_REQ); //TODO
	REGV(2083, 6, HEADER_AC_OTP_AUTH_ACK); //TODO
	REGN(2084, 6, HEADER_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER); //TODO
	REGV(2085, 65, HEADER_CA_SSO_LOGIN_REQ); //TODO
	REGN(2086, 4, HEADER_AC_SSO_LOGIN_ACK); //TODO
	REGN(2087, 6, HEADER_CH_DELETE_CHAR3_RESERVED); //TODO
	REGN(2088, 14, HEADER_HC_DELETE_CHAR3_RESERVED); //TODO
	REGN(2089, 12, HEADER_CH_DELETE_CHAR3); //TODO
	REGN(2090, 10, HEADER_HC_DELETE_CHAR3); //TODO
	REGN(2091, 6, HEADER_CH_DELETE_CHAR3_CANCEL); //TODO
	REGN(2092, 10, HEADER_HC_DELETE_CHAR3_CANCEL); //TODO
//	REGV(2093, 29, HEADER_HC_ACCEPT_ENTER2, PROTOID_HC_ACCEPT_ENTER, PACKET_HC_ACCEPT_ENTER2);
//	REG?(2094, ?, ?); // no-len // no-enum //TODO
//	REG?(2095, ?, ?); // no-len // no-enum //TODO
//	REG?(2096, ?, ?); // no-len // no-enum //TODO
//	REG?(2097, ?, ?); // no-len // no-enum //TODO
//	REG?(2098, ?, ?); // no-len // no-enum //TODO
//	REG?(2099, ?, ?); // no-len // no-enum //TODO
//	REG?(2100, ?, ?); // no-len // no-enum //TODO
	REGV(2101, 15, HEADER_CZ_SEARCH_STORE_INFO); //TODO
	REGV(2102, 7, HEADER_ZC_SEARCH_STORE_INFO_ACK); //TODO
	REGN(2103, 3, HEADER_ZC_SEARCH_STORE_INFO_FAILED); //TODO
	REGN(2104, 2, HEADER_CZ_SEARCH_STORE_INFO_NEXT_PAGE); //TODO
	REGN(2105, 66, HEADER_ZC_ACK_BAN_GUILD_SSO); //TODO
	REGN(2106, 5, HEADER_ZC_OPEN_SEARCH_STORE_INFO); //TODO
	REGN(2107, 2, HEADER_CZ_CLOSE_SEARCH_STORE_INFO); //TODO
	REGN(2108, 12, HEADER_CZ_SSILIST_ITEM_CLICK); //TODO
	REGN(2109, 6, HEADER_ZC_SSILIST_ITEM_CLICK_ACK); //TODO
	REGN(2110, 26, HEADER_AC_REFUSE_LOGIN_R2); //TODO
//	REG?(2111, ?, HEADER_ZC_SEARCH_STORE_OPEN_INFO); // no-len //TODO
	REGV(2112, 4, HEADER_HC_NOTIFY_ACCESSIBLE_MAPNAME); //TODO
	REGN(2113, 4, HEADER_CH_SELECT_ACCESSIBLE_MAPNAME); //TODO
	REGN(2114, 6, HEADER_CZ_RECALL_SSO); //TODO
	REGN(2115, 6, HEADER_CZ_REMOVE_AID_SSO); //TODO
	REGN(2116, 2, HEADER_CZ_SE_CASHSHOP_OPEN); //TODO
	REGN(2117, 6, HEADER_ZC_SE_CASHSHOP_OPEN); //TODO
	REGN(2118, 4, HEADER_CZ_REQ_SE_CASH_TAB_CODE); //TODO
	REGV(2119, 6, HEADER_ZC_ACK_SE_CASH_ITEM_LIST); //TODO
	REGV(2120, 6, HEADER_CZ_SE_PC_BUY_CASHITEM_LIST); //TODO
	REGN(2121, 12, HEADER_ZC_SE_PC_BUY_CASHITEM_RESULT); //TODO
	REGN(2122, 2, HEADER_CZ_SE_CASHSHOP_CLOSE); //TODO
	REGN(2123, 19, HEADER_ZC_ITEM_FALL_ENTRY4); //TODO
	REGN(2124, 10, HEADER_CZ_MACRO_USE_SKILL); //TODO
	REGN(2125, 10, HEADER_CZ_MACRO_USE_SKILL_TOGROUND); //TODO
	REGN(2126, 5, HEADER_CZ_MACRO_REQUEST_MOVE); //TODO
	REGN(2127, 6, HEADER_CZ_MACRO_ITEM_PICKUP); //TODO
	REGN(2128, 7, HEADER_CZ_MACRO_REQUEST_ACT); //TODO
	REGV(2129, 4, HEADER_ZC_GPK_DYNCODE); //TODO
	REGN(2130, 2, HEADER_CZ_GPK_DYNCODE_RELOAD); //TODO
	REGV(2131, 4, HEADER_ZC_GPK_AUTH); //TODO
	REGV(2132, 4, HEADER_CZ_GPK_AUTH); //TODO
	REGN(2133, 6, HEADER_ZC_MACRO_ITEMPICKUP_FAIL); //TODO
	REGV(2134, 71, HEADER_ZC_NOTIFY_MOVEENTRY8, PROTOID_ZC_NOTIFY_MOVEENTRY, PACKET_ZC_NOTIFY_MOVEENTRY8);
	REGV(2135, 65, HEADER_ZC_NOTIFY_STANDENTRY7, PROTOID_ZC_NOTIFY_STANDENTRY, PACKET_ZC_NOTIFY_STANDENTRY7);
	REGV(2136, 64, HEADER_ZC_NOTIFY_NEWENTRY6, PROTOID_ZC_NOTIFY_NEWENTRY, PACKET_ZC_NOTIFY_NEWENTRY6);
	REGV(2137, 45, HEADER_ZC_EQUIPWIN_MICROSCOPE2, PROTOID_ZC_EQUIPWIN_MICROSCOPE, PACKET_ZC_EQUIPWIN_MICROSCOPE2);
//	REGN(2138, 2, HEADER_ZC_REASSEMBLY_AUTH01); //TODO
//	REGN(2139, 2, HEADER_ZC_REASSEMBLY_AUTH02); //TODO
//	REGN(2140, 2, HEADER_ZC_REASSEMBLY_AUTH03); //TODO
//	REGN(2141, 2, HEADER_ZC_REASSEMBLY_AUTH04); //TODO
//	REGN(2142, 2, HEADER_ZC_REASSEMBLY_AUTH05); //TODO
//	REGN(2143, 2, HEADER_ZC_REASSEMBLY_AUTH06); //TODO
//	REGN(2144, 2, HEADER_ZC_REASSEMBLY_AUTH07); //TODO
//	REGN(2145, 2, HEADER_ZC_REASSEMBLY_AUTH08); //TODO
//	REGN(2146, 2, HEADER_ZC_REASSEMBLY_AUTH09); //TODO
//	REGN(2147, 2, HEADER_ZC_REASSEMBLY_AUTH10); //TODO
//	REGN(2148, 2, HEADER_ZC_REASSEMBLY_AUTH11); //TODO
//	REGN(2149, 2, HEADER_ZC_REASSEMBLY_AUTH12); //TODO
//	REGN(2150, 2, HEADER_ZC_REASSEMBLY_AUTH13); //TODO
//	REGN(2151, 2, HEADER_ZC_REASSEMBLY_AUTH14); //TODO
//	REGN(2152, 2, HEADER_ZC_REASSEMBLY_AUTH15); //TODO
//	REGN(2153, 2, HEADER_ZC_REASSEMBLY_AUTH16); //TODO
//	REGN(2154, 2, HEADER_ZC_REASSEMBLY_AUTH17); //TODO
//	REGN(2155, 2, HEADER_ZC_REASSEMBLY_AUTH18); //TODO
//	REGN(2156, 2, HEADER_ZC_REASSEMBLY_AUTH19); //TODO
//	REGN(2157, 2, HEADER_ZC_REASSEMBLY_AUTH20); //TODO
//	REGN(2158, 2, HEADER_ZC_REASSEMBLY_AUTH21); //TODO
//	REGN(2159, 2, HEADER_ZC_REASSEMBLY_AUTH22); //TODO
//	REGN(2160, 2, HEADER_ZC_REASSEMBLY_AUTH23); //TODO
//	REGN(2161, 2, HEADER_ZC_REASSEMBLY_AUTH24); //TODO
//	REGN(2162, 2, HEADER_ZC_REASSEMBLY_AUTH25); //TODO
//	REGN(2163, 2, HEADER_ZC_REASSEMBLY_AUTH26); //TODO
//	REGN(2164, 2, HEADER_ZC_REASSEMBLY_AUTH27); //TODO
//	REGN(2165, 2, HEADER_ZC_REASSEMBLY_AUTH28); //TODO
//	REGN(2166, 2, HEADER_ZC_REASSEMBLY_AUTH29); //TODO
//	REGN(2167, 2, HEADER_ZC_REASSEMBLY_AUTH30); //TODO
//	REGN(2168, 2, HEADER_ZC_REASSEMBLY_AUTH31); //TODO
//	REGN(2169, 2, HEADER_ZC_REASSEMBLY_AUTH32); //TODO
//	REGN(2170, 2, HEADER_ZC_REASSEMBLY_AUTH33); //TODO
//	REGN(2171, 2, HEADER_ZC_REASSEMBLY_AUTH34); //TODO
//	REGN(2172, 2, HEADER_ZC_REASSEMBLY_AUTH35); //TODO
//	REGN(2173, 2, HEADER_ZC_REASSEMBLY_AUTH36); //TODO
//	REGN(2174, 2, HEADER_ZC_REASSEMBLY_AUTH37); //TODO
//	REGN(2175, 2, HEADER_ZC_REASSEMBLY_AUTH38); //TODO
//	REGN(2176, 2, HEADER_ZC_REASSEMBLY_AUTH39); //TODO
//	REGN(2177, 2, HEADER_ZC_REASSEMBLY_AUTH40); //TODO
//	REGN(2178, 2, HEADER_ZC_REASSEMBLY_AUTH41); //TODO
//	REGN(2179, 2, HEADER_ZC_REASSEMBLY_AUTH42); //TODO
//	REGN(2180, 2, HEADER_CZ_REASSEMBLY_AUTH01); //TODO
//	REGN(2181, 2, HEADER_CZ_REASSEMBLY_AUTH02); //TODO
//	REGN(2182, 2, HEADER_CZ_REASSEMBLY_AUTH03); //TODO
//	REGN(2183, 2, HEADER_CZ_REASSEMBLY_AUTH04); //TODO
//	REGN(2184, 2, HEADER_CZ_REASSEMBLY_AUTH05); //TODO
//	REGN(2185, 2, HEADER_CZ_REASSEMBLY_AUTH06); //TODO
//	REGN(2186, 2, HEADER_CZ_REASSEMBLY_AUTH07); //TODO
//	REGN(2187, 2, HEADER_CZ_REASSEMBLY_AUTH08); //TODO
//	REGN(2188, 2, HEADER_CZ_REASSEMBLY_AUTH09); //TODO
//	REGN(2189, 2, HEADER_CZ_REASSEMBLY_AUTH10); //TODO
//	REGN(2190, 2, HEADER_CZ_REASSEMBLY_AUTH11); //TODO
//	REGN(2191, 2, HEADER_CZ_REASSEMBLY_AUTH12); //TODO
//	REGN(2192, 2, HEADER_CZ_REASSEMBLY_AUTH13); //TODO
//	REGN(2193, 2, HEADER_CZ_REASSEMBLY_AUTH14); //TODO
//	REGN(2194, 2, HEADER_CZ_REASSEMBLY_AUTH15); //TODO
//	REGN(2195, 2, HEADER_CZ_REASSEMBLY_AUTH16); //TODO
//	REGN(2196, 2, HEADER_CZ_REASSEMBLY_AUTH17); //TODO
//	REGN(2197, 2, HEADER_CZ_REASSEMBLY_AUTH18); //TODO
//	REGN(2198, 2, HEADER_CZ_REASSEMBLY_AUTH19); //TODO
//	REGN(2199, 2, HEADER_CZ_REASSEMBLY_AUTH20); //TODO
//	REGN(2200, 2, HEADER_CZ_REASSEMBLY_AUTH21); //TODO
//	REGN(2201, 2, HEADER_CZ_REASSEMBLY_AUTH22); //TODO
//	REGN(2202, 2, HEADER_CZ_REASSEMBLY_AUTH23); //TODO
//	REGN(2203, 2, HEADER_CZ_REASSEMBLY_AUTH24); //TODO
//	REGN(2204, 2, HEADER_CZ_REASSEMBLY_AUTH25); //TODO
//	REGN(2205, 2, HEADER_CZ_REASSEMBLY_AUTH26); //TODO
//	REGN(2206, 2, HEADER_CZ_REASSEMBLY_AUTH27); //TODO
//	REGN(2207, 2, HEADER_CZ_REASSEMBLY_AUTH28); //TODO
//	REGN(2208, 2, HEADER_CZ_REASSEMBLY_AUTH29); //TODO
//	REGN(2209, 2, HEADER_CZ_REASSEMBLY_AUTH30); //TODO
//	REGN(2210, 2, HEADER_CZ_REASSEMBLY_AUTH31); //TODO
//	REGN(2211, 2, HEADER_CZ_REASSEMBLY_AUTH32); //TODO
//	REGN(2212, 2, HEADER_CZ_REASSEMBLY_AUTH33); //TODO
//	REGN(2213, 2, HEADER_CZ_REASSEMBLY_AUTH34); //TODO
//	REGN(2214, 2, HEADER_CZ_REASSEMBLY_AUTH35); //TODO
//	REGN(2215, 2, HEADER_CZ_REASSEMBLY_AUTH36); //TODO
//	REGN(2216, 2, HEADER_CZ_REASSEMBLY_AUTH37); //TODO
//	REGN(2217, 2, HEADER_CZ_REASSEMBLY_AUTH38); //TODO
//	REGN(2218, 2, HEADER_CZ_REASSEMBLY_AUTH39); //TODO
//	REGN(2219, 2, HEADER_CZ_REASSEMBLY_AUTH40); //TODO
//	REGN(2220, 2, HEADER_CZ_REASSEMBLY_AUTH41); //TODO
//	REGN(2221, 2, HEADER_CZ_REASSEMBLY_AUTH42); //TODO
//	REG?(2222, ?, HEADER_CC_REPLAYPACKET); // no-len //TODO
	REGN(2223, 10, HEADER_HC_WAITING_LOGIN); //TODO
	REGN(2224, 17, HEADER_CH_WAITING_LOGIN); //TODO
	REGV(2225, 4, HEADER_ZC_MCSTORE_NOTMOVEITEM_LIST); //TODO
	REGV(2226, 6, HEADER_AC_REALNAME_AUTH); //TODO
	REGV(2227, 8, HEADER_ZC_SHOWSCRIPT); //TODO
	REGN(2228, 2, HEADER_ZC_START_COLLECTION); //TODO
	REGN(2229, 6, HEADER_CZ_TRYCOLLECTION); //TODO
	REGN(2230, 3, HEADER_ZC_TRYCOLLECTION); //TODO
//	REG?(2231, ?, HEADER_HC_SECOND_PASSWD_REQ); // no-len //TODO
	REGN(2232, 10, HEADER_CH_SECOND_PASSWD_ACK); //TODO
	REGN(2233, 12, HEADER_HC_SECOND_PASSWD_LOGIN); //TODO
	REGN(2234, 10, HEADER_CH_MAKE_SECOND_PASSWD); //TODO
	REGN(2235, 8, HEADER_HC_MAKE_SECOND_PASSWD); //TODO
	REGN(2236, 10, HEADER_CH_DELETE_SECOND_PASSWD); //TODO
	REGN(2237, 8, HEADER_HC_DELETE_SECOND_PASSWD); //TODO
	REGN(2238, 14, HEADER_CH_EDIT_SECOND_PASSWD); //TODO
	REGN(2239, 8, HEADER_HC_EDIT_SECOND_PASSWD); //TODO
	REGV(2240, 10, HEADER_ZC_ACK_SE_CASH_ITEM_LIST2); //TODO
	REGN(2241, 2, HEADER_CZ_MACRO_START); //TODO
	REGN(2242, 2, HEADER_CZ_MACRO_STOP); //TODO
	REGN(2243, 10, HEADER_CH_NOT_AVAILABLE_SECOND_PASSWD); //TODO
	REGN(2244, 8, HEADER_HC_NOT_AVAILABLE_SECOND_PASSWD); //TODO
	REGN(2245, 6, HEADER_CH_AVAILABLE_SECOND_PASSWD); //TODO
	REGN(2246, 4, HEADER_HC_AVAILABLE_SECOND_PASSWD); //TODO
	REGV(2247, 19, HEADER_ZC_SKILL_ENTRY3, PROTOID_ZC_SKILL_ENTRY, PACKET_ZC_SKILL_ENTRY3);
//	REGN(2248, 34, HEADER_ZC_NOTIFY_ACT3, PROTOID_ZC_NOTIFY_ACT, PACKET_ZC_NOTIFY_ACT3);
	REGN(2249, 2, HEADER_CZ_REQ_SCHEDULER_CASHITEM, PROTOID_CZ_REQ_SCHEDULER_CASHITEM, PACKET_CZ_REQ_SCHEDULER_CASHITEM);
	REGV(2250, 8, HEADER_ZC_ACK_SCHEDULER_CASHITEM, PROTOID_ZC_ACK_SCHEDULER_CASHITEM, PACKET_ZC_ACK_SCHEDULER_CASHITEM);
	REGV(2251, 10, HEADER_ZC_PERSONAL_INFOMATION); //TODO
	REGN(2252, 109, HEADER_CA_LOGIN5); //TODO
	REGN(2253, 10, HEADER_ZC_STOPMOVE_FORCE); //TODO
	REGN(2254, 2, HEADER_ZC_FAILED_GET_ITEM_FROM_ZONEDA); //TODO
	REGN(2255, 10, HEADER_ZC_SPIRITS_ATTRIBUTE); //TODO
	REGN(2256, 9, HEADER_ZC_REQ_WEAR_EQUIP_ACK2); //TODO
	REGN(2257, 7, HEADER_ZC_REQ_TAKEOFF_EQUIP_ACK2); //TODO
	REGN(2258, 10, HEADER_ZC_FASTMOVE); //TODO
	REGN(2259, 10, HEADER_ZC_SE_CASHSHOP_UPDATE); //TODO
	REGN(2260, 8, HEADER_CH_REQ_CHANGE_CHARACTER_SLOT); //TODO
	REGV(2261, 8, HEADER_HC_ACK_CHANGE_CHARACTER_SLOT); //TODO
	REGN(2262, 6, HEADER_ZC_CLEAR_DIALOG); //TODO
	REGN(2263, 28, HEADER_CZ_REQ_ENTRY_QUEUE_APPLY); //TODO
	REGN(2264, 27, HEADER_ZC_ACK_ENTRY_QUEUE_APPLY); //TODO
	REGN(2265, 30, HEADER_ZC_NOTIFY_ENTRY_QUEUE_APPLY); //TODO
	REGN(2266, 26, HEADER_CZ_REQ_ENTRY_QUEUE_CANCEL); //TODO
	REGN(2267, 27, HEADER_ZC_ACK_ENTRY_QUEUE_CANCEL); //TODO
	REGN(2268, 26, HEADER_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION); //TODO
	REGN(2269, 27, HEADER_CZ_REPLY_ENTRY_QUEUE_ADMISSION); //TODO
	REGN(2270, 27, HEADER_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION); //TODO
	REGN(2271, 50, HEADER_ZC_NOTIFY_LOBBY_ADMISSION); //TODO
	REGN(2272, 51, HEADER_CZ_REPLY_LOBBY_ADMISSION); //TODO
	REGN(2273, 51, HEADER_ZC_REPLY_ACK_LOBBY_ADMISSION); //TODO
	REGN(2274, 27, HEADER_ZC_NAVIGATION_ACTIVE); //TODO
	REGN(2275, 118, HEADER_HC_UPDATE_CHARINFO); //TODO
	REGN(2276, 6, HEADER_AC_SHUTDOWN_INFO); //TODO
//	REG?(2277, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REQ_REGISTER); // no-len //TODO
//	REG?(2278, ?, XXX_HEADER_ZC_PARTY_RECRUIT_ACK_REGISTER); // no-len //TODO
//	REG?(2279, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REQ_SEARCH); // no-len //TODO
//	REG?(2280, ?, XXX_HEADER_ZC_PARTY_RECRUIT_ACK_SEARCH); // no-len //TODO
//	REG?(2281, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REQ_DELETE); // no-len //TODO
//	REG?(2282, ?, XXX_HEADER_ZC_PARTY_RECRUIT_ACK_DELETE); // no-len //TODO
//	REG?(2283, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REQ_UPDATE); // no-len //TODO
//	REG?(2284, ?, XXX_HEADER_ZC_PARTY_RECRUIT_NOTIFY_INSERT); // no-len //TODO
//	REG?(2285, ?, XXX_HEADER_ZC_PARTY_RECRUIT_NOTIFY_UPDATE); // no-len //TODO
//	REG?(2286, ?, XXX_HEADER_ZC_PARTY_RECRUIT_NOTIFY_DELETE); // no-len //TODO
//	REG?(2287, ?, XXX_HEADER_CZ_PARTY_RECRUIT_ADD_FILTERLINGLIST); // no-len //TODO
//	REG?(2288, ?, XXX_HEADER_CZ_PARTY_RECRUIT_SUB_FILTERLINGLIST); // no-len //TODO
//	REG?(2289, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REQ_VOLUNTEER); // no-len //TODO
//	REG?(2290, ?, XXX_HEADER_ZC_PARTY_RECRUIT_VOLUNTEER_INFO); // no-len //TODO
//	REG?(2291, ?, XXX_HEADER_ZC_PARTY_RECRUIT_PERSONAL_SETTING); // no-len //TODO
//	REG?(2292, ?, XXX_HEADER_CZ_PARTY_RECRUIT_SHOW_EQUIPMENT); // no-len //TODO
//	REG?(2293, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REQ_RECALL); // no-len //TODO
//	REG?(2294, ?, XXX_HEADER_ZC_PARTY_RECRUIT_RECALL_COST); // no-len //TODO
//	REG?(2295, ?, XXX_HEADER_CZ_PARTY_RECRUIT_ACK_RECALL); // no-len //TODO
//	REG?(2296, ?, XXX_HEADER_ZC_PARTY_RECRUIT_FAILED_RECALL); // no-len //TODO
//	REG?(2297, ?, XXX_HEADER_CZ_PARTY_RECRUIT_REFUSE_VOLUNTEER); // no-len //TODO
//	REG?(2298, ?, XXX_HEADER_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER); // no-len //TODO
//	REG?(2299, ?, XXX_HEADER_CZ_PARTY_RECRUIT_CANCEL_VOLUNTEER); // no-len //TODO
	REGN(2300, 30, HEADER_CH_REQ_CHANGE_CHARACTERNAME); //TODO
	REGN(2301, 6, HEADER_CH_ACK_CHANGE_CHARACTERNAME); //TODO
	REGV(2302, 4, HEADER_ZC_HUNTING_QUEST_INFO); //TODO
	REGN(2303, 24, HEADER_ZC_EFST_SET_ENTER); //TODO
	REGV(2304, 4, HEADER_ZC_INVENTORY_ITEMLIST_NORMAL); //TODO
	REGV(2305, 4, HEADER_ZC_INVENTORY_ITEMLIST_EQUIP); //TODO
//	REGV(2306, 4, HEADER_ZC_CART_ITEMLIST_NORMAL, PROTOID_ZC_CART_NORMAL_ITEMLIST, PACKET_ZC_CART_ITEMLIST_NORMAL);
	REGV(2307, 4, HEADER_ZC_CART_ITEMLIST_EQUIP); //TODO
	REGV(2308, 4, HEADER_ZC_STORE_ITEMLIST_NORMAL); //TODO
	REGV(2309, 4, HEADER_ZC_STORE_ITEMLIST_EQUIP); //TODO
	REGV(2310, 45, HEADER_ZC_MICROSCOPE); //TODO
	REGN(2311, 5, HEADER_CZ_INVENTORY_TAB, PROTOID_CZ_INVENTORY_TAB, PACKET_CZ_INVENTORY_TAB);
	REGN(2312, 5, HEADER_ZC_INVENTORY_TAB, PROTOID_ZC_INVENTORY_TAB, PACKET_ZC_INVENTORY_TAB);
//	REG?(2313, ?, XXX_HEADER_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER); // no-len //TODO
	REGN(2314, 26, HEADER_CZ_REQ_ENTRY_QUEUE_RANKING); //TODO
//	REG?(2315, ?, XXX_HEADER_ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST); // no-len //TODO
//	REG?(2316, ?, XXX_HEADER_ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST); // no-len //TODO
	REGV(2317, 10, HEADER_ZC_PREMIUM_CAMPAIGN_INFO); //TODO
	REGN(2318, 2, HEADER_ZC_ENTRY_QUEUE_INIT); //TODO
	REGV(2319, 73, HEADER_ZC_NOTIFY_NEWENTRY7); //TODO
	REGN(2320, 10, HEADER_CZ_REQ_PARTY_NAME); //TODO
	REGN(2321, 30, HEADER_ZC_ACK_PARTY_NAME); //TODO
	REGN(2322, 10, HEADER_CZ_REQ_GUILD_NAME); //TODO
	REGN(2323, 30, HEADER_ZC_ACK_GUILD_NAME); //TODO
	REGV(2324, 80, HEADER_ZC_NOTIFY_MOVEENTRY9); //TODO
	REGV(2325, 74, HEADER_ZC_NOTIFY_STANDENTRY8); //TODO
	REGN(2326, 26, HEADER_CZ_REQ_JOIN_GUILD2); //TODO
//	REGN(2327, 2, HEADER_ZC_REASSEMBLY_AUTH43); //TODO
//	REGN(2328, 2, HEADER_ZC_REASSEMBLY_AUTH44); //TODO
//	REGN(2329, 2, HEADER_ZC_REASSEMBLY_AUTH45); //TODO
//	REGN(2330, 2, HEADER_ZC_REASSEMBLY_AUTH46); //TODO
//	REGN(2331, 2, HEADER_ZC_REASSEMBLY_AUTH47); //TODO
//	REGN(2332, 2, HEADER_ZC_REASSEMBLY_AUTH48); //TODO
//	REGN(2333, 2, HEADER_ZC_REASSEMBLY_AUTH49); //TODO
//	REGN(2334, 2, HEADER_ZC_REASSEMBLY_AUTH50); //TODO
//	REGN(2335, 2, HEADER_ZC_REASSEMBLY_AUTH51); //TODO
//	REGN(2336, 2, HEADER_ZC_REASSEMBLY_AUTH52); //TODO
//	REGN(2337, 2, HEADER_ZC_REASSEMBLY_AUTH53); //TODO
//	REGN(2338, 2, HEADER_ZC_REASSEMBLY_AUTH54); //TODO
//	REGN(2339, 2, HEADER_ZC_REASSEMBLY_AUTH55); //TODO
//	REGN(2340, 2, HEADER_ZC_REASSEMBLY_AUTH56); //TODO
//	REGN(2341, 2, HEADER_ZC_REASSEMBLY_AUTH57); //TODO
//	REGN(2342, 2, HEADER_ZC_REASSEMBLY_AUTH58); //TODO
//	REGN(2343, 2, HEADER_ZC_REASSEMBLY_AUTH59); //TODO
//	REGN(2344, 2, HEADER_ZC_REASSEMBLY_AUTH60); //TODO
//	REGN(2345, 2, HEADER_ZC_REASSEMBLY_AUTH61); //TODO
//	REGN(2346, 2, HEADER_ZC_REASSEMBLY_AUTH62); //TODO
//	REGN(2347, 2, HEADER_ZC_REASSEMBLY_AUTH63); //TODO
//	REGN(2348, 2, HEADER_ZC_REASSEMBLY_AUTH64); //TODO
//	REGN(2349, 2, HEADER_ZC_REASSEMBLY_AUTH65); //TODO
//	REGN(2350, 2, HEADER_ZC_REASSEMBLY_AUTH66); //TODO
//	REGN(2351, 2, HEADER_ZC_REASSEMBLY_AUTH67); //TODO
//	REGN(2352, 2, HEADER_ZC_REASSEMBLY_AUTH68); //TODO
//	REGN(2353, 2, HEADER_ZC_REASSEMBLY_AUTH69); //TODO
//	REGN(2354, 2, HEADER_ZC_REASSEMBLY_AUTH70); //TODO
//	REGN(2355, 2, HEADER_ZC_REASSEMBLY_AUTH71); //TODO
//	REGN(2356, 2, HEADER_ZC_REASSEMBLY_AUTH72); //TODO
//	REGN(2357, 2, HEADER_ZC_REASSEMBLY_AUTH73); //TODO
//	REGN(2358, 2, HEADER_ZC_REASSEMBLY_AUTH74); //TODO
//	REGN(2359, 2, HEADER_ZC_REASSEMBLY_AUTH75); //TODO
//	REGN(2360, 2, HEADER_ZC_REASSEMBLY_AUTH76); //TODO
//	REGN(2361, 2, HEADER_ZC_REASSEMBLY_AUTH77); //TODO
//	REGN(2362, 2, HEADER_ZC_REASSEMBLY_AUTH78); //TODO
//	REGN(2363, 2, HEADER_ZC_REASSEMBLY_AUTH79); //TODO
//	REGN(2364, 2, HEADER_ZC_REASSEMBLY_AUTH80); //TODO
//	REGN(2365, 2, HEADER_ZC_REASSEMBLY_AUTH81); //TODO
//	REGN(2366, 2, HEADER_ZC_REASSEMBLY_AUTH82); //TODO
//	REGN(2367, 2, HEADER_ZC_REASSEMBLY_AUTH83); //TODO
//	REGN(2368, 2, HEADER_ZC_REASSEMBLY_AUTH84); //TODO
//	REGN(2369, 2, HEADER_CZ_REASSEMBLY_AUTH43); //TODO
//	REGN(2370, 2, HEADER_CZ_REASSEMBLY_AUTH44); //TODO
//	REGN(2371, 2, HEADER_CZ_REASSEMBLY_AUTH45); //TODO
//	REGN(2372, 2, HEADER_CZ_REASSEMBLY_AUTH46); //TODO
//	REGN(2373, 2, HEADER_CZ_REASSEMBLY_AUTH47); //TODO
//	REGN(2374, 2, HEADER_CZ_REASSEMBLY_AUTH48); //TODO
//	REGN(2375, 2, HEADER_CZ_REASSEMBLY_AUTH49); //TODO
//	REGN(2376, 2, HEADER_CZ_REASSEMBLY_AUTH50); //TODO
//	REGN(2377, 2, HEADER_CZ_REASSEMBLY_AUTH51); //TODO
//	REGN(2378, 2, HEADER_CZ_REASSEMBLY_AUTH52); //TODO
//	REGN(2379, 2, HEADER_CZ_REASSEMBLY_AUTH53); //TODO
//	REGN(2380, 2, HEADER_CZ_REASSEMBLY_AUTH54); //TODO
//	REGN(2381, 2, HEADER_CZ_REASSEMBLY_AUTH55); //TODO
//	REGN(2382, 2, HEADER_CZ_REASSEMBLY_AUTH56); //TODO
//	REGN(2383, 2, HEADER_CZ_REASSEMBLY_AUTH57); //TODO
//	REGN(2384, 2, HEADER_CZ_REASSEMBLY_AUTH58); //TODO
//	REGN(2385, 2, HEADER_CZ_REASSEMBLY_AUTH59); //TODO
//	REGN(2386, 2, HEADER_CZ_REASSEMBLY_AUTH60); //TODO
//	REGN(2387, 2, HEADER_CZ_REASSEMBLY_AUTH61); //TODO
//	REGN(2388, 2, HEADER_CZ_REASSEMBLY_AUTH62); //TODO
//	REGN(2389, 2, HEADER_CZ_REASSEMBLY_AUTH63); //TODO
//	REGN(2390, 2, HEADER_CZ_REASSEMBLY_AUTH64); //TODO
//	REGN(2391, 2, HEADER_CZ_REASSEMBLY_AUTH65); //TODO
//	REGN(2392, 2, HEADER_CZ_REASSEMBLY_AUTH66); //TODO
//	REGN(2393, 2, HEADER_CZ_REASSEMBLY_AUTH67); //TODO
//	REGN(2394, 2, HEADER_CZ_REASSEMBLY_AUTH68); //TODO
//	REGN(2395, 2, HEADER_CZ_REASSEMBLY_AUTH69); //TODO
//	REGN(2396, 2, HEADER_CZ_REASSEMBLY_AUTH70); //TODO
//	REGN(2397, 2, HEADER_CZ_REASSEMBLY_AUTH71); //TODO
//	REGN(2398, 2, HEADER_CZ_REASSEMBLY_AUTH72); //TODO
//	REGN(2399, 2, HEADER_CZ_REASSEMBLY_AUTH73); //TODO
//	REGN(2400, 2, HEADER_CZ_REASSEMBLY_AUTH74); //TODO
//	REGN(2401, 2, HEADER_CZ_REASSEMBLY_AUTH75); //TODO
//	REGN(2402, 2, HEADER_CZ_REASSEMBLY_AUTH76); //TODO
//	REGN(2403, 2, HEADER_CZ_REASSEMBLY_AUTH77); //TODO
//	REGN(2404, 2, HEADER_CZ_REASSEMBLY_AUTH78); //TODO
//	REGN(2405, 2, HEADER_CZ_REASSEMBLY_AUTH79); //TODO
//	REGN(2406, 2, HEADER_CZ_REASSEMBLY_AUTH80); //TODO
//	REGN(2407, 2, HEADER_CZ_REASSEMBLY_AUTH81); //TODO
//	REGN(2408, 2, HEADER_CZ_REASSEMBLY_AUTH82); //TODO
//	REGN(2409, 2, HEADER_CZ_REASSEMBLY_AUTH83); //TODO
//	REGN(2410, 2, HEADER_CZ_REASSEMBLY_AUTH84); //TODO
	REGN(2411, 4, HEADER_ZC_PRNPC_STATE); //TODO
	REGN(2412, 6, HEADER_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM); //TODO
	REGV(2413, 4, HEADER_ZC_MERGE_ITEM_OPEN); //TODO
	REGV(2414, 4, HEADER_CZ_REQ_MERGE_ITEM); //TODO
	REGN(2415, 7, HEADER_ZC_ACK_MERGE_ITEM); //TODO
	REGN(2416, 31, HEADER_CH_MAKE_CHAR_NOT_STATS); //TODO
	REGN(2417, 6, HEADER_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM); //TODO
	REGV(2418, 9, HEADER_ZC_SAY_DIALOG2); //TODO
	REGN(2419, 7, HEADER_ZC_WAIT_DIALOG2); //TODO
	REGN(2420, 2, HEADER_CZ_CANCEL_MERGE_ITEM); //TODO
	REGV(2421, 28, HEADER_ZC_STORE_ITEMLIST_NORMAL_V2); //TODO
	REGV(2422, 28, HEADER_ZC_STORE_ITEMLIST_EQUIP_V2); //TODO
	REGN(2423, 14, HEADER_ZC_HP_INFO); //TODO
	REGN(2424, 6, HEADER_CZ_REQ_BEFORE_WORLD_INFO); //TODO
	REGN(2425, 50, HEADER_ZC_ACK_BEFORE_WORLD_INFO); //TODO
	REGV(2426, 8, HEADER_ZC_ALL_QUEST_LIST2); //TODO
	REGV(2427, 16, HEADER_ZC_PERSONAL_INFOMATION2); //TODO
	REGN(2428, 4, HEADER_CZ_REQ_RANKING); //TODO
	REGN(2429, 288, HEADER_ZC_ACK_RANKING); //TODO
	REGN(2430, 12, HEADER_ZC_UPDATE_RANKING_POINT); //TODO
	REGV(2431, 8, HEADER_ZC_SELECTCART); //TODO
	REGN(2432, 7, HEADER_CZ_SELECTCART); //TODO
	REGV(2433, 12, HEADER_ZC_PERSONAL_INFOMATION_CHN); //TODO
	REGN(2434, 7, HEADER_ZC_FATIGUE_CHN); //TODO
	REGN(2435, 29, HEADER_ZC_MSG_STATE_CHANGE3); //TODO
	REGN(2436, 28, HEADER_ZC_EFST_SET_ENTER2); //TODO
	REGV(2437, 4, HEADER_ZC_SKILL_POSTDELAY_LIST2); //TODO
	REGN(2438, 10, HEADER_AC_SHUTDOWN_NOTIFY); //TODO
	REGV(2439, 41, HEADER_CA_LOGIN_CHN); //TODO
	REGN(2440, 6, HEADER_ZC_NOTIFY_CLAN_CONNECTINFO); //TODO
	REGN(2441, 2, HEADER_ZC_ACK_CLAN_LEAVE); //TODO
	REGV(2442, 74, HEADER_ZC_CLANINFO); //TODO
	REGN(2443, 2, HEADER_AC_REQ_NEW_USER); //TODO
	REGN(2444, 4, HEADER_CA_ACK_NEW_USER); //TODO
	REGV(2445, 4, HEADER_CZ_CLAN_CHAT); //TODO
	REGV(2446, 28, HEADER_ZC_NOTIFY_CLAN_CHAT); //TODO
	REGV(2447, 8, HEADER_CH_DELETE_CHAR3_EXT); //TODO
//	REGN(2448, 31, HEADER_ZC_ITEM_PICKUP_ACK_V5); //TODO
	REGV(2449, 4, HEADER_ZC_INVENTORY_ITEMLIST_NORMAL_V5); //TODO
	REGV(2450, 4, HEADER_ZC_INVENTORY_ITEMLIST_EQUIP_V5); //TODO
	REGV(2451, 4, HEADER_ZC_CART_ITEMLIST_NORMAL_V5); //TODO
	REGV(2452, 4, HEADER_ZC_CART_ITEMLIST_EQUIP_V5); //TODO
	REGV(2453, 28, HEADER_ZC_STORE_ITEMLIST_NORMAL_V5); //TODO
	REGV(2454, 28, HEADER_ZC_STORE_ITEMLIST_EQUIP_V5); //TODO
	REGV(2455, 45, HEADER_ZC_EQUIPWIN_MICROSCOPE_V5); //TODO
	REGN(2456, 8, HEADER_CZ_REQ_WEAR_EQUIP_V5); //TODO
	REGN(2457, 11, HEADER_ZC_ACK_WEAR_EQUIP_V5); //TODO
	REGN(2458, 9, HEADER_ZC_ACK_TAKEOFF_EQUIP_V5); //TODO
	REGN(2459, 8, HEADER_ZC_MAPPROPERTY_R2); //TODO
	REGN(2460, 6, HEADER_CH_REQ_CHARINFO_PER_PAGE); //TODO
	REGV(2461, 4, HEADER_HC_ACK_CHARINFO_PER_PAGE); //TODO
	REGN(2462, 12, HEADER_HC_QUEUE_ORDER); //TODO
	REGV(2463, 22, HEADER_ZC_SKILL_ENTRY4); //TODO
	REGN(2464, 6, HEADER_HC_CHARLIST_NOTIFY); //TODO
	REGN(2465, 2, HEADER_CH_CHARLIST_REQ); //TODO
	REGN(2466, 6, HEADER_AC_REQ_MOBILE_OTP); //TODO
	REGV(2467, 8, HEADER_CA_ACK_MOBILE_OTP); //TODO
	REGN(2468, 18, HEADER_ZC_DISPATCH_TIMING_INFO_CHN); //TODO
	REGN(2469, 7, HEADER_AC_REFUSE_LOGIN3); //TODO
	REGN(2470, 12, HEADER_ZC_BANKING_CHECK); //TODO
	REGN(2471, 10, HEADER_CZ_REQ_BANKING_DEPOSIT); //TODO
	REGN(2472, 16, HEADER_ZC_ACK_BANKING_DEPOSIT); //TODO
	REGN(2473, 10, HEADER_CZ_REQ_BANKING_WITHDRAW); //TODO
	REGN(2474, 16, HEADER_ZC_ACK_BANKING_WITHDRAW); //TODO
	REGN(2475, 6, HEADER_CZ_REQ_BANKING_CHECK); //TODO
	REGV(2476, 8, HEADER_CZ_REQ_CASH_BARGAIN_SALE_ITEM_INFO); //TODO
	REGN(2477, 10, HEADER_ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO); //TODO
	REGN(2478, 17, HEADER_CZ_REQ_APPLY_BARGAIN_SALE_ITEM); //TODO
	REGN(2479, 4, HEADER_ZC_ACK_APPLY_BARGAIN_SALE_ITEM); //TODO
	REGN(2480, 8, HEADER_CZ_REQ_REMOVE_BARGAIN_SALE_ITEM); //TODO
	REGN(2481, 4, HEADER_ZC_ACK_REMOVE_BARGAIN_SALE_ITEM); //TODO
	REGN(2482, 8, HEADER_ZC_NOTIFY_BARGAIN_SALE_SELLING); //TODO
	REGN(2483, 4, HEADER_ZC_NOTIFY_BARGAIN_SALE_CLOSE); //TODO
	REGN(2484, 6, HEADER_CZ_OPEN_BARGAIN_SALE_TOOL); //TODO
	REGN(2485, 2, HEADER_ZC_OPEN_BARGAIN_SALE_TOOL); //TODO
	REGN(2486, 6, HEADER_CZ_REQ_OPEN_BANKING); //TODO
	REGN(2487, 4, HEADER_ZC_ACK_OPEN_BANKING); //TODO
	REGN(2488, 6, HEADER_CZ_REQ_CLOSE_BANKING); //TODO
	REGN(2489, 4, HEADER_ZC_ACK_CLOSE_BANKING); //TODO
	REGN(2490, 2, HEADER_CZ_REQ_OPEN_GUILD_STORAGE); //TODO
	REGN(2491, 6, HEADER_ZC_ACK_OPEN_GUILD_STORAGE); //TODO
	REGN(2492, 6, HEADER_CZ_CLOSE_BARGAIN_SALE_TOOL); //TODO
	REGN(2493, 2, HEADER_ZC_CLOSE_BARGAIN_SALE_TOOL); //TODO
	REGN(2494, 2, HEADER_CZ_REQ_CLOSE_GUILD_STORAGE); //TODO
	REGN(2495, 4, HEADER_ZC_ACK_CLOSE_GUILD_STORAGE); //TODO
//	REG?(2496, ?, HEADER_ZC_ACTION_MOVE); // no-len //TODO
	REGN(2497, 10, HEADER_ZC_C_MARKERINFO); //TODO
	REGV(2498, 4, HEADER_HC_SECRETSCAN_DATA); //TODO
	REGN(2499, 8, HEADER_CZ_REQ_COUNT_BARGAIN_SALE_ITEM); //TODO
	REGN(2500, 8, HEADER_ZC_ACK_COUNT_BARGAIN_SALE_ITEM); //TODO
	REGN(2501, 1042, HEADER_CS_LOGIN_QUERY); //TODO
	REGV(2502, 16, HEADER_SC_LOGIN_ANSWER); //TODO
	REGN(2503, 18, HEADER_SC_LOGIN_ERROR); //TODO
	REGV(2504, 13, HEADER_CA_LOGIN_OTP); //TODO
	REGV(2505, 4, HEADER_SC_SOCT); //TODO
	REGV(2506, 23, HEADER_ZC_SKILL_ENTRY5); //TODO
	REGN(2507, 17, HEADER_ZC_USE_SKILL2); //TODO
	REGV(2508, 4, HEADER_ZC_SECRETSCAN_DATA); //TODO
	REGN(2509, 8, HEADER_ZC_MSG_COLOR); //TODO
	REGN(2510, 102, HEADER_CZ_ITEM_CREATE_EX); //TODO
	REGV(2511, 4, HEADER_ZC_NPROTECTGAMEGUARDCSAUTH); //TODO
	REGV(2512, 4, HEADER_CZ_NPROTECTGAMEGUARDCSAUTH); //TODO
	REGN(2513, 14, HEADER_ZC_PROGRESS_ACTOR); //TODO
	REGV(2514, 28, HEADER_ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5); //TODO
	REGV(2515, 28, HEADER_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5); //TODO
	REGN(2516, 2, HEADER_CZ_NPC_TRADE_QUIT); //TODO
	REGV(2517, 4, HEADER_ZC_NPC_MARKET_OPEN); //TODO
	REGV(2518, 4, HEADER_CZ_NPC_MARKET_PURCHASE); //TODO
	REGV(2519, 4, HEADER_ZC_NPC_MARKET_PURCHASE_RESULT); //TODO
	REGN(2520, 2, HEADER_CZ_NPC_MARKET_CLOSE); //TODO
	REGN(2521, 4, HEADER_CZ_REQ_GUILDSTORAGE_LOG); //TODO
	REGN(2522, 6, HEADER_ZC_ACK_GUILDSTORAGE_LOG); //TODO
//	REGN(2523, 0, HEADER_LAST); // dummy
}
